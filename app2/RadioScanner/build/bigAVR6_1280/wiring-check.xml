<nesc xmlns="http://www.tinyos.net/nesC">
  <wiring>
    <wire loc="23:RadioScannerAppC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x7f07824634e0"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x7f07824ab720"/></to>
    </wire>
    <wire loc="72:../tinyos_ws18/tos/system/MainC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x7f07824ab720"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x7f07824a9e20"/></to>
    </wire>
    <wire loc="24:RadioScannerAppC.nc">
      <from><interface-ref name="Glcd" scoped="" ref="0x7f0782452ce0"/></from>
      <to><interface-ref name="Glcd" scoped="" ref="0x7f0781ebe220"/></to>
    </wire>
    <wire loc="18:../tinyos_ws18/tos/lib_ecs/glcd/GlcdC.nc">
      <from><interface-ref name="Glcd" scoped="" ref="0x7f0781ebe220"/></from>
      <to><interface-ref name="Glcd" scoped="" ref="0x7f0781e8dbf0"/></to>
    </wire>
    <wire loc="25:RadioScannerAppC.nc">
      <from><interface-ref name="Lcd" scoped="" ref="0x7f078244b6b0"/></from>
      <to><interface-ref name="BufferedLcd" scoped="" ref="0x7f0781392590"/></to>
    </wire>
    <wire loc="16:../tinyos_ws18/tos/lib_ecs/lcd/BufferedLcdC.nc">
      <from><interface-ref name="BufferedLcd" scoped="" ref="0x7f0781392590"/></from>
      <to><interface-ref name="BufferedLcd" scoped="" ref="0x7f07811fc020"/></to>
    </wire>
    <wire loc="26:RadioScannerAppC.nc">
      <from><interface-ref name="DBInit" scoped="" ref="0x7f0782451640"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f0782336b70"/></to>
    </wire>
    <wire loc="32:Database/DatabaseC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f0782336b70"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f078231d0c0"/></to>
    </wire>
    <wire loc="27:RadioScannerAppC.nc">
      <from><interface-ref name="DB" scoped="" ref="0x7f0782450020"/></from>
      <to><interface-ref name="Database" scoped="" ref="0x7f07823352d0"/></to>
    </wire>
    <wire loc="33:Database/DatabaseC.nc">
      <from><interface-ref name="Database" scoped="" ref="0x7f07823352d0"/></from>
      <to><interface-ref name="Database" scoped="" ref="0x7f078231d6f0"/></to>
    </wire>
    <wire loc="28:RadioScannerAppC.nc">
      <from><interface-ref name="RadioInit" scoped="" ref="0x7f078244a020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f07819290c0"/></to>
    </wire>
    <wire loc="26:FMClick/FMClickC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f07819290c0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f0781927440"/></to>
    </wire>
    <wire loc="29:RadioScannerAppC.nc">
      <from><interface-ref name="Radio" scoped="" ref="0x7f0782437d60"/></from>
      <to><interface-ref name="FMClick" scoped="" ref="0x7f07819296e0"/></to>
    </wire>
    <wire loc="27:FMClick/FMClickC.nc">
      <from><interface-ref name="FMClick" scoped="" ref="0x7f07819296e0"/></from>
      <to><interface-ref name="FMClick" scoped="" ref="0x7f0781927a60"/></to>
    </wire>
    <wire loc="30:RadioScannerAppC.nc">
      <from><interface-ref name="Keyboard" scoped="" ref="0x7f0782434600"/></from>
      <to><interface-ref name="PS2" scoped="" ref="0x7f0781404e60"/></to>
    </wire>
    <wire loc="20:PS2/PS2C.nc">
      <from><interface-ref name="PS2" scoped="" ref="0x7f0781404e60"/></from>
      <to><interface-ref name="PS2" scoped="" ref="0x7f07813db860"/></to>
    </wire>
    <wire loc="31:RadioScannerAppC.nc">
      <from><interface-ref name="volumeKnob" scoped="" ref="0x7f0782430340"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x7f07813913e0"/></to>
    </wire>
    <wire loc="22:VolumeAdc/VolumeAdcC.nc">
      <from><interface-ref name="Read" scoped="" ref="0x7f07813913e0"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x7f078123dbe0"/></to>
    </wire>
    <wire loc="32:RadioScannerAppC.nc">
      <from><interface-ref name="VolumeTimer" scoped="" ref="0x7f0782425820"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f07811d6d00"/></to>
    </wire>
    <wire loc="52:../tinyos_ws18/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f07811d6d00"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f078212aaa0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="33:RadioScannerAppC.nc">
      <from><interface-ref name="DisplayTimer" scoped="" ref="0x7f0782422cb0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f07811cf750"/></to>
    </wire>
    <wire loc="52:../tinyos_ws18/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f07811cf750"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f078212aaa0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="34:RadioScannerAppC.nc">
      <from><interface-ref name="ErrorTimer" scoped="" ref="0x7f078241c1c0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f07811c80b0"/></to>
    </wire>
    <wire loc="52:../tinyos_ws18/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f07811c80b0"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f078212aaa0"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="17:../tinyos_ws18/tos/lib_ecs/lcd/HplLcdC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f07824aabf0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f07811f07c0"/></to>
    </wire>
    <wire loc="19:../tinyos_ws18/tos/lib_ecs/lcd/BufferedLcdC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f07824aabf0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f07811f6c30"/></to>
    </wire>
    <wire loc="103:../tinyos_ws18/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f07824aabf0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f0780775c00"/></to>
    </wire>
    <wire loc="103:../tinyos_ws18/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f07824aabf0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f0780c72620"/></to>
    </wire>
    <wire loc="96:../tinyos_ws18/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f07824aabf0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f0780d214c0"/></to>
    </wire>
    <wire loc="20:../tinyos_ws18/tos/lib_ecs/glcd/GlcdC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f07824aabf0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f0781e8b020"/></to>
    </wire>
    <wire loc="53:../tinyos_ws18/tos/system/TimerMilliP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f07824aabf0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f07821247a0"/></to>
    </wire>
    <wire loc="31:../tinyos_ws18/tos/lib_ecs/arp/ArpC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f07824aabf0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f0782169020"/></to>
    </wire>
    <wire loc="31:../tinyos_ws18/tos/lib_ecs/ip/IpTransceiverC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f07824aabf0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f0782244470"/></to>
    </wire>
    <wire loc="67:../tinyos_ws18/tos/system/MainC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x7f078247b4b0"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x7f0782638a20"/></to>
    </wire>
    <wire loc="53:../tinyos_ws18/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x7f0782638a20"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x7f0782539990"/></to>
    </wire>
    <wire loc="68:../tinyos_ws18/tos/system/MainC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x7f078247a020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f07824add00"/></to>
    </wire>
    <wire loc="58:../tinyos_ws18/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f07824add00"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f078249f0c0"/></to>
    </wire>
    <wire loc="71:../tinyos_ws18/tos/system/MainC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f078247a720"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x7f07824aabf0"/></to>
    </wire>
    <wire loc="71:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x7f07824a7d50"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f078135d830"/></to>
    </wire>
    <wire loc="59:../tinyos_ws18/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="Atm128Calibrate" scoped="" ref="0x7f07824a7020"/></from>
      <to><interface-ref name="Atm128Calibrate" scoped="" ref="0x7f078248d020"/></to>
    </wire>
    <wire loc="61:../tinyos_ws18/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="MeasureClock" scoped="" ref="0x7f078249e020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f078248e860"/></to>
    </wire>
    <wire loc="55:../tinyos_ws18/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x7f078249f7a0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f0781652ab0"/></to>
    </wire>
    <wire loc="62:../tinyos_ws18/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x7f078249f7a0"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x7f0782497020"/></to>
    </wire>
    <wire loc="63:../tinyos_ws18/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x7f07824976f0"/></from>
      <to><interface-ref name="SubInit" scoped="" ref="0x7f07824a7d50"/></to>
    </wire>
    <wire loc="54:../tinyos_ws18/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="TaskBasic" scoped="" ref="0x7f078262ebd0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f07825389e0"/></to>
    </wire>
    <wire loc="55:../tinyos_ws18/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="McuSleep" scoped="" ref="0x7f07825330d0"/></from>
      <to><interface-ref name="McuSleep" scoped="" ref="0x7f0782551080"/></to>
    </wire>
    <wire loc="65:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280Timer2SyncC.nc">
      <from><interface-ref name="McuPowerOverride" scoped="" ref="0x7f0782516de0"/></from>
      <to><interface-ref name="McuPowerOverride" scoped="" ref="0x7f0782070020"/></to>
    </wire>
    <wire loc="111:RadioScannerP.nc">
      <from><interface-ref name="inputTuneChannel" scoped="" ref="0x7f078240c2b0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f078262ebd0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="113:RadioScannerP.nc">
      <from><interface-ref name="setVolume" scoped="" ref="0x7f078240a2a0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f078262ebd0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="114:RadioScannerP.nc">
      <from><interface-ref name="startSeekUp" scoped="" ref="0x7f07824082a0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f078262ebd0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="130:RadioScannerP.nc">
      <from><interface-ref name="handleChar" scoped="" ref="0x7f07823fe410"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f078262ebd0"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="315:RadioScannerP.nc">
      <from><interface-ref name="seekBand" scoped="" ref="0x7f07823d8200"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f078262ebd0"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="118:RadioScannerP.nc">
      <from><interface-ref name="displayHardError" scoped="" ref="0x7f07824032b0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f078262ebd0"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="112:RadioScannerP.nc">
      <from><interface-ref name="displayChannelInfo" scoped="" ref="0x7f078240b330"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f078262ebd0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="116:RadioScannerP.nc">
      <from><interface-ref name="startTune" scoped="" ref="0x7f07824064a0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f078262ebd0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="117:RadioScannerP.nc">
      <from><interface-ref name="addChannel" scoped="" ref="0x7f0782405380"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f078262ebd0"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="119:RadioScannerP.nc">
      <from><interface-ref name="displaySoftError" scoped="" ref="0x7f07824022b0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f078262ebd0"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="115:RadioScannerP.nc">
      <from><interface-ref name="startSeekDown" scoped="" ref="0x7f07824072a0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f078262ebd0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="320:RadioScannerP.nc">
      <from><interface-ref name="readyScreen" scoped="" ref="0x7f07823d7e60"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f078262ebd0"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="22:../tinyos_ws18/tos/lib_ecs/llc/LlcTransceiverC.nc">
      <from><interface-ref name="Mac" scoped="" ref="0x7f07821ea990"/></from>
      <to><interface-ref name="Mac" scoped="" ref="0x7f07821f0ca0"/></to>
    </wire>
    <wire loc="35:Database/DatabaseC.nc">
      <from><interface-ref name="Mac" scoped="" ref="0x7f07821ea990"/></from>
      <to><interface-ref name="Mac" scoped="" ref="0x7f0781ebf6f0"/></to>
    </wire>
    <wire loc="19:../tinyos_ws18/tos/chips_ecs/enc28j60/Enc28j60C.nc">
      <from><interface-ref name="Mac" scoped="" ref="0x7f0781ebf6f0"/></from>
      <to><interface-ref name="Mac" scoped="" ref="0x7f0781be4b00"/></to>
    </wire>
    <wire loc="37:Database/DatabaseC.nc">
      <from><interface-ref name="UdpSend" scoped="" ref="0x7f0782313a10"/></from>
      <to><interface-ref name="UdpSend" scoped="" ref="0x7f07819801f0"/></to>
    </wire>
    <wire loc="20:../tinyos_ws18/tos/lib_ecs/udp/UdpC.nc">
      <from><interface-ref name="UdpSend" scoped="" ref="0x7f07819801f0"/></from>
      <to><interface-ref name="UdpSend" scoped="" ref="0x7f0780cb5c50"/></to>
    </wire>
    <wire loc="38:Database/DatabaseC.nc">
      <from><interface-ref name="UdpReceive" scoped="" ref="0x7f0782311c30"/></from>
      <to><interface-ref name="UdpReceive" scoped="" ref="0x7f0781980990"/></to>
    </wire>
    <wire loc="22:../tinyos_ws18/tos/lib_ecs/udp/UdpC.nc">
      <from><interface-ref name="UdpReceive" scoped="" ref="0x7f0781980990"/></from>
      <to><interface-ref name="UdpReceive" scoped="" ref="0x7f0781979330"/>
      <arguments>
        <value cst="I:50000">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f0782f56610"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="39:Database/DatabaseC.nc">
      <from><interface-ref name="IpControl" scoped="" ref="0x7f078230cbb0"/></from>
      <to><interface-ref name="IpControl" scoped="" ref="0x7f0782255390"/></to>
    </wire>
    <wire loc="28:../tinyos_ws18/tos/lib_ecs/ip/IpTransceiverC.nc">
      <from><interface-ref name="IpControl" scoped="" ref="0x7f0782255390"/></from>
      <to><interface-ref name="IpControl" scoped="" ref="0x7f0782247990"/></to>
    </wire>
    <wire loc="40:Database/DatabaseC.nc">
      <from><interface-ref name="Control" scoped="" ref="0x7f0782310020"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f0781be6330"/></to>
    </wire>
    <wire loc="26:../tinyos_ws18/tos/chips_ecs/enc28j60/Enc28j60C.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f0781be6330"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f0781ba9cf0"/></to>
    </wire>
    <wire loc="42:Database/DatabaseC.nc">
      <from><interface-ref name="Glcd" scoped="" ref="0x7f0782310ad0"/></from>
      <to><interface-ref name="Glcd" scoped="" ref="0x7f0781ebe220"/></to>
    </wire>
    <wire loc="79:Database/DatabaseP.nc">
      <from><interface-ref name="fetchList" scoped="" ref="0x7f07822fcbc0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f078262ebd0"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="77:Database/DatabaseP.nc">
      <from><interface-ref name="sendTask" scoped="" ref="0x7f07822ffe00"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f078262ebd0"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="78:Database/DatabaseP.nc">
      <from><interface-ref name="recvTask" scoped="" ref="0x7f07822fdce0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f078262ebd0"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="24:../tinyos_ws18/tos/lib_ecs/ip/IpTransceiverC.nc">
      <from><interface-ref name="PacketSender" scoped="" ref="0x7f0782257ba0"/></from>
      <to><interface-ref name="PacketSender" scoped="" ref="0x7f078224a740"/></to>
    </wire>
    <wire loc="32:../tinyos_ws18/tos/lib_ecs/ip/IpTransceiverC.nc">
      <from><interface-ref name="IpPacket" scoped="" ref="0x7f0782252020"/></from>
      <to><interface-ref name="IpPacket" scoped="" ref="0x7f0782244ae0"/></to>
    </wire>
    <wire loc="25:../tinyos_ws18/tos/lib_ecs/ip/IpTransceiverC.nc">
      <from><interface-ref name="IpReceive" scoped="" ref="0x7f0782253cc0"/></from>
      <to><interface-ref name="IpReceive" scoped="" ref="0x7f0782247320"/></to>
    </wire>
    <wire loc="26:../tinyos_ws18/tos/lib_ecs/ip/IpTransceiverC.nc">
      <from><interface-ref name="LlcSend" scoped="" ref="0x7f0782241860"/></from>
      <to><interface-ref name="LlcSend" scoped="" ref="0x7f07821fc930"/></to>
    </wire>
    <wire loc="20:../tinyos_ws18/tos/lib_ecs/llc/LlcC.nc">
      <from><interface-ref name="LlcSend" scoped="" ref="0x7f07821fc930"/></from>
      <to><interface-ref name="LlcSend" scoped="" ref="0x7f07811a71b0"/></to>
    </wire>
    <wire loc="27:../tinyos_ws18/tos/lib_ecs/ip/IpTransceiverC.nc">
      <from><interface-ref name="LlcReceive" scoped="" ref="0x7f078223f2f0"/></from>
      <to><interface-ref name="LlcReceive" scoped="" ref="0x7f0782182120"/></to>
    </wire>
    <wire loc="23:../tinyos_ws18/tos/lib_ecs/llc/LlcC.nc">
      <from><interface-ref name="LlcReceive" scoped="" ref="0x7f0782182120"/></from>
      <to><interface-ref name="LlcReceive" scoped="" ref="0x7f07821f6890"/>
      <arguments>
        <value cst="I:2048">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f0782f56610"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="29:../tinyos_ws18/tos/lib_ecs/ip/IpTransceiverC.nc">
      <from><interface-ref name="Arp" scoped="" ref="0x7f0782237c60"/></from>
      <to><interface-ref name="Arp" scoped="" ref="0x7f07821813f0"/></to>
    </wire>
    <wire loc="22:../tinyos_ws18/tos/lib_ecs/arp/ArpC.nc">
      <from><interface-ref name="Arp" scoped="" ref="0x7f07821813f0"/></from>
      <to><interface-ref name="Arp" scoped="" ref="0x7f078217d2d0"/></to>
    </wire>
    <wire loc="30:../tinyos_ws18/tos/lib_ecs/ip/IpTransceiverC.nc">
      <from><interface-ref name="IpControl" scoped="" ref="0x7f0782181bf0"/></from>
      <to><interface-ref name="IpControl" scoped="" ref="0x7f0782247990"/></to>
    </wire>
    <wire loc="21:../tinyos_ws18/tos/lib_ecs/llc/LlcC.nc">
      <from><interface-ref name="LlcQueue" scoped="" ref="0x7f07811a7950"/></from>
      <to><interface-ref name="LlcQueue" scoped="" ref="0x7f07821c8410"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="20:../tinyos_ws18/tos/lib_ecs/llc/LlcTransceiverC.nc">
      <from><interface-ref name="PacketSender" scoped="" ref="0x7f07821fac80"/></from>
      <to><interface-ref name="PacketSender" scoped="" ref="0x7f07821ef6c0"/></to>
    </wire>
    <wire loc="21:../tinyos_ws18/tos/lib_ecs/llc/LlcTransceiverC.nc">
      <from><interface-ref name="LlcReceive" scoped="" ref="0x7f07821f6890"/></from>
      <to><interface-ref name="LlcReceive" scoped="" ref="0x7f07821ea360"/></to>
    </wire>
    <wire loc="23:../tinyos_ws18/tos/lib_ecs/llc/LlcTransceiverC.nc">
      <from><interface-ref name="MacControl" scoped="" ref="0x7f07821ed550"/></from>
      <to><interface-ref name="MacControl" scoped="" ref="0x7f07821e9640"/></to>
    </wire>
    <wire loc="20:../tinyos_ws18/tos/lib_ecs/llc/LlcQueueC.nc">
      <from><interface-ref name="LlcQueue" scoped="" ref="0x7f07821c8410"/></from>
      <to><interface-ref name="LlcQueue" scoped="" ref="0x7f0782193a00"/></to>
    </wire>
    <wire loc="19:../tinyos_ws18/tos/lib_ecs/llc/LlcQueueC.nc">
      <from><interface-ref name="PacketSender" scoped="" ref="0x7f0782196020"/></from>
      <to><interface-ref name="PacketSender" scoped="" ref="0x7f07821fac80"/></to>
    </wire>
    <wire loc="21:../tinyos_ws18/tos/lib_ecs/llc/LlcQueueC.nc">
      <from><interface-ref name="PacketQueue" scoped="" ref="0x7f07821904f0"/></from>
      <to><interface-ref name="PacketQueue" scoped="" ref="0x7f07821c5060"/></to>
    </wire>
    <wire loc="17:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueueC.nc">
      <from><interface-ref name="PacketQueue" scoped="" ref="0x7f07821c5060"/></from>
      <to><interface-ref name="PacketQueue" scoped="" ref="0x7f078119d240"/></to>
    </wire>
    <wire loc="16:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueueC.nc">
      <from><interface-ref name="PacketSender" scoped="" ref="0x7f078119b020"/></from>
      <to><interface-ref name="PacketSender" scoped="" ref="0x7f0782196020"/></to>
    </wire>
    <wire loc="26:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueueP.nc">
      <from><interface-ref name="sendNext" scoped="" ref="0x7f0781199630"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f078262ebd0"/>
      <arguments>
        <value cst="I:15">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="23:../tinyos_ws18/tos/lib_ecs/arp/ArpC.nc">
      <from><interface-ref name="Timeout" scoped="" ref="0x7f07821762f0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f0781f74140"/></to>
    </wire>
    <wire loc="52:../tinyos_ws18/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f0781f74140"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f078212aaa0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="24:../tinyos_ws18/tos/lib_ecs/arp/ArpC.nc">
      <from><interface-ref name="ClearCacheTimeout" scoped="" ref="0x7f07821718a0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f0781f6eb00"/></to>
    </wire>
    <wire loc="52:../tinyos_ws18/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f0781f6eb00"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f078212aaa0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="25:../tinyos_ws18/tos/lib_ecs/arp/ArpC.nc">
      <from><interface-ref name="LlcSend" scoped="" ref="0x7f078216cae0"/></from>
      <to><interface-ref name="LlcSend" scoped="" ref="0x7f0781f67700"/></to>
    </wire>
    <wire loc="20:../tinyos_ws18/tos/lib_ecs/llc/LlcC.nc">
      <from><interface-ref name="LlcSend" scoped="" ref="0x7f0781f67700"/></from>
      <to><interface-ref name="LlcSend" scoped="" ref="0x7f078110f380"/></to>
    </wire>
    <wire loc="26:../tinyos_ws18/tos/lib_ecs/arp/ArpC.nc">
      <from><interface-ref name="LlcReceive" scoped="" ref="0x7f078216b320"/></from>
      <to><interface-ref name="LlcReceive" scoped="" ref="0x7f0781f66020"/></to>
    </wire>
    <wire loc="23:../tinyos_ws18/tos/lib_ecs/llc/LlcC.nc">
      <from><interface-ref name="LlcReceive" scoped="" ref="0x7f0781f66020"/></from>
      <to><interface-ref name="LlcReceive" scoped="" ref="0x7f07821f6890"/>
      <arguments>
        <value cst="I:2054">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f0782f56610"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="27:../tinyos_ws18/tos/lib_ecs/arp/ArpC.nc">
      <from><interface-ref name="IpControl" scoped="" ref="0x7f078216b990"/></from>
      <to><interface-ref name="IpControl" scoped="" ref="0x7f0782181bf0"/></to>
    </wire>
    <wire loc="28:../tinyos_ws18/tos/lib_ecs/arp/ArpC.nc">
      <from><interface-ref name="MacControl" scoped="" ref="0x7f078216a960"/></from>
      <to><interface-ref name="MacControl" scoped="" ref="0x7f07821ed550"/></to>
    </wire>
    <wire loc="29:../tinyos_ws18/tos/lib_ecs/arp/ArpC.nc">
      <from><interface-ref name="PacketQueue" scoped="" ref="0x7f07821784a0"/></from>
      <to><interface-ref name="PacketQueue" scoped="" ref="0x7f0781f644a0"/></to>
    </wire>
    <wire loc="17:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueueC.nc">
      <from><interface-ref name="PacketQueue" scoped="" ref="0x7f0781f644a0"/></from>
      <to><interface-ref name="PacketQueue" scoped="" ref="0x7f07811060b0"/></to>
    </wire>
    <wire loc="30:../tinyos_ws18/tos/lib_ecs/arp/ArpC.nc">
      <from><interface-ref name="PacketSender" scoped="" ref="0x7f0781f61360"/></from>
      <to><interface-ref name="PacketSender" scoped="" ref="0x7f078217dc90"/></to>
    </wire>
    <wire loc="54:../tinyos_ws18/tos/system/TimerMilliP.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x7f078212aaa0"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f07821215a0"/></to>
    </wire>
    <wire loc="61:../tinyos_ws18/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x7f07821215a0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f0781f95150"/></to>
    </wire>
    <wire loc="59:../tinyos_ws18/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f07821247a0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f07821177a0"/></to>
    </wire>
    <wire loc="65:../tinyos_ws18/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x7f078211a020"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x7f0781f86790"/></to>
    </wire>
    <wire loc="34:../tinyos_ws18/tos/platforms/bigAVR6_1280/AlarmCounterMilliP.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f07821177a0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f0782014ba0"/></to>
    </wire>
    <wire loc="62:../tinyos_ws18/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="TimerFrom" scoped="" ref="0x7f0781f8f640"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f0781fe4830"/></to>
    </wire>
    <wire loc="63:../tinyos_ws18/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7f0781fdfcd0"/></from>
      <to><interface-ref name="AlarmMilli32" scoped="" ref="0x7f0782113440"/></to>
    </wire>
    <wire loc="35:../tinyos_ws18/tos/platforms/bigAVR6_1280/AlarmCounterMilliP.nc">
      <from><interface-ref name="AlarmMilli32" scoped="" ref="0x7f0782113440"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f07820134b0"/></to>
    </wire>
    <wire loc="66:../tinyos_ws18/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f0781f85a60"/></from>
      <to><interface-ref name="CounterMilli32" scoped="" ref="0x7f0782104b40"/></to>
    </wire>
    <wire loc="36:../tinyos_ws18/tos/platforms/bigAVR6_1280/AlarmCounterMilliP.nc">
      <from><interface-ref name="CounterMilli32" scoped="" ref="0x7f0782104b40"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f078200f8d0"/></to>
    </wire>
    <wire loc="46:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f078200f8d0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f0781176260"/></to>
    </wire>
    <wire loc="44:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f0782014ba0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f078117a670"/></to>
    </wire>
    <wire loc="45:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7f07820134b0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f078117ae80"/></to>
    </wire>
    <wire loc="48:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f07811735d0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f078208a190"/></to>
    </wire>
    <wire loc="67:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280Timer2SyncC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f078208a190"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f078207b270"/></to>
    </wire>
    <wire loc="49:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncC.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x7f078116e7d0"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x7f0782085570"/></to>
    </wire>
    <wire loc="68:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280Timer2SyncC.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x7f0782085570"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x7f07820767b0"/></to>
    </wire>
    <wire loc="50:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncC.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x7f078116da20"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f07820849d0"/></to>
    </wire>
    <wire loc="69:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280Timer2SyncC.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x7f07820849d0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f0782075b60"/></to>
    </wire>
    <wire loc="51:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncC.nc">
      <from><interface-ref name="TimerSync" scoped="" ref="0x7f0781169dd0"/></from>
      <to><interface-ref name="TimerSync" scoped="" ref="0x7f0782080d60"/></to>
    </wire>
    <wire loc="70:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280Timer2SyncC.nc">
      <from><interface-ref name="TimerSync" scoped="" ref="0x7f0782080d60"/></from>
      <to><interface-ref name="TimerSync" scoped="" ref="0x7f0782070750"/></to>
    </wire>
    <wire loc="74:../tinyos_ws18/tos/lib/timer/AlarmToTimerC.nc">
      <from><interface-ref name="fired" scoped="" ref="0x7f0781fda020"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f078262ebd0"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="71:../tinyos_ws18/tos/lib/timer/VirtualizeTimerC.nc">
      <from><interface-ref name="updateFromTimer" scoped="" ref="0x7f0781f8aa00"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f078262ebd0"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="21:../tinyos_ws18/tos/lib_ecs/llc/LlcC.nc">
      <from><interface-ref name="LlcQueue" scoped="" ref="0x7f078110fb20"/></from>
      <to><interface-ref name="LlcQueue" scoped="" ref="0x7f07821c8410"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="16:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueueC.nc">
      <from><interface-ref name="PacketSender" scoped="" ref="0x7f0781105dd0"/></from>
      <to><interface-ref name="PacketSender" scoped="" ref="0x7f0781f61360"/></to>
    </wire>
    <wire loc="26:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueueP.nc">
      <from><interface-ref name="sendNext" scoped="" ref="0x7f07811024e0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f078262ebd0"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="18:PingC.nc">
      <from><interface-ref name="IcmpSend" scoped="" ref="0x7f0781ec77a0"/></from>
      <to><interface-ref name="IcmpSend" scoped="" ref="0x7f0781f545f0"/></to>
    </wire>
    <wire loc="20:../tinyos_ws18/tos/lib_ecs/icmp/IcmpC.nc">
      <from><interface-ref name="IcmpSend" scoped="" ref="0x7f0781f545f0"/></from>
      <to><interface-ref name="IcmpSend" scoped="" ref="0x7f07810f0630"/></to>
    </wire>
    <wire loc="19:PingC.nc">
      <from><interface-ref name="IcmpReceive" scoped="" ref="0x7f0781ec7130"/></from>
      <to><interface-ref name="IcmpReceive" scoped="" ref="0x7f0781f54d90"/></to>
    </wire>
    <wire loc="22:../tinyos_ws18/tos/lib_ecs/icmp/IcmpC.nc">
      <from><interface-ref name="IcmpReceive" scoped="" ref="0x7f0781f54d90"/></from>
      <to><interface-ref name="IcmpReceive" scoped="" ref="0x7f0781f44610"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="21:../tinyos_ws18/tos/lib_ecs/icmp/IcmpC.nc">
      <from><interface-ref name="IcmpQueue" scoped="" ref="0x7f07810f0dd0"/></from>
      <to><interface-ref name="IcmpQueue" scoped="" ref="0x7f0781ee4410"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="19:../tinyos_ws18/tos/lib_ecs/icmp/IcmpTransceiverC.nc">
      <from><interface-ref name="PacketSender" scoped="" ref="0x7f0781f4e9e0"/></from>
      <to><interface-ref name="PacketSender" scoped="" ref="0x7f0781f10290"/></to>
    </wire>
    <wire loc="20:../tinyos_ws18/tos/lib_ecs/icmp/IcmpTransceiverC.nc">
      <from><interface-ref name="IcmpReceive" scoped="" ref="0x7f0781f44610"/></from>
      <to><interface-ref name="IcmpReceive" scoped="" ref="0x7f0781f0fdf0"/></to>
    </wire>
    <wire loc="21:../tinyos_ws18/tos/lib_ecs/icmp/IcmpTransceiverC.nc">
      <from><interface-ref name="IpReceive" scoped="" ref="0x7f0781f0dc90"/></from>
      <to><interface-ref name="IpReceive" scoped="" ref="0x7f0781f41bd0"/></to>
    </wire>
    <wire loc="22:../tinyos_ws18/tos/lib_ecs/ip/IpC.nc">
      <from><interface-ref name="IpReceive" scoped="" ref="0x7f0781f41bd0"/></from>
      <to><interface-ref name="IpReceive" scoped="" ref="0x7f0782253cc0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f0782f56610"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="22:../tinyos_ws18/tos/lib_ecs/icmp/IcmpTransceiverC.nc">
      <from><interface-ref name="IpSend" scoped="" ref="0x7f0781f0d490"/></from>
      <to><interface-ref name="IpSend" scoped="" ref="0x7f0781f41430"/></to>
    </wire>
    <wire loc="20:../tinyos_ws18/tos/lib_ecs/ip/IpC.nc">
      <from><interface-ref name="IpSend" scoped="" ref="0x7f0781f41430"/></from>
      <to><interface-ref name="IpSend" scoped="" ref="0x7f07810ea3f0"/></to>
    </wire>
    <wire loc="21:../tinyos_ws18/tos/lib_ecs/ip/IpC.nc">
      <from><interface-ref name="IpQueue" scoped="" ref="0x7f07810eab90"/></from>
      <to><interface-ref name="IpQueue" scoped="" ref="0x7f0781f30d60"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="19:../tinyos_ws18/tos/lib_ecs/ip/IpQueueC.nc">
      <from><interface-ref name="IpQueue" scoped="" ref="0x7f0781f30d60"/></from>
      <to><interface-ref name="IpQueue" scoped="" ref="0x7f0781f259f0"/></to>
    </wire>
    <wire loc="20:../tinyos_ws18/tos/lib_ecs/ip/IpQueueC.nc">
      <from><interface-ref name="PacketQueue" scoped="" ref="0x7f0781f214e0"/></from>
      <to><interface-ref name="PacketQueue" scoped="" ref="0x7f0781f2a060"/></to>
    </wire>
    <wire loc="17:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueueC.nc">
      <from><interface-ref name="PacketQueue" scoped="" ref="0x7f0781f2a060"/></from>
      <to><interface-ref name="PacketQueue" scoped="" ref="0x7f07810e1a00"/></to>
    </wire>
    <wire loc="21:../tinyos_ws18/tos/lib_ecs/ip/IpQueueC.nc">
      <from><interface-ref name="PacketSender" scoped="" ref="0x7f0781f28020"/></from>
      <to><interface-ref name="PacketSender" scoped="" ref="0x7f0782257ba0"/></to>
    </wire>
    <wire loc="16:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueueC.nc">
      <from><interface-ref name="PacketSender" scoped="" ref="0x7f07810df770"/></from>
      <to><interface-ref name="PacketSender" scoped="" ref="0x7f0781f28020"/></to>
    </wire>
    <wire loc="26:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueueP.nc">
      <from><interface-ref name="sendNext" scoped="" ref="0x7f07810ddd60"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f078262ebd0"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="19:../tinyos_ws18/tos/lib_ecs/icmp/IcmpQueueC.nc">
      <from><interface-ref name="IcmpQueue" scoped="" ref="0x7f0781ee4410"/></from>
      <to><interface-ref name="IcmpQueue" scoped="" ref="0x7f0781eda450"/></to>
    </wire>
    <wire loc="20:../tinyos_ws18/tos/lib_ecs/icmp/IcmpQueueC.nc">
      <from><interface-ref name="PacketQueue" scoped="" ref="0x7f0781edae30"/></from>
      <to><interface-ref name="PacketQueue" scoped="" ref="0x7f0781ee2ae0"/></to>
    </wire>
    <wire loc="17:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueueC.nc">
      <from><interface-ref name="PacketQueue" scoped="" ref="0x7f0781ee2ae0"/></from>
      <to><interface-ref name="PacketQueue" scoped="" ref="0x7f07810c6e30"/></to>
    </wire>
    <wire loc="21:../tinyos_ws18/tos/lib_ecs/icmp/IcmpQueueC.nc">
      <from><interface-ref name="PacketSender" scoped="" ref="0x7f0781edf9d0"/></from>
      <to><interface-ref name="PacketSender" scoped="" ref="0x7f0781f4e9e0"/></to>
    </wire>
    <wire loc="16:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueueC.nc">
      <from><interface-ref name="PacketSender" scoped="" ref="0x7f07810c3bd0"/></from>
      <to><interface-ref name="PacketSender" scoped="" ref="0x7f0781edf9d0"/></to>
    </wire>
    <wire loc="26:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueueP.nc">
      <from><interface-ref name="sendNext" scoped="" ref="0x7f07810c0290"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f078262ebd0"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="19:../tinyos_ws18/tos/lib_ecs/glcd/GlcdC.nc">
      <from><interface-ref name="Hpl" scoped="" ref="0x7f0781e84640"/></from>
      <to><interface-ref name="HplKS0108" scoped="" ref="0x7f0781ebc640"/></to>
    </wire>
    <wire loc="18:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108C.nc">
      <from><interface-ref name="HplKS0108" scoped="" ref="0x7f0781ebc640"/></from>
      <to><interface-ref name="HplKS0108" scoped="" ref="0x7f0781e15be0"/></to>
    </wire>
    <wire loc="20:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108C.nc">
      <from><interface-ref name="CS_0" scoped="" ref="0x7f0781e0b7b0"/></from>
      <to><interface-ref name="PortE2" scoped="" ref="0x7f0781da8350"/></to>
    </wire>
    <wire loc="175:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE2" scoped="" ref="0x7f0781da8350"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7f0781d05020"/></to>
    </wire>
    <wire loc="21:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108C.nc">
      <from><interface-ref name="CS_1" scoped="" ref="0x7f0781e119c0"/></from>
      <to><interface-ref name="PortE3" scoped="" ref="0x7f0781da7670"/></to>
    </wire>
    <wire loc="176:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE3" scoped="" ref="0x7f0781da7670"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7f0781d042b0"/></to>
    </wire>
    <wire loc="22:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108C.nc">
      <from><interface-ref name="RS" scoped="" ref="0x7f0781e10cd0"/></from>
      <to><interface-ref name="PortE4" scoped="" ref="0x7f0781da6990"/></to>
    </wire>
    <wire loc="177:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE4" scoped="" ref="0x7f0781da6990"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7f0781d03440"/></to>
    </wire>
    <wire loc="23:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108C.nc">
      <from><interface-ref name="RW" scoped="" ref="0x7f0781e08020"/></from>
      <to><interface-ref name="PortE5" scoped="" ref="0x7f0781da5cb0"/></to>
    </wire>
    <wire loc="178:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE5" scoped="" ref="0x7f0781da5cb0"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7f0781d025d0"/></to>
    </wire>
    <wire loc="24:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108C.nc">
      <from><interface-ref name="EN" scoped="" ref="0x7f0781e07370"/></from>
      <to><interface-ref name="PortE6" scoped="" ref="0x7f0781da3020"/></to>
    </wire>
    <wire loc="179:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE6" scoped="" ref="0x7f0781da3020"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7f0781d01760"/></to>
    </wire>
    <wire loc="25:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108C.nc">
      <from><interface-ref name="RST" scoped="" ref="0x7f0781e06690"/></from>
      <to><interface-ref name="PortE7" scoped="" ref="0x7f0781da2350"/></to>
    </wire>
    <wire loc="180:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE7" scoped="" ref="0x7f0781da2350"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7f0781d008f0"/></to>
    </wire>
    <wire loc="27:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108C.nc">
      <from><interface-ref name="Data" scoped="" ref="0x7f0781e04060"/></from>
      <to><interface-ref name="PortA" scoped="" ref="0x7f0781c5cc40"/></to>
    </wire>
    <wire loc="37:../tinyos_ws18/tos/chips_ecs/atm1280/HplAtm128GeneralIOFastPortC.nc">
      <from><interface-ref name="PortA" scoped="" ref="0x7f0781c5cc40"/></from>
      <to><interface-ref name="GeneralIOPort" scoped="" ref="0x7f0781c44c90"/></to>
    </wire>
    <wire loc="29:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108C.nc">
      <from><interface-ref name="BusyWait" scoped="" ref="0x7f0781dfa910"/></from>
      <to><interface-ref name="BusyWait" scoped="" ref="0x7f0781bf32e0"/></to>
    </wire>
    <wire loc="191:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG0" scoped="" ref="0x7f0781d97020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f0781ca86d0"/></to>
    </wire>
    <wire loc="165:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD1" scoped="" ref="0x7f0781db4800"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7f0781d17c10"/></to>
    </wire>
    <wire loc="67:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x7f0781d17c10"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f0780f33e20"/></to>
    </wire>
    <wire loc="69:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x7f0781d042b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f0780ec03f0"/></to>
    </wire>
    <wire loc="185:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF3" scoped="" ref="0x7f0781d9d020"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7f0781cf55d0"/></to>
    </wire>
    <wire loc="69:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x7f0781cf55d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f0780e523f0"/></to>
    </wire>
    <wire loc="196:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG5" scoped="" ref="0x7f0781d90350"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f0781c8ec90"/></to>
    </wire>
    <wire loc="143:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA6" scoped="" ref="0x7f0781dcb990"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7f0781d3fa80"/></to>
    </wire>
    <wire loc="72:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x7f0781d3fa80"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f07810639b0"/></to>
    </wire>
    <wire loc="183:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF1" scoped="" ref="0x7f0781da0990"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7f0781cf72b0"/></to>
    </wire>
    <wire loc="67:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x7f0781cf72b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f0780e5ae20"/></to>
    </wire>
    <wire loc="146:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB0" scoped="" ref="0x7f0781dc8020"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7f0781d363f0"/></to>
    </wire>
    <wire loc="66:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x7f0781d363f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f078100ca60"/></to>
    </wire>
    <wire loc="157:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC2" scoped="" ref="0x7f0781dbc020"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7f0781d25a80"/></to>
    </wire>
    <wire loc="68:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x7f0781d25a80"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f0780f990a0"/></to>
    </wire>
    <wire loc="168:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD4" scoped="" ref="0x7f0781daf060"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7f0781d122b0"/></to>
    </wire>
    <wire loc="70:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x7f0781d122b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f0780f286d0"/></to>
    </wire>
    <wire loc="72:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x7f0781d01760"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f0780eb7e20"/></to>
    </wire>
    <wire loc="138:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA1" scoped="" ref="0x7f0781dd2b20"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7f0781d452b0"/></to>
    </wire>
    <wire loc="67:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x7f0781d452b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f078107c9b0"/></to>
    </wire>
    <wire loc="149:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB3" scoped="" ref="0x7f0781dc5990"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7f0781d338f0"/></to>
    </wire>
    <wire loc="69:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x7f0781d338f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f07810013f0"/></to>
    </wire>
    <wire loc="160:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC5" scoped="" ref="0x7f0781db9990"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7f0781d21020"/></to>
    </wire>
    <wire loc="71:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x7f0781d21020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f0780f909b0"/></to>
    </wire>
    <wire loc="171:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD7" scoped="" ref="0x7f0781dac990"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7f0781d0f760"/></to>
    </wire>
    <wire loc="73:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x7f0781d0f760"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f0780f1e0a0"/></to>
    </wire>
    <wire loc="188:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF6" scoped="" ref="0x7f0781d9a990"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7f0781cf2a80"/></to>
    </wire>
    <wire loc="72:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x7f0781cf2a80"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f0780e49e20"/></to>
    </wire>
    <wire loc="194:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG3" scoped="" ref="0x7f0781d93cb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f0781c986d0"/></to>
    </wire>
    <wire loc="174:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE1" scoped="" ref="0x7f0781da9020"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7f0781d07e60"/></to>
    </wire>
    <wire loc="67:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x7f0781d07e60"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f0780ec8e20"/></to>
    </wire>
    <wire loc="141:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA4" scoped="" ref="0x7f0781dce350"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7f0781d41760"/></to>
    </wire>
    <wire loc="70:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x7f0781d41760"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f07810723f0"/></to>
    </wire>
    <wire loc="152:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB6" scoped="" ref="0x7f0781dc1350"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7f0781d30da0"/></to>
    </wire>
    <wire loc="72:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x7f0781d30da0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f0780ff8e20"/></to>
    </wire>
    <wire loc="192:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG1" scoped="" ref="0x7f0781d96670"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f0781ca3160"/></to>
    </wire>
    <wire loc="155:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC0" scoped="" ref="0x7f0781dbf990"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7f0781d277a0"/></to>
    </wire>
    <wire loc="66:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x7f0781d277a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f0780fa1c90"/></to>
    </wire>
    <wire loc="166:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD2" scoped="" ref="0x7f0781db3b20"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7f0781d16da0"/></to>
    </wire>
    <wire loc="68:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x7f0781d16da0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f0780f2e0a0"/></to>
    </wire>
    <wire loc="70:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x7f0781d03440"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f0780ebd6d0"/></to>
    </wire>
    <wire loc="186:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF4" scoped="" ref="0x7f0781d9c350"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7f0781cf4760"/></to>
    </wire>
    <wire loc="70:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x7f0781cf4760"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f0780e4f6d0"/></to>
    </wire>
    <wire loc="144:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA7" scoped="" ref="0x7f0781dcacb0"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7f0781d3ec10"/></to>
    </wire>
    <wire loc="73:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x7f0781d3ec10"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f0781060e20"/></to>
    </wire>
    <wire loc="147:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB1" scoped="" ref="0x7f0781dc7350"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7f0781d355d0"/></to>
    </wire>
    <wire loc="67:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x7f0781d355d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f0781008e20"/></to>
    </wire>
    <wire loc="158:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC3" scoped="" ref="0x7f0781dbb350"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7f0781d24c10"/></to>
    </wire>
    <wire loc="69:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x7f0781d24c10"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f0780f963f0"/></to>
    </wire>
    <wire loc="169:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD5" scoped="" ref="0x7f0781dae350"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7f0781d11440"/></to>
    </wire>
    <wire loc="71:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x7f0781d11440"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f0780f259b0"/></to>
    </wire>
    <wire loc="73:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x7f0781d008f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f0780eb30a0"/></to>
    </wire>
    <wire loc="139:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA2" scoped="" ref="0x7f0781dd1e40"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7f0781d43440"/></to>
    </wire>
    <wire loc="68:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x7f0781d43440"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f0781079e20"/></to>
    </wire>
    <wire loc="150:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB4" scoped="" ref="0x7f0781dc4cb0"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7f0781d32a80"/></to>
    </wire>
    <wire loc="70:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x7f0781d32a80"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f0780ffe6d0"/></to>
    </wire>
    <wire loc="161:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC6" scoped="" ref="0x7f0781db8cb0"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7f0781d202b0"/></to>
    </wire>
    <wire loc="72:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x7f0781d202b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f0780f8de20"/></to>
    </wire>
    <wire loc="189:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF7" scoped="" ref="0x7f0781d99cb0"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7f0781cf1c10"/></to>
    </wire>
    <wire loc="73:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x7f0781cf1c10"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f0780e450a0"/></to>
    </wire>
    <wire loc="164:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD0" scoped="" ref="0x7f0781db5350"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7f0781d18a20"/></to>
    </wire>
    <wire loc="66:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x7f0781d18a20"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f0780f36c90"/></to>
    </wire>
    <wire loc="68:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x7f0781d05020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f0780ec30a0"/></to>
    </wire>
    <wire loc="184:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF2" scoped="" ref="0x7f0781d9fcb0"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7f0781cf6440"/></to>
    </wire>
    <wire loc="68:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x7f0781cf6440"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f0780e560a0"/></to>
    </wire>
    <wire loc="195:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG4" scoped="" ref="0x7f0781d91020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f0781c93160"/></to>
    </wire>
    <wire loc="142:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA5" scoped="" ref="0x7f0781dcc670"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7f0781d408f0"/></to>
    </wire>
    <wire loc="71:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x7f0781d408f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f078106f6d0"/></to>
    </wire>
    <wire loc="153:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB7" scoped="" ref="0x7f0781dc0670"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7f0781d2e020"/></to>
    </wire>
    <wire loc="73:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x7f0781d2e020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f0780ff40a0"/></to>
    </wire>
    <wire loc="182:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF0" scoped="" ref="0x7f0781da1670"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7f0781cf8020"/></to>
    </wire>
    <wire loc="66:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x7f0781cf8020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f0780e5dc90"/></to>
    </wire>
    <wire loc="156:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC1" scoped="" ref="0x7f0781dbecb0"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7f0781d268f0"/></to>
    </wire>
    <wire loc="67:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x7f0781d268f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f0780f9de20"/></to>
    </wire>
    <wire loc="167:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD3" scoped="" ref="0x7f0781db2e40"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7f0781d14020"/></to>
    </wire>
    <wire loc="69:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x7f0781d14020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f0780f2b3f0"/></to>
    </wire>
    <wire loc="71:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x7f0781d025d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f0780eba9b0"/></to>
    </wire>
    <wire loc="187:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF5" scoped="" ref="0x7f0781d9b670"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7f0781cf38f0"/></to>
    </wire>
    <wire loc="71:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x7f0781cf38f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f0780e4c9b0"/></to>
    </wire>
    <wire loc="137:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA0" scoped="" ref="0x7f0781dd5860"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7f0781d46140"/></to>
    </wire>
    <wire loc="66:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x7f0781d46140"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f078107f6d0"/></to>
    </wire>
    <wire loc="148:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB2" scoped="" ref="0x7f0781dc6670"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7f0781d34760"/></to>
    </wire>
    <wire loc="68:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x7f0781d34760"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f07810040a0"/></to>
    </wire>
    <wire loc="159:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC4" scoped="" ref="0x7f0781dba670"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7f0781d23da0"/></to>
    </wire>
    <wire loc="70:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x7f0781d23da0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f0780f936d0"/></to>
    </wire>
    <wire loc="170:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD6" scoped="" ref="0x7f0781dad670"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7f0781d105d0"/></to>
    </wire>
    <wire loc="72:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x7f0781d105d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f0780f22e20"/></to>
    </wire>
    <wire loc="193:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG2" scoped="" ref="0x7f0781d95990"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f0781c9ec90"/></to>
    </wire>
    <wire loc="173:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE0" scoped="" ref="0x7f0781dabcb0"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7f0781d09d30"/></to>
    </wire>
    <wire loc="66:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x7f0781d09d30"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f0780ecbc90"/></to>
    </wire>
    <wire loc="162:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC7" scoped="" ref="0x7f0781db6020"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7f0781d1e440"/></to>
    </wire>
    <wire loc="73:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x7f0781d1e440"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f0780f890a0"/></to>
    </wire>
    <wire loc="140:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA3" scoped="" ref="0x7f0781dcf060"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7f0781d425d0"/></to>
    </wire>
    <wire loc="69:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x7f0781d425d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f07810750a0"/></to>
    </wire>
    <wire loc="151:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB5" scoped="" ref="0x7f0781dc2020"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7f0781d31c10"/></to>
    </wire>
    <wire loc="71:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x7f0781d31c10"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f0780ffb9b0"/></to>
    </wire>
    <wire loc="48:../tinyos_ws18/tos/chips_ecs/atm1280/HplAtm128GeneralIOFastPortC.nc">
      <from><interface-ref name="PortL" scoped="" ref="0x7f0781c48870"/></from>
      <to><interface-ref name="GeneralIOPort" scoped="" ref="0x7f0781c00c90"/></to>
    </wire>
    <wire loc="40:../tinyos_ws18/tos/chips_ecs/atm1280/HplAtm128GeneralIOFastPortC.nc">
      <from><interface-ref name="PortD" scoped="" ref="0x7f0781c56e80"/></from>
      <to><interface-ref name="GeneralIOPort" scoped="" ref="0x7f0781c21cd0"/></to>
    </wire>
    <wire loc="43:../tinyos_ws18/tos/chips_ecs/atm1280/HplAtm128GeneralIOFastPortC.nc">
      <from><interface-ref name="PortG" scoped="" ref="0x7f0781c511d0"/></from>
      <to><interface-ref name="GeneralIOPort" scoped="" ref="0x7f0781c12cd0"/></to>
    </wire>
    <wire loc="46:../tinyos_ws18/tos/chips_ecs/atm1280/HplAtm128GeneralIOFastPortC.nc">
      <from><interface-ref name="PortJ" scoped="" ref="0x7f0781c4a550"/></from>
      <to><interface-ref name="GeneralIOPort" scoped="" ref="0x7f0781c09c90"/></to>
    </wire>
    <wire loc="38:../tinyos_ws18/tos/chips_ecs/atm1280/HplAtm128GeneralIOFastPortC.nc">
      <from><interface-ref name="PortB" scoped="" ref="0x7f0781c58d20"/></from>
      <to><interface-ref name="GeneralIOPort" scoped="" ref="0x7f0781c2a390"/></to>
    </wire>
    <wire loc="41:../tinyos_ws18/tos/chips_ecs/atm1280/HplAtm128GeneralIOFastPortC.nc">
      <from><interface-ref name="PortE" scoped="" ref="0x7f0781c54020"/></from>
      <to><interface-ref name="GeneralIOPort" scoped="" ref="0x7f0781c1c390"/></to>
    </wire>
    <wire loc="45:../tinyos_ws18/tos/chips_ecs/atm1280/HplAtm128GeneralIOFastPortC.nc">
      <from><interface-ref name="PortH" scoped="" ref="0x7f0781c503c0"/></from>
      <to><interface-ref name="GeneralIOPort" scoped="" ref="0x7f0781c0ec90"/></to>
    </wire>
    <wire loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/HplAtm128GeneralIOFastPortC.nc">
      <from><interface-ref name="PortK" scoped="" ref="0x7f0781c496e0"/></from>
      <to><interface-ref name="GeneralIOPort" scoped="" ref="0x7f0781c04c90"/></to>
    </wire>
    <wire loc="39:../tinyos_ws18/tos/chips_ecs/atm1280/HplAtm128GeneralIOFastPortC.nc">
      <from><interface-ref name="PortC" scoped="" ref="0x7f0781c57de0"/></from>
      <to><interface-ref name="GeneralIOPort" scoped="" ref="0x7f0781c26910"/></to>
    </wire>
    <wire loc="42:../tinyos_ws18/tos/chips_ecs/atm1280/HplAtm128GeneralIOFastPortC.nc">
      <from><interface-ref name="PortF" scoped="" ref="0x7f0781c53100"/></from>
      <to><interface-ref name="GeneralIOPort" scoped="" ref="0x7f0781c17910"/></to>
    </wire>
    <wire loc="27:../tinyos_ws18/tos/chips_ecs/enc28j60/Enc28j60C.nc">
      <from><interface-ref name="Enc28j60Control" scoped="" ref="0x7f0781bb1ba0"/></from>
      <to><interface-ref name="Enc28j60Control" scoped="" ref="0x7f0781ba4880"/></to>
    </wire>
    <wire loc="20:../tinyos_ws18/tos/chips_ecs/enc28j60/Enc28j60C.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x7f0781ba3430"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x7f0781b38b00"/></to>
    </wire>
    <wire loc="98:../tinyos_ws18/tos/chips_ecs/atm1280/spi/Atm1280SpiC.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x7f0781b38b00"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x7f0781b29340"/></to>
    </wire>
    <wire loc="21:../tinyos_ws18/tos/chips_ecs/enc28j60/Enc28j60C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f0781ba9020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f0781b33bd0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="22:../tinyos_ws18/tos/chips_ecs/enc28j60/Enc28j60C.nc">
      <from><interface-ref name="ssETH" scoped="" ref="0x7f0781baf6c0"/></from>
      <to><interface-ref name="PortB0" scoped="" ref="0x7f0781dc8020"/></to>
    </wire>
    <wire loc="23:../tinyos_ws18/tos/chips_ecs/enc28j60/Enc28j60C.nc">
      <from><interface-ref name="rstETH" scoped="" ref="0x7f0781bae9d0"/></from>
      <to><interface-ref name="PortB4" scoped="" ref="0x7f0781dc4cb0"/></to>
    </wire>
    <wire loc="24:../tinyos_ws18/tos/chips_ecs/enc28j60/Enc28j60C.nc">
      <from><interface-ref name="intETH" scoped="" ref="0x7f0781ba5620"/></from>
      <to><interface-ref name="Int2" scoped="" ref="0x7f07819efb70"/></to>
    </wire>
    <wire loc="73:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int2" scoped="" ref="0x7f07819efb70"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x7f07819a8c90"/></to>
    </wire>
    <wire loc="25:../tinyos_ws18/tos/chips_ecs/enc28j60/Enc28j60C.nc">
      <from><interface-ref name="intPin" scoped="" ref="0x7f0781badcf0"/></from>
      <to><interface-ref name="PortD2" scoped="" ref="0x7f0781db3b20"/></to>
    </wire>
    <wire loc="179:../tinyos_ws18/tos/chips_ecs/enc28j60/Enc28j60P.nc">
      <from><interface-ref name="checkInterruptflag" scoped="" ref="0x7f0781b6d5d0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f078262ebd0"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="100:../tinyos_ws18/tos/chips_ecs/atm1280/spi/Atm1280SpiC.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x7f0781b2ce60"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x7f0781b285f0"/></to>
    </wire>
    <wire loc="95:../tinyos_ws18/tos/chips_ecs/atm1280/spi/Atm1280SpiC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f0781b3e300"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f0781b2a670"/></to>
    </wire>
    <wire loc="99:../tinyos_ws18/tos/chips_ecs/atm1280/spi/Atm1280SpiC.nc">
      <from><interface-ref name="FastSpiByte" scoped="" ref="0x7f0781b34400"/></from>
      <to><interface-ref name="FastSpiByte" scoped="" ref="0x7f0781b29980"/></to>
    </wire>
    <wire loc="101:../tinyos_ws18/tos/chips_ecs/atm1280/spi/Atm1280SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f0781b33bd0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f0781b26320"/></to>
    </wire>
    <wire loc="97:../tinyos_ws18/tos/chips_ecs/atm1280/spi/Atm1280SpiC.nc">
      <from><interface-ref name="SpiControl" scoped="" ref="0x7f0781b384a0"/></from>
      <to><interface-ref name="SpiControl" scoped="" ref="0x7f0781b2acb0"/></to>
    </wire>
    <wire loc="103:../tinyos_ws18/tos/chips_ecs/atm1280/spi/Atm1280SpiC.nc">
      <from><interface-ref name="ResourceArbiter" scoped="" ref="0x7f0781b09740"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f07819fd520"/></to>
    </wire>
    <wire loc="98:../tinyos_ws18/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f07819fd520"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f0780d1f9d0"/></to>
    </wire>
    <wire loc="104:../tinyos_ws18/tos/chips_ecs/atm1280/spi/Atm1280SpiC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f0781b05cd0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f07819fbb20"/></to>
    </wire>
    <wire loc="100:../tinyos_ws18/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f07819fbb20"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f0780d1d020"/></to>
    </wire>
    <wire loc="105:../tinyos_ws18/tos/chips_ecs/atm1280/spi/Atm1280SpiC.nc">
      <from><interface-ref name="Spi" scoped="" ref="0x7f0781b0a340"/></from>
      <to><interface-ref name="SpiBus" scoped="" ref="0x7f0781ab5100"/></to>
    </wire>
    <wire loc="83:../tinyos_ws18/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="SpiBus" scoped="" ref="0x7f0781ab5100"/></from>
      <to><interface-ref name="SPI" scoped="" ref="0x7f0781aaf060"/></to>
    </wire>
    <wire loc="106:../tinyos_ws18/tos/chips_ecs/atm1280/spi/Atm1280SpiC.nc">
      <from><interface-ref name="McuPowerState" scoped="" ref="0x7f0781b07510"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x7f07825175a0"/></to>
    </wire>
    <wire loc="277:../tinyos_ws18/tos/chips_ecs/atm1280/spi/Atm1280SpiP.nc">
      <from><interface-ref name="zeroTask" scoped="" ref="0x7f0781ae2de0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f078262ebd0"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:../tinyos_ws18/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="Mcu" scoped="" ref="0x7f0781aa6b30"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x7f07825175a0"/></to>
    </wire>
    <wire loc="86:../tinyos_ws18/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="SS" scoped="" ref="0x7f0781aab020"/></from>
      <to><interface-ref name="PortB0" scoped="" ref="0x7f0781dc8020"/></to>
    </wire>
    <wire loc="87:../tinyos_ws18/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="SCK" scoped="" ref="0x7f0781aaa330"/></from>
      <to><interface-ref name="PortB1" scoped="" ref="0x7f0781dc7350"/></to>
    </wire>
    <wire loc="88:../tinyos_ws18/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="MOSI" scoped="" ref="0x7f0781aa84e0"/></from>
      <to><interface-ref name="PortB2" scoped="" ref="0x7f0781dc6670"/></to>
    </wire>
    <wire loc="89:../tinyos_ws18/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="MISO" scoped="" ref="0x7f0781aa77f0"/></from>
      <to><interface-ref name="PortB3" scoped="" ref="0x7f0781dc5990"/></to>
    </wire>
    <wire loc="99:../tinyos_ws18/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7f07819fb3a0"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7f0780d1e850"/></to>
    </wire>
    <wire loc="101:../tinyos_ws18/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f0780d1d910"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f07819fa570"/></to>
    </wire>
    <wire loc="103:../tinyos_ws18/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x7f0780d1b120"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x7f0780d21ad0"/></to>
    </wire>
    <wire loc="68:../tinyos_ws18/tos/system/SimpleArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x7f0780d1bc20"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f078262ebd0"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="77:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int6" scoped="" ref="0x7f07819ebb70"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x7f0781997c90"/></to>
    </wire>
    <wire loc="72:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int1" scoped="" ref="0x7f07819f0b70"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x7f07819adda0"/></to>
    </wire>
    <wire loc="75:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int4" scoped="" ref="0x7f07819edb70"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x7f078199fc90"/></to>
    </wire>
    <wire loc="78:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int7" scoped="" ref="0x7f07819eab70"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x7f0781992c90"/></to>
    </wire>
    <wire loc="76:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int5" scoped="" ref="0x7f07819ecb70"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x7f078199bc90"/></to>
    </wire>
    <wire loc="71:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int0" scoped="" ref="0x7f07819f3b20"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x7f07819c4060"/></to>
    </wire>
    <wire loc="74:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int3" scoped="" ref="0x7f07819eeb70"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x7f07819a4c90"/></to>
    </wire>
    <wire loc="80:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x7f07819c4e80"/></from>
      <to><interface-ref name="IntSig0" scoped="" ref="0x7f07819e3a00"/></to>
    </wire>
    <wire loc="81:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x7f07819abc20"/></from>
      <to><interface-ref name="IntSig1" scoped="" ref="0x7f07819e5230"/></to>
    </wire>
    <wire loc="82:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x7f07819a7b40"/></from>
      <to><interface-ref name="IntSig2" scoped="" ref="0x7f07819e59b0"/></to>
    </wire>
    <wire loc="83:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x7f07819a3b40"/></from>
      <to><interface-ref name="IntSig3" scoped="" ref="0x7f07819e4150"/></to>
    </wire>
    <wire loc="84:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x7f078199eb40"/></from>
      <to><interface-ref name="IntSig4" scoped="" ref="0x7f07819e48d0"/></to>
    </wire>
    <wire loc="85:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x7f078199ab40"/></from>
      <to><interface-ref name="IntSig5" scoped="" ref="0x7f07819e10b0"/></to>
    </wire>
    <wire loc="86:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x7f0781995b40"/></from>
      <to><interface-ref name="IntSig6" scoped="" ref="0x7f07819e1830"/></to>
    </wire>
    <wire loc="87:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x7f0781991b40"/></from>
      <to><interface-ref name="IntSig7" scoped="" ref="0x7f07819e0020"/></to>
    </wire>
    <wire loc="21:../tinyos_ws18/tos/lib_ecs/udp/UdpC.nc">
      <from><interface-ref name="UdpQueue" scoped="" ref="0x7f0780cb4440"/></from>
      <to><interface-ref name="UdpQueue" scoped="" ref="0x7f07819491d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="22:UdpTransceiverC.nc">
      <from><interface-ref name="PacketSender" scoped="" ref="0x7f078197c710"/></from>
      <to><interface-ref name="PacketSender" scoped="" ref="0x7f0781976b70"/></to>
    </wire>
    <wire loc="23:UdpTransceiverC.nc">
      <from><interface-ref name="UdpReceive" scoped="" ref="0x7f0781979330"/></from>
      <to><interface-ref name="UdpReceive" scoped="" ref="0x7f0781971730"/></to>
    </wire>
    <wire loc="21:UdpTransceiverC.nc">
      <from><interface-ref name="IcmpSend" scoped="" ref="0x7f0781970c70"/></from>
      <to><interface-ref name="IcmpSend" scoped="" ref="0x7f0781975e60"/></to>
    </wire>
    <wire loc="20:../tinyos_ws18/tos/lib_ecs/icmp/IcmpC.nc">
      <from><interface-ref name="IcmpSend" scoped="" ref="0x7f0781975e60"/></from>
      <to><interface-ref name="IcmpSend" scoped="" ref="0x7f0780ca6b10"/></to>
    </wire>
    <wire loc="24:UdpTransceiverC.nc">
      <from><interface-ref name="IpReceive" scoped="" ref="0x7f0781970600"/></from>
      <to><interface-ref name="IpReceive" scoped="" ref="0x7f07819772b0"/></to>
    </wire>
    <wire loc="22:../tinyos_ws18/tos/lib_ecs/ip/IpC.nc">
      <from><interface-ref name="IpReceive" scoped="" ref="0x7f07819772b0"/></from>
      <to><interface-ref name="IpReceive" scoped="" ref="0x7f0782253cc0"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f0782f56610"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="25:UdpTransceiverC.nc">
      <from><interface-ref name="IpSend" scoped="" ref="0x7f0781971d80"/></from>
      <to><interface-ref name="IpSend" scoped="" ref="0x7f07819789d0"/></to>
    </wire>
    <wire loc="20:../tinyos_ws18/tos/lib_ecs/ip/IpC.nc">
      <from><interface-ref name="IpSend" scoped="" ref="0x7f07819789d0"/></from>
      <to><interface-ref name="IpSend" scoped="" ref="0x7f0780cae0c0"/></to>
    </wire>
    <wire loc="26:UdpTransceiverC.nc">
      <from><interface-ref name="IpPacket" scoped="" ref="0x7f078196f4a0"/></from>
      <to><interface-ref name="IpPacket" scoped="" ref="0x7f0782252020"/></to>
    </wire>
    <wire loc="21:../tinyos_ws18/tos/lib_ecs/ip/IpC.nc">
      <from><interface-ref name="IpQueue" scoped="" ref="0x7f0780cae860"/></from>
      <to><interface-ref name="IpQueue" scoped="" ref="0x7f0781f30d60"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="22:../tinyos_ws18/tos/lib_ecs/icmp/IcmpC.nc">
      <from><interface-ref name="IcmpReceive" scoped="" ref="0x7f0781974630"/></from>
      <to><interface-ref name="IcmpReceive" scoped="" ref="0x7f0781f44610"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="21:../tinyos_ws18/tos/lib_ecs/icmp/IcmpC.nc">
      <from><interface-ref name="IcmpQueue" scoped="" ref="0x7f0780ca5440"/></from>
      <to><interface-ref name="IcmpQueue" scoped="" ref="0x7f0781ee4410"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="19:../tinyos_ws18/tos/lib_ecs/udp/UdpQueueC.nc">
      <from><interface-ref name="UdpQueue" scoped="" ref="0x7f07819491d0"/></from>
      <to><interface-ref name="UdpQueue" scoped="" ref="0x7f078193e1d0"/></to>
    </wire>
    <wire loc="20:../tinyos_ws18/tos/lib_ecs/udp/UdpQueueC.nc">
      <from><interface-ref name="PacketQueue" scoped="" ref="0x7f078193ebb0"/></from>
      <to><interface-ref name="PacketQueue" scoped="" ref="0x7f0781947790"/></to>
    </wire>
    <wire loc="17:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueueC.nc">
      <from><interface-ref name="PacketQueue" scoped="" ref="0x7f0781947790"/></from>
      <to><interface-ref name="PacketQueue" scoped="" ref="0x7f0780c9a0b0"/></to>
    </wire>
    <wire loc="21:../tinyos_ws18/tos/lib_ecs/udp/UdpQueueC.nc">
      <from><interface-ref name="PacketSender" scoped="" ref="0x7f0781944620"/></from>
      <to><interface-ref name="PacketSender" scoped="" ref="0x7f078197c710"/></to>
    </wire>
    <wire loc="16:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueueC.nc">
      <from><interface-ref name="PacketSender" scoped="" ref="0x7f0780c98dd0"/></from>
      <to><interface-ref name="PacketSender" scoped="" ref="0x7f0781944620"/></to>
    </wire>
    <wire loc="26:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueueP.nc">
      <from><interface-ref name="sendNext" scoped="" ref="0x7f0780c954e0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f078262ebd0"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="29:FMClick/FMClickC.nc">
      <from><interface-ref name="Int" scoped="" ref="0x7f0781923020"/></from>
      <to><interface-ref name="Int3" scoped="" ref="0x7f07819eeb70"/></to>
    </wire>
    <wire loc="31:FMClick/FMClickC.nc">
      <from><interface-ref name="I2CResource" scoped="" ref="0x7f0781922020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f0781813af0"/></to>
    </wire>
    <wire loc="53:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f0781813af0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f07818089b0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="32:FMClick/FMClickC.nc">
      <from><interface-ref name="I2C" scoped="" ref="0x7f0781913b50"/></from>
      <to><interface-ref name="I2CPacket" scoped="" ref="0x7f0781630890"/></to>
    </wire>
    <wire loc="54:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
      <from><interface-ref name="I2CPacket" scoped="" ref="0x7f0781630890"/></from>
      <to><interface-ref name="I2CPacket" scoped="" ref="0x7f0781802020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="34:FMClick/FMClickC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f0781910a80"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f078162ab80"/></to>
    </wire>
    <wire loc="52:../tinyos_ws18/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f078162ab80"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f078212aaa0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="36:FMClick/FMClickC.nc">
      <from><interface-ref name="RSTPin" scoped="" ref="0x7f078190bdf0"/></from>
      <to><interface-ref name="PortD2" scoped="" ref="0x7f0781601670"/></to>
    </wire>
    <wire loc="250:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortD2" scoped="" ref="0x7f0781601670"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7f0781582440"/></to>
    </wire>
    <wire loc="37:FMClick/FMClickC.nc">
      <from><interface-ref name="SDIOPin" scoped="" ref="0x7f0781909020"/></from>
      <to><interface-ref name="PortD1" scoped="" ref="0x7f0781602350"/></to>
    </wire>
    <wire loc="249:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortD1" scoped="" ref="0x7f0781602350"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7f07815832b0"/></to>
    </wire>
    <wire loc="38:FMClick/FMClickC.nc">
      <from><interface-ref name="INTPin" scoped="" ref="0x7f0781908350"/></from>
      <to><interface-ref name="PortD3" scoped="" ref="0x7f0781600990"/></to>
    </wire>
    <wire loc="251:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortD3" scoped="" ref="0x7f0781600990"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7f07815815d0"/></to>
    </wire>
    <wire loc="40:FMClick/FMClickC.nc">
      <from><interface-ref name="Glcd" scoped="" ref="0x7f07819075c0"/></from>
      <to><interface-ref name="Glcd" scoped="" ref="0x7f0781ebe220"/></to>
    </wire>
    <wire loc="187:FMClick/FMClickP.nc">
      <from><interface-ref name="seek" scoped="" ref="0x7f07818f4020"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f078262ebd0"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="192:FMClick/FMClickP.nc">
      <from><interface-ref name="writeI2C" scoped="" ref="0x7f07818ee2a0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f078262ebd0"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="193:FMClick/FMClickP.nc">
      <from><interface-ref name="registerWriteback" scoped="" ref="0x7f07818ec2b0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f078262ebd0"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="189:FMClick/FMClickP.nc">
      <from><interface-ref name="readRegisters" scoped="" ref="0x7f07818f1510"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f078262ebd0"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:FMClick/FMClickP.nc">
      <from><interface-ref name="init" scoped="" ref="0x7f07818f6120"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f078262ebd0"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="188:FMClick/FMClickP.nc">
      <from><interface-ref name="decodeRDS" scoped="" ref="0x7f07818f2020"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f078262ebd0"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:FMClick/FMClickP.nc">
      <from><interface-ref name="writeRegisters" scoped="" ref="0x7f07818ef2b0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f078262ebd0"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:FMClick/FMClickP.nc">
      <from><interface-ref name="readI2C" scoped="" ref="0x7f07818f03c0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f078262ebd0"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="186:FMClick/FMClickP.nc">
      <from><interface-ref name="tune" scoped="" ref="0x7f07818f5020"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f078262ebd0"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="60:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f07818089b0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f0781747020"/></to>
    </wire>
    <wire loc="61:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="I2CPacket" scoped="" ref="0x7f0781802020"/></from>
      <to><interface-ref name="I2CPacket" scoped="" ref="0x7f0781746020"/></to>
    </wire>
    <wire loc="63:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="SubResource" scoped="" ref="0x7f0781742e40"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f0781795e60"/></to>
    </wire>
    <wire loc="105:../tinyos_ws18/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f0781795e60"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f0780c70e40"/></to>
    </wire>
    <wire loc="64:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x7f0781741c40"/></from>
      <to><interface-ref name="I2CPacket" scoped="" ref="0x7f07816cdc00"/></to>
    </wire>
    <wire loc="65:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="Atm128I2C" scoped="" ref="0x7f078173c8e0"/></from>
      <to><interface-ref name="Atm128I2C" scoped="" ref="0x7f07816c88e0"/></to>
    </wire>
    <wire loc="67:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x7f078178d550"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x7f07816cd340"/></to>
    </wire>
    <wire loc="68:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f07817812f0"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f0781793400"/></to>
    </wire>
    <wire loc="107:../tinyos_ws18/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f0781793400"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f0780c6e400"/></to>
    </wire>
    <wire loc="70:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="I2C" scoped="" ref="0x7f07816c7020"/></from>
      <to><interface-ref name="I2C" scoped="" ref="0x7f07816bb0e0"/></to>
    </wire>
    <wire loc="53:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBusC.nc">
      <from><interface-ref name="I2C" scoped="" ref="0x7f07816bb0e0"/></from>
      <to><interface-ref name="I2C" scoped="" ref="0x7f07816b8a70"/></to>
    </wire>
    <wire loc="71:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="ReadDebugLeds" scoped="" ref="0x7f07816c5ac0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f0781649980"/></to>
    </wire>
    <wire loc="72:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="WriteDebugLeds" scoped="" ref="0x7f07816c2160"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f0781649980"/></to>
    </wire>
    <wire loc="106:../tinyos_ws18/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7f0781794bf0"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7f0780c6fbd0"/></to>
    </wire>
    <wire loc="108:../tinyos_ws18/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f0781792060"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f0780c6d060"/></to>
    </wire>
    <wire loc="109:../tinyos_ws18/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f0780c6d950"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f0781792930"/></to>
    </wire>
    <wire loc="111:../tinyos_ws18/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x7f0780c6b130"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x7f0780c72c30"/></to>
    </wire>
    <wire loc="75:../tinyos_ws18/tos/system/ArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x7f0780c692f0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f078262ebd0"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="210:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
      <from><interface-ref name="stopTask" scoped="" ref="0x7f07816c17a0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f078262ebd0"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBusC.nc">
      <from><interface-ref name="I2CClk" scoped="" ref="0x7f07816b3540"/></from>
      <to><interface-ref name="PortD0" scoped="" ref="0x7f0781db5350"/></to>
    </wire>
    <wire loc="55:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBusC.nc">
      <from><interface-ref name="I2CData" scoped="" ref="0x7f07816b2810"/></from>
      <to><interface-ref name="PortD1" scoped="" ref="0x7f0781db4800"/></to>
    </wire>
    <wire loc="51:../tinyos_ws18/tos/system/LedsC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f078167b4a0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f0781677dc0"/></to>
    </wire>
    <wire loc="53:../tinyos_ws18/tos/system/LedsC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f0781652ab0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f07816777c0"/></to>
    </wire>
    <wire loc="54:../tinyos_ws18/tos/system/LedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x7f0781673550"/></from>
      <to><interface-ref name="Led0" scoped="" ref="0x7f07816551d0"/></to>
    </wire>
    <wire loc="57:../tinyos_ws18/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x7f07816551d0"/></from>
      <to><interface-ref name="PortA0" scoped="" ref="0x7f0781dd5860"/></to>
    </wire>
    <wire loc="55:../tinyos_ws18/tos/system/LedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x7f07816727f0"/></from>
      <to><interface-ref name="Led1" scoped="" ref="0x7f0781654510"/></to>
    </wire>
    <wire loc="58:../tinyos_ws18/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x7f0781654510"/></from>
      <to><interface-ref name="PortA1" scoped="" ref="0x7f0781dd2b20"/></to>
    </wire>
    <wire loc="56:../tinyos_ws18/tos/system/LedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x7f0781671b10"/></from>
      <to><interface-ref name="Led2" scoped="" ref="0x7f0781653830"/></to>
    </wire>
    <wire loc="59:../tinyos_ws18/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x7f0781653830"/></from>
      <to><interface-ref name="PortA2" scoped="" ref="0x7f0781dd1e40"/></to>
    </wire>
    <wire loc="275:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortG0" scoped="" ref="0x7f07815e6cb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f078152b6d0"/></to>
    </wire>
    <wire loc="67:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x7f07815832b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f0780a4ae20"/></to>
    </wire>
    <wire loc="260:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortE3" scoped="" ref="0x7f07815f6350"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7f07815728f0"/></to>
    </wire>
    <wire loc="69:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x7f07815728f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f07809d73f0"/></to>
    </wire>
    <wire loc="269:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortF3" scoped="" ref="0x7f07815eccb0"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7f0781562c10"/></to>
    </wire>
    <wire loc="69:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x7f0781562c10"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f078096c3f0"/></to>
    </wire>
    <wire loc="280:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortG5" scoped="" ref="0x7f07815df060"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f0781511c90"/></to>
    </wire>
    <wire loc="284:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortH2" scoped="" ref="0x7f07815dc990"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f07814ebc90"/></to>
    </wire>
    <wire loc="289:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortH7" scoped="" ref="0x7f07815d5990"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f07814d29b0"/></to>
    </wire>
    <wire loc="297:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortJ6" scoped="" ref="0x7f07815cc020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f07814ae180"/></to>
    </wire>
    <wire loc="300:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortK0" scoped="" ref="0x7f07815ca670"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f07814a5c90"/></to>
    </wire>
    <wire loc="311:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortL2" scoped="" ref="0x7f07815be670"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f0781473180"/></to>
    </wire>
    <wire loc="227:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortA6" scoped="" ref="0x7f078161a350"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7f07815ab2b0"/></to>
    </wire>
    <wire loc="72:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x7f07815ab2b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f0780b7a0a0"/></to>
    </wire>
    <wire loc="267:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortF1" scoped="" ref="0x7f07815ee670"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7f07815648f0"/></to>
    </wire>
    <wire loc="67:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x7f07815648f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f0780974e20"/></to>
    </wire>
    <wire loc="230:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortB0" scoped="" ref="0x7f0781618990"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7f07815a4a20"/></to>
    </wire>
    <wire loc="66:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x7f07815a4a20"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f0780b23060"/></to>
    </wire>
    <wire loc="241:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortC2" scoped="" ref="0x7f078160b990"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7f0781591020"/></to>
    </wire>
    <wire loc="68:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x7f0781591020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f0780ab00a0"/></to>
    </wire>
    <wire loc="252:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortD4" scoped="" ref="0x7f07815ffcb0"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7f0781580760"/></to>
    </wire>
    <wire loc="70:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x7f0781580760"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f0780a3f6d0"/></to>
    </wire>
    <wire loc="263:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortE6" scoped="" ref="0x7f07815f2cb0"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7f078156eda0"/></to>
    </wire>
    <wire loc="72:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x7f078156eda0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f07809cee20"/></to>
    </wire>
    <wire loc="222:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortA1" scoped="" ref="0x7f07816204e0"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7f07815b28f0"/></to>
    </wire>
    <wire loc="67:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x7f07815b28f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f0780b8f0a0"/></to>
    </wire>
    <wire loc="233:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortB3" scoped="" ref="0x7f0781614350"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7f078159f020"/></to>
    </wire>
    <wire loc="69:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x7f078159f020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f0780b199b0"/></to>
    </wire>
    <wire loc="244:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortC5" scoped="" ref="0x7f0781607350"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7f078158e5d0"/></to>
    </wire>
    <wire loc="71:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x7f078158e5d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f0780aa79b0"/></to>
    </wire>
    <wire loc="255:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortD7" scoped="" ref="0x7f07815fb670"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7f078157cc10"/></to>
    </wire>
    <wire loc="73:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x7f078157cc10"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f0780a350a0"/></to>
    </wire>
    <wire loc="272:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortF6" scoped="" ref="0x7f07815e8670"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7f078155e2b0"/></to>
    </wire>
    <wire loc="72:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x7f078155e2b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f0780963e20"/></to>
    </wire>
    <wire loc="278:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortG3" scoped="" ref="0x7f07815e2b20"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f078151b6d0"/></to>
    </wire>
    <wire loc="282:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortH0" scoped="" ref="0x7f07815de350"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f07814f4020"/></to>
    </wire>
    <wire loc="258:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortE1" scoped="" ref="0x7f07815f9cb0"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7f07815745d0"/></to>
    </wire>
    <wire loc="67:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x7f07815745d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f07809dfe20"/></to>
    </wire>
    <wire loc="287:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortH5" scoped="" ref="0x7f07815d8350"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f07814dce20"/></to>
    </wire>
    <wire loc="292:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortJ1" scoped="" ref="0x7f07815d2020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f07814c86d0"/></to>
    </wire>
    <wire loc="295:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortJ4" scoped="" ref="0x7f07815cf990"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f07814b96d0"/></to>
    </wire>
    <wire loc="303:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortK3" scoped="" ref="0x7f07815c6020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f0781496c90"/></to>
    </wire>
    <wire loc="306:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortK6" scoped="" ref="0x7f07815c3990"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f0781487c90"/></to>
    </wire>
    <wire loc="309:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortL0" scoped="" ref="0x7f07815c0020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f078147d6d0"/></to>
    </wire>
    <wire loc="314:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortL5" scoped="" ref="0x7f07815b9020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f07814646d0"/></to>
    </wire>
    <wire loc="225:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortA4" scoped="" ref="0x7f078161de40"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7f07815aeda0"/></to>
    </wire>
    <wire loc="70:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x7f07815aeda0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f0780b819b0"/></to>
    </wire>
    <wire loc="236:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortB6" scoped="" ref="0x7f0781611cb0"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7f078159c5d0"/></to>
    </wire>
    <wire loc="72:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x7f078159c5d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f0780b0f3f0"/></to>
    </wire>
    <wire loc="276:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortG1" scoped="" ref="0x7f07815e44e0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f0781525160"/></to>
    </wire>
    <wire loc="239:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortC0" scoped="" ref="0x7f078160d350"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7f0781594d30"/></to>
    </wire>
    <wire loc="66:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x7f0781594d30"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f0780ab8a60"/></to>
    </wire>
    <wire loc="68:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x7f0781582440"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f0780a450a0"/></to>
    </wire>
    <wire loc="261:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortE4" scoped="" ref="0x7f07815f5670"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7f0781570a80"/></to>
    </wire>
    <wire loc="70:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x7f0781570a80"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f07809d46d0"/></to>
    </wire>
    <wire loc="270:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortF4" scoped="" ref="0x7f07815ea020"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7f0781561da0"/></to>
    </wire>
    <wire loc="70:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x7f0781561da0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f07809696d0"/></to>
    </wire>
    <wire loc="285:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortH3" scoped="" ref="0x7f07815dbcb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f07814e6180"/></to>
    </wire>
    <wire loc="298:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortJ7" scoped="" ref="0x7f07815cb350"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f07814aa6d0"/></to>
    </wire>
    <wire loc="301:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortK1" scoped="" ref="0x7f07815c9990"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f078149f180"/></to>
    </wire>
    <wire loc="312:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortL3" scoped="" ref="0x7f07815bd990"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f078146e6d0"/></to>
    </wire>
    <wire loc="293:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortJ2" scoped="" ref="0x7f07815d1350"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f07814c3c90"/></to>
    </wire>
    <wire loc="228:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortA7" scoped="" ref="0x7f0781619670"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7f07815aa440"/></to>
    </wire>
    <wire loc="73:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x7f07815aa440"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f0780b773f0"/></to>
    </wire>
    <wire loc="304:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortK4" scoped="" ref="0x7f07815c5350"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f0781490180"/></to>
    </wire>
    <wire loc="315:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortL6" scoped="" ref="0x7f07815b8350"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f078145fc90"/></to>
    </wire>
    <wire loc="231:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortB1" scoped="" ref="0x7f0781617cb0"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7f07815a2c10"/></to>
    </wire>
    <wire loc="67:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x7f07815a2c10"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f0780b1f3f0"/></to>
    </wire>
    <wire loc="242:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortC3" scoped="" ref="0x7f078160acb0"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7f07815902b0"/></to>
    </wire>
    <wire loc="69:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x7f07815902b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f0780aad3f0"/></to>
    </wire>
    <wire loc="253:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortD5" scoped="" ref="0x7f07815fd020"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7f078157f8f0"/></to>
    </wire>
    <wire loc="71:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x7f078157f8f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f0780a3c9b0"/></to>
    </wire>
    <wire loc="264:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortE7" scoped="" ref="0x7f07815f0020"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7f078156c020"/></to>
    </wire>
    <wire loc="73:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x7f078156c020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f07809ca0a0"/></to>
    </wire>
    <wire loc="223:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortA2" scoped="" ref="0x7f078161f800"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7f07815b1a80"/></to>
    </wire>
    <wire loc="68:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x7f07815b1a80"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f0780b8c3f0"/></to>
    </wire>
    <wire loc="234:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortB4" scoped="" ref="0x7f0781613670"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7f078159e2b0"/></to>
    </wire>
    <wire loc="70:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x7f078159e2b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f0780b16e20"/></to>
    </wire>
    <wire loc="245:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortC6" scoped="" ref="0x7f0781606670"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7f078158d760"/></to>
    </wire>
    <wire loc="72:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x7f078158d760"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f0780aa4e20"/></to>
    </wire>
    <wire loc="273:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortF7" scoped="" ref="0x7f07815e7990"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7f078155d440"/></to>
    </wire>
    <wire loc="73:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x7f078155d440"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f078095f0a0"/></to>
    </wire>
    <wire loc="283:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortH1" scoped="" ref="0x7f07815dd670"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f07814f06d0"/></to>
    </wire>
    <wire loc="248:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortD0" scoped="" ref="0x7f0781604cb0"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7f0781584020"/></to>
    </wire>
    <wire loc="66:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x7f0781584020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f0780a4dc90"/></to>
    </wire>
    <wire loc="259:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortE2" scoped="" ref="0x7f07815f7020"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7f0781573760"/></to>
    </wire>
    <wire loc="68:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x7f0781573760"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f07809da0a0"/></to>
    </wire>
    <wire loc="268:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortF2" scoped="" ref="0x7f07815ed990"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7f0781563a80"/></to>
    </wire>
    <wire loc="68:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x7f0781563a80"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f07809700a0"/></to>
    </wire>
    <wire loc="279:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortG4" scoped="" ref="0x7f07815e1e40"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f0781515160"/></to>
    </wire>
    <wire loc="288:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortH6" scoped="" ref="0x7f07815d7670"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f07814d7460"/></to>
    </wire>
    <wire loc="296:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortJ5" scoped="" ref="0x7f07815cecb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f07814b4c90"/></to>
    </wire>
    <wire loc="307:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortK7" scoped="" ref="0x7f07815c2cb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f0781481180"/></to>
    </wire>
    <wire loc="310:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortL1" scoped="" ref="0x7f07815bf350"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f0781478c90"/></to>
    </wire>
    <wire loc="226:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortA5" scoped="" ref="0x7f078161b060"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7f07815ac020"/></to>
    </wire>
    <wire loc="71:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x7f07815ac020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f0780b7ee20"/></to>
    </wire>
    <wire loc="237:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortB7" scoped="" ref="0x7f078160e020"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7f078159b760"/></to>
    </wire>
    <wire loc="73:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x7f078159b760"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f0780b0c6d0"/></to>
    </wire>
    <wire loc="266:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortF0" scoped="" ref="0x7f07815ef350"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7f07815667a0"/></to>
    </wire>
    <wire loc="66:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x7f07815667a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f0780977c90"/></to>
    </wire>
    <wire loc="240:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortC1" scoped="" ref="0x7f078160c670"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7f0781593e60"/></to>
    </wire>
    <wire loc="67:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x7f0781593e60"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f0780ab4e20"/></to>
    </wire>
    <wire loc="69:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x7f07815815d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f0780a423f0"/></to>
    </wire>
    <wire loc="262:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortE5" scoped="" ref="0x7f07815f4990"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7f078156fc10"/></to>
    </wire>
    <wire loc="71:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x7f078156fc10"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f07809d19b0"/></to>
    </wire>
    <wire loc="271:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortF5" scoped="" ref="0x7f07815e9350"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7f078155f020"/></to>
    </wire>
    <wire loc="71:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x7f078155f020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f07809669b0"/></to>
    </wire>
    <wire loc="221:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortA0" scoped="" ref="0x7f07816211e0"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7f07815b37a0"/></to>
    </wire>
    <wire loc="66:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x7f07815b37a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f0780b93da0"/></to>
    </wire>
    <wire loc="232:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortB2" scoped="" ref="0x7f0781615020"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7f07815a1da0"/></to>
    </wire>
    <wire loc="68:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x7f07815a1da0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f0780b1c6d0"/></to>
    </wire>
    <wire loc="243:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortC4" scoped="" ref="0x7f0781608020"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7f078158f440"/></to>
    </wire>
    <wire loc="70:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x7f078158f440"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f0780aaa6d0"/></to>
    </wire>
    <wire loc="254:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortD6" scoped="" ref="0x7f07815fc350"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7f078157ea80"/></to>
    </wire>
    <wire loc="72:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x7f078157ea80"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f0780a39e20"/></to>
    </wire>
    <wire loc="277:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortG2" scoped="" ref="0x7f07815e3800"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f0781521c90"/></to>
    </wire>
    <wire loc="286:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortH4" scoped="" ref="0x7f07815d9020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f07814e1830"/></to>
    </wire>
    <wire loc="291:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortJ0" scoped="" ref="0x7f07815d4cb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f07814cc160"/></to>
    </wire>
    <wire loc="257:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortE0" scoped="" ref="0x7f07815fa990"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7f07815753f0"/></to>
    </wire>
    <wire loc="66:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x7f07815753f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f07809e2c90"/></to>
    </wire>
    <wire loc="294:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortJ3" scoped="" ref="0x7f07815d0670"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f07814bd180"/></to>
    </wire>
    <wire loc="302:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortK2" scoped="" ref="0x7f07815c8cb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f078149b6d0"/></to>
    </wire>
    <wire loc="305:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortK5" scoped="" ref="0x7f07815c4670"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f078148c6d0"/></to>
    </wire>
    <wire loc="313:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortL4" scoped="" ref="0x7f07815bccb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f07814680a0"/></to>
    </wire>
    <wire loc="316:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortL7" scoped="" ref="0x7f07815b7670"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f0781459180"/></to>
    </wire>
    <wire loc="246:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortC7" scoped="" ref="0x7f0781605990"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7f078158c8f0"/></to>
    </wire>
    <wire loc="73:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x7f078158c8f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f0780aa00a0"/></to>
    </wire>
    <wire loc="224:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortA3" scoped="" ref="0x7f078161eb20"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7f07815b0c10"/></to>
    </wire>
    <wire loc="69:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x7f07815b0c10"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f0780b896d0"/></to>
    </wire>
    <wire loc="235:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortB5" scoped="" ref="0x7f0781612990"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7f078159d440"/></to>
    </wire>
    <wire loc="71:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x7f078159d440"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f0780b120a0"/></to>
    </wire>
    <wire loc="21:PS2/PS2C.nc">
      <from><interface-ref name="ClockIRQ" scoped="" ref="0x7f07813d2d90"/></from>
      <to><interface-ref name="HplAtmegaPinChange" scoped="" ref="0x7f07813ffca0"/></to>
    </wire>
    <wire loc="23:PS2/PS2C.nc">
      <from><interface-ref name="ClockPin" scoped="" ref="0x7f07813d71c0"/></from>
      <to><interface-ref name="PortK7" scoped="" ref="0x7f07815c2cb0"/></to>
    </wire>
    <wire loc="24:PS2/PS2C.nc">
      <from><interface-ref name="DataPin" scoped="" ref="0x7f07813d04f0"/></from>
      <to><interface-ref name="PortK6" scoped="" ref="0x7f07815c3990"/></to>
    </wire>
    <wire loc="36:../tinyos_ws18/tos/chips_ecs/atm1280/adc/AdcReadClientC.nc">
      <from><interface-ref name="Read" scoped="" ref="0x7f078123dbe0"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x7f0781379920"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="24:VolumeAdc/VolumeAdcC.nc">
      <from><interface-ref name="VolumePin" scoped="" ref="0x7f078138b700"/></from>
      <to><interface-ref name="PortF0" scoped="" ref="0x7f07815ef350"/></to>
    </wire>
    <wire loc="26:VolumeAdc/VolumeAdcC.nc">
      <from><interface-ref name="Atm1280AdcConfig" scoped="" ref="0x7f078123b320"/></from>
      <to><interface-ref name="Atm1280AdcConfig" scoped="" ref="0x7f0781388470"/></to>
    </wire>
    <wire loc="27:VolumeAdc/VolumeAdcC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f078123bc10"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f0781388e10"/></to>
    </wire>
    <wire loc="37:../tinyos_ws18/tos/chips_ecs/atm1280/adc/AdcReadClientC.nc">
      <from><interface-ref name="Atm1280AdcConfig" scoped="" ref="0x7f07813716d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Atm1280AdcConfig" scoped="" ref="0x7f078123b320"/></to>
    </wire>
    <wire loc="38:../tinyos_ws18/tos/chips_ecs/atm1280/adc/AdcReadClientC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f07813705e0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f078136c280"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="39:../tinyos_ws18/tos/chips_ecs/atm1280/adc/AdcReadClientC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f0781368210"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f078123bc10"/></to>
    </wire>
    <wire loc="31:../tinyos_ws18/tos/chips_ecs/atm1280/adc/WireAdcP.nc">
      <from><interface-ref name="Read" scoped="" ref="0x7f0781379920"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x7f0781260150"/></to>
    </wire>
    <wire loc="32:../tinyos_ws18/tos/chips_ecs/atm1280/adc/WireAdcP.nc">
      <from><interface-ref name="ReadNow" scoped="" ref="0x7f07813728f0"/></from>
      <to><interface-ref name="ReadNow" scoped="" ref="0x7f078128a1d0"/></to>
    </wire>
    <wire loc="33:../tinyos_ws18/tos/chips_ecs/atm1280/adc/WireAdcP.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f0781245300"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f07813705e0"/></to>
    </wire>
    <wire loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/adc/WireAdcP.nc">
      <from><interface-ref name="Atm1280AdcConfig" scoped="" ref="0x7f0781288a10"/></from>
      <to><interface-ref name="Atm1280AdcConfig" scoped="" ref="0x7f07813716d0"/></to>
    </wire>
    <wire loc="36:../tinyos_ws18/tos/chips_ecs/atm1280/adc/WireAdcP.nc">
      <from><interface-ref name="Service" scoped="" ref="0x7f0781247af0"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x7f078128d410"/></to>
    </wire>
    <wire loc="37:../tinyos_ws18/tos/chips_ecs/atm1280/adc/WireAdcP.nc">
      <from><interface-ref name="Atm1280AdcSingle" scoped="" ref="0x7f07812899f0"/></from>
      <to><interface-ref name="Atm1280AdcSingle" scoped="" ref="0x7f0781365780"/></to>
    </wire>
    <wire loc="68:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcC.nc">
      <from><interface-ref name="Atm1280AdcSingle" scoped="" ref="0x7f0781365780"/></from>
      <to><interface-ref name="Atm1280AdcSingle" scoped="" ref="0x7f078135c830"/></to>
    </wire>
    <wire loc="38:../tinyos_ws18/tos/chips_ecs/atm1280/adc/WireAdcP.nc">
      <from><interface-ref name="BusyWait" scoped="" ref="0x7f0781287740"/></from>
      <to><interface-ref name="BusyWait" scoped="" ref="0x7f0781bf32e0"/></to>
    </wire>
    <wire loc="66:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f078136c280"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f07812a9e70"/></to>
    </wire>
    <wire loc="105:../tinyos_ws18/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f07812a9e70"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f07807714d0"/></to>
    </wire>
    <wire loc="69:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcC.nc">
      <from><interface-ref name="Atm1280AdcMultiple" scoped="" ref="0x7f078135f420"/></from>
      <to><interface-ref name="Atm1280AdcMultiple" scoped="" ref="0x7f078135b330"/></to>
    </wire>
    <wire loc="67:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f07812a5930"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f0781368210"/></to>
    </wire>
    <wire loc="73:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcC.nc">
      <from><interface-ref name="HplAtm1280Adc" scoped="" ref="0x7f078134b710"/></from>
      <to><interface-ref name="HplAtm1280Adc" scoped="" ref="0x7f0781318460"/></to>
    </wire>
    <wire loc="50:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280AdcC.nc">
      <from><interface-ref name="HplAtm1280Adc" scoped="" ref="0x7f0781318460"/></from>
      <to><interface-ref name="HplAtm1280Adc" scoped="" ref="0x7f07813137d0"/></to>
    </wire>
    <wire loc="74:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcC.nc">
      <from><interface-ref name="Atm128Calibrate" scoped="" ref="0x7f0781359be0"/></from>
      <to><interface-ref name="Atm128Calibrate" scoped="" ref="0x7f07824a7020"/></to>
    </wire>
    <wire loc="76:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcC.nc">
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x7f07812a0020"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x7f078135c020"/></to>
    </wire>
    <wire loc="77:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f07812a0d50"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f07812a6400"/></to>
    </wire>
    <wire loc="107:../tinyos_ws18/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f07812a6400"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f0780770b20"/></to>
    </wire>
    <wire loc="51:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280AdcC.nc">
      <from><interface-ref name="McuPowerState" scoped="" ref="0x7f0781311c10"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x7f07825175a0"/></to>
    </wire>
    <wire loc="106:../tinyos_ws18/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7f07812a8c00"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7f07807703a0"/></to>
    </wire>
    <wire loc="108:../tinyos_ws18/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f07812a5060"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f078076f8b0"/></to>
    </wire>
    <wire loc="109:../tinyos_ws18/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f078076e210"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f07812a5930"/></to>
    </wire>
    <wire loc="111:../tinyos_ws18/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x7f078076e9d0"/></from>
      <to><interface-ref name="RoundRobinQueue" scoped="" ref="0x7f07807742b0"/></to>
    </wire>
    <wire loc="75:../tinyos_ws18/tos/system/ArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x7f078076cc50"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f078262ebd0"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:../tinyos_ws18/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x7f0780739660"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x7f07812a0020"/></to>
    </wire>
    <wire loc="82:../tinyos_ws18/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="PowerDownCleanup" scoped="" ref="0x7f0780739dc0"/></from>
      <to><interface-ref name="PowerDownCleanup" scoped="" ref="0x7f07812a0780"/></to>
    </wire>
    <wire loc="84:../tinyos_ws18/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f07807383d0"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f07812a0d50"/></to>
    </wire>
    <wire loc="85:../tinyos_ws18/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f0780737020"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f0781296990"/></to>
    </wire>
    <wire loc="104:../tinyos_ws18/tos/chips_ecs/atm1280/adc/AdcP.nc">
      <from><interface-ref name="acquiredData" scoped="" ref="0x7f0781275820"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f078262ebd0"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="17:../tinyos_ws18/tos/lib_ecs/lcd/BufferedLcdC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f07811fb020"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f0781234560"/></to>
    </wire>
    <wire loc="52:../tinyos_ws18/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f0781234560"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f078212aaa0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="18:../tinyos_ws18/tos/lib_ecs/lcd/BufferedLcdC.nc">
      <from><interface-ref name="Lcd" scoped="" ref="0x7f07811f6490"/></from>
      <to><interface-ref name="HplLcd" scoped="" ref="0x7f07811f1100"/></to>
    </wire>
    <wire loc="18:../tinyos_ws18/tos/lib_ecs/lcd/HplLcdC.nc">
      <from><interface-ref name="HplLcd" scoped="" ref="0x7f07811f1100"/></from>
      <to><interface-ref name="HplLcd" scoped="" ref="0x7f07811f0e10"/></to>
    </wire>
    <wire loc="34:../tinyos_ws18/tos/lib_ecs/lcd/BufferedLcdP.nc">
      <from><interface-ref name="refresh" scoped="" ref="0x7f07811f52f0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f078262ebd0"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="16:../tinyos_ws18/tos/lib_ecs/lcd/HplLcdC.nc">
      <from><interface-ref name="Port" scoped="" ref="0x7f07811ed6e0"/></from>
      <to><interface-ref name="PortC" scoped="" ref="0x7f0781c57de0"/></to>
    </wire>
    <wire loc="19:../tinyos_ws18/tos/lib_ecs/lcd/HplLcdC.nc">
      <from><interface-ref name="BusyWait" scoped="" ref="0x7f07811ebaa0"/></from>
      <to><interface-ref name="BusyWait" scoped="" ref="0x7f0781bf32e0"/></to>
    </wire>
  </wiring>
  <components>
    <component qname="MainC" loc="56:../tinyos_ws18/tos/system/MainC.nc">
      <documentation loc="45:../tinyos_ws18/tos/system/MainC.nc">
        <short>&#10; MainC is the system interface the TinyOS boot sequence.</short>
        <long>&#10; MainC is the system interface the TinyOS boot sequence. It wires the&#10; boot sequence implementation to the scheduler and hardware resources.&#10;&#10; @author Philip Levis&#10; @date   August 6 2005&#10; @see    TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformC" loc="44:../tinyos_ws18/tos/platforms/mica/PlatformC.nc">
      <documentation loc="34:../tinyos_ws18/tos/platforms/mica/PlatformC.nc">
        <short>&#10; Initialisation component for mica-family platforms.</short>
        <long>&#10; Initialisation component for mica-family platforms. See TEP107. Each &#10; mica-family member must also provide a MotePlatformC with initialisation&#10; specific to that member.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformP" loc="42:../tinyos_ws18/tos/platforms/bigAVR6_1280/PlatformP.nc" safe="">
      <documentation loc="34:../tinyos_ws18/tos/platforms/bigAVR6_1280/PlatformP.nc">
        <short>&#10; Internal platform boot code.</short>
        <long>&#10; Internal platform boot code.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="MotePlatformC" loc="1:../tinyos_ws18/tos/platforms/bigAVR6/MotePlatformC.nc" safe="">
      <module/>
    </component>
    <component qname="MeasureClockC" loc="46:../tinyos_ws18/tos/platforms/bigAVR6_1280/MeasureClockC.nc">
      <documentation loc="36:../tinyos_ws18/tos/platforms/bigAVR6_1280/MeasureClockC.nc">
        <short>&#10; Measure cpu clock frequency at boot time.</short>
        <long>&#10; Measure cpu clock frequency at boot time. Provides an Atm128Calibrate&#10; interface so that other components can adjust their calibration as&#10; needed.&#10;&#10; @author David Gay&#10; @author Janos Sallai&#10; @author Markus Hartmann&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RealMainP" loc="56:../tinyos_ws18/tos/system/RealMainP.nc" safe="">
      <documentation loc="49:../tinyos_ws18/tos/system/RealMainP.nc">
        <short>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.</short>
        <long>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 17 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TinySchedulerC" loc="46:../tinyos_ws18/tos/system/TinySchedulerC.nc">
      <documentation loc="34:../tinyos_ws18/tos/system/TinySchedulerC.nc">
        <short>&#10; The TinyOS scheduler.</short>
        <long>&#10; The TinyOS scheduler. It provides two interfaces: Scheduler,&#10; for TinyOS to initialize and run tasks, and TaskBasic, the simplext&#10; class of TinyOS tasks (reserved always at-most-once posting,&#10; FIFO, parameter-free). For details and information on how to&#10; replace the scheduler, refer to TEP 106.&#10;&#10; @author  Phil Levis&#10; @date    August 7 2005&#10; @see     TEP 106: Tasks and Schedulers&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SchedulerBasicP" loc="54:../tinyos_ws18/tos/system/SchedulerBasicP.nc" safe="">
      <module/>
    </component>
    <component qname="McuSleepC" loc="82:../tinyos_ws18/tos/chips_ecs/atm1280/McuSleepC.nc" safe="">
      <documentation loc="67:../tinyos_ws18/tos/chips_ecs/atm1280/McuSleepC.nc">
        <short>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the Atmega128.</short>
        <long>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the Atmega128. Power state calculation code copied from Rob&#10; Szewczyk's 1.x code in HPLPowerManagementM.nc.&#10;&#10; &#60;pre>&#10;  $Id: McuSleepC.nc,v 1.6 2010-06-29 22:07:43 scipio Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Robert Szewczyk&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10; @date   October 30, 2007&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RadioScannerP" loc="25:RadioScannerP.nc">
      <module/>
    </component>
    <component qname="DatabaseC" loc="14:Database/DatabaseC.nc">
      <configuration/>
    </component>
    <component qname="DatabaseP" loc="22:Database/DatabaseP.nc">
      <module/>
    </component>
    <component qname="IpTransceiverC" loc="10:../tinyos_ws18/tos/lib_ecs/ip/IpTransceiverC.nc">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/ip/ip.h">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;12.12.2011&#10;&#10; based on an implementation of Harald Glanzer, 0727156 TU Wien&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="IpTransceiverP" loc="11:../tinyos_ws18/tos/lib_ecs/ip/IpTransceiverP.nc">
      <module/>
    </component>
    <component qname="IpTransceiverC.LlcC" loc="10(IpTransceiverC.LlcC):../tinyos_ws18/tos/lib_ecs/llc/LlcC.nc">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/llc/mac.h">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;12.12.2011&#10;&#10; based on an implementation of Harald Glanzer, 0727156 TU Wien&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="LlcC"/>
        <arguments>
          <value cst="I:2048">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="LlcTransceiverC" loc="10:../tinyos_ws18/tos/lib_ecs/llc/LlcTransceiverC.nc">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/llc/mac.h">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;12.12.2011&#10;&#10; based on an implementation of Harald Glanzer, 0727156 TU Wien&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="LlcTransceiverP" loc="10:../tinyos_ws18/tos/lib_ecs/llc/LlcTransceiverP.nc">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/llc/mac.h">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;12.12.2011&#10;&#10; based on an implementation of Harald Glanzer, 0727156 TU Wien&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="IpTransceiverC.LlcC.LlcP" loc="10(IpTransceiverC.LlcC.LlcP):../tinyos_ws18/tos/lib_ecs/llc/LlcP.nc">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/llc/mac.h">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;12.12.2011&#10;&#10; based on an implementation of Harald Glanzer, 0727156 TU Wien&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="LlcP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f0782f56610"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="LlcQueueC" loc="10:../tinyos_ws18/tos/lib_ecs/llc/LlcQueueC.nc">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/llc/mac.h">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;12.12.2011&#10;&#10; based on an implementation of Harald Glanzer, 0727156 TU Wien&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="LlcQueueC.PacketQueueC" loc="8(LlcQueueC.PacketQueueC):../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueueC.nc">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueueC.nc">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;12.12.2011&#10;&#10; based on an implementation of Harald Glanzer, 0727156 TU Wien&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="PacketQueueC"/>
        <arguments>
          <type-tag size="I:12" alignment="I:1"><struct-ref ref="0x7f078224bb60"/>
            <typename><typedef-ref name="mac_queue_item_t" ref="0x7f078224a180"/></typename>
          </type-tag>
          <value cst="I:2">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="LlcQueueC.PacketQueueC.PacketQueueP" loc="11(LlcQueueC.PacketQueueC.PacketQueueP):../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueueP.nc">
      <instance number="0">
        <component-ref qname="PacketQueueP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="ITEM_TYPE" scoped="" ref="0x7f07821c41c0"/></type-var>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="LlcQueueP" loc="11:../tinyos_ws18/tos/lib_ecs/llc/LlcQueueP.nc">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/udp/udp.h">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;12.12.2011&#10;&#10; based on an implementation of Harald Glanzer, 0727156 TU Wien&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="ArpC" loc="8:../tinyos_ws18/tos/lib_ecs/arp/ArpC.nc">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/arp/ArpC.nc">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;12.12.2011&#10;&#10; based on an implementation of Harald Glanzer, 0727156 TU Wien&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="ArpP" loc="11:../tinyos_ws18/tos/lib_ecs/arp/ArpP.nc">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/udp/udp.h">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;12.12.2011&#10;&#10; based on an implementation of Harald Glanzer, 0727156 TU Wien&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="ArpC.TimerMilliC" loc="44(ArpC.TimerMilliC):../tinyos_ws18/tos/system/TimerMilliC.nc">
      <documentation loc="33:../tinyos_ws18/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TimerMilliP" loc="48:../tinyos_ws18/tos/system/TimerMilliP.nc">
      <documentation loc="34:../tinyos_ws18/tos/system/TimerMilliP.nc">
        <short>&#10; Components should never wire to this component.</short>
        <long>&#10; Components should never wire to this component. This is the&#10; underlying configuration of virtualized millisecond timers. &#10; It auto-wires wires the timer&#10; implementation (TimerC) to the boot sequence and exports the&#10; various Timer interfaces.&#10;&#10; @author Philip Levis&#10; @author Cory Sharp&#10; @date   May 16 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC" loc="44:../tinyos_ws18/tos/platforms/mica/HilTimerMilliC.nc">
      <documentation loc="34:../tinyos_ws18/tos/platforms/mica/HilTimerMilliC.nc">
        <short>&#10; Millisecond timer for the mica family (see TEP102).</short>
        <long>&#10; Millisecond timer for the mica family (see TEP102). The &#34;millisecond&#34;&#10; timer system is built on hardware timer 0, running at 1024Hz.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP" loc="25:../tinyos_ws18/tos/platforms/bigAVR6_1280/AlarmCounterMilliP.nc">
      <documentation loc="11:../tinyos_ws18/tos/platforms/bigAVR6_1280/AlarmCounterMilliP.nc">
        <short>&#10; Configure hardware timer 0 for use as the mica family's millisecond&#10; timer.</short>
        <long>&#10; Configure hardware timer 0 for use as the mica family's millisecond&#10; timer.  This component does not follow the TEP102 HAL guidelines as&#10; there is only one compare register for timer 0, which is used to&#10; implement HilTimerMilliC. Hence it isn't useful to expose an&#10; AlarmMilliC or CounterMillIC component.&#10; &#10; @author David Gay &#60;dgay@intel-research.net>&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP.Atm1280AlarmSyncC" loc="32(AlarmCounterMilliP.Atm1280AlarmSyncC):../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncC.nc">
      <documentation loc="11:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncC.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10; @author Markus Hartmann&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm1280AlarmSyncC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f07825841a0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f0782584510"/></typename>
          </type-tag>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:124">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP.Atm1280AlarmSyncC.Atm1280AlarmSyncP" loc="33(AlarmCounterMilliP.Atm1280AlarmSyncC.Atm1280AlarmSyncP):../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncP.nc">
      <documentation loc="11:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncP.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 2&#10; and never lets timer 2 overflow.&#10;&#10; Based on Atm1281AlarmAsyncP&#10;&#10; @author David Gay&#10; @author Markus Hartmann &#60;e9808811@student.tuwien.ac.at>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm1280AlarmSyncP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x7f0782102c70"/></type-var>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280Timer2SyncC" loc="50:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280Timer2SyncC.nc">
      <documentation loc="33:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280Timer2SyncC.nc">
        <short>&#10; Simple wrapper around the actual timer implementation that automatically&#10; wires it to McuSleepC for low-power calculations..</short>
        <long>&#10; Simple wrapper around the actual timer implementation that automatically&#10; wires it to McuSleepC for low-power calculations..&#10;&#10; @author Philip Levis&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm1280Timer2SyncP" loc="82:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280Timer2SyncP.nc" safe="">
      <documentation loc="65:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280Timer2SyncP.nc">
        <short>&#10; HPL interface to Atmega1281 timer 2 in ASYNC mode.</short>
        <long>&#10; HPL interface to Atmega1281 timer 2 in ASYNC mode. This is a specialised&#10; HPL component that assumes that timer 2 is used in ASYNC mode and&#10; includes some workarounds for some of the weirdnesses (delayed overflow&#10; interrupt) of that mode.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;&#10; Changed to sync mode&#10; @author Markus Hartmann &#60;e9808811@student.tuwien.ac.at>&#10; &#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmToTimerC" loc="46(HilTimerMilliC.AlarmToTimerC):../tinyos_ws18/tos/lib/timer/AlarmToTimerC.nc">
      <documentation loc="36:../tinyos_ws18/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmToTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f07825841a0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f0782584510"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.VirtualizeTimerC" loc="46(HilTimerMilliC.VirtualizeTimerC):../tinyos_ws18/tos/lib/timer/VirtualizeTimerC.nc">
      <documentation loc="34:../tinyos_ws18/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="VirtualizeTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f07825841a0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f0782584510"/></typename>
          </type-tag>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.CounterToLocalTimeC" loc="46(HilTimerMilliC.CounterToLocalTimeC):../tinyos_ws18/tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:../tinyos_ws18/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f07825841a0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f0782584510"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="ArpC.ClearCacheTimeoutC" loc="44(ArpC.ClearCacheTimeoutC):../tinyos_ws18/tos/system/TimerMilliC.nc">
      <documentation loc="33:../tinyos_ws18/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="ArpC.LlcC" loc="10(ArpC.LlcC):../tinyos_ws18/tos/lib_ecs/llc/LlcC.nc">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/llc/mac.h">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;12.12.2011&#10;&#10; based on an implementation of Harald Glanzer, 0727156 TU Wien&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="LlcC"/>
        <arguments>
          <value cst="I:2054">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="ArpC.LlcC.LlcP" loc="10(ArpC.LlcC.LlcP):../tinyos_ws18/tos/lib_ecs/llc/LlcP.nc">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/llc/mac.h">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;12.12.2011&#10;&#10; based on an implementation of Harald Glanzer, 0727156 TU Wien&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="LlcP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f0782f56610"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="ArpC.PacketQueueC" loc="8(ArpC.PacketQueueC):../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueueC.nc">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueueC.nc">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;12.12.2011&#10;&#10; based on an implementation of Harald Glanzer, 0727156 TU Wien&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="PacketQueueC"/>
        <arguments>
          <type-tag size="I:28" alignment="I:1"><struct-ref ref="0x7f078223a080"/>
            <typename><typedef-ref name="arp_packet_t" ref="0x7f078223a970"/></typename>
          </type-tag>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="ArpC.PacketQueueC.PacketQueueP" loc="11(ArpC.PacketQueueC.PacketQueueP):../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueueP.nc">
      <instance number="1">
        <component-ref qname="PacketQueueP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="ITEM_TYPE" scoped="" ref="0x7f07821c41c0"/></type-var>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="PingC.IcmpC" loc="10(PingC.IcmpC):../tinyos_ws18/tos/lib_ecs/icmp/IcmpC.nc">
      <instance number="0">
        <component-ref qname="IcmpC"/>
        <arguments>
          <value cst="I:8">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="IcmpTransceiverC" loc="10:../tinyos_ws18/tos/lib_ecs/icmp/IcmpTransceiverC.nc">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/icmp/icmp.h">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;12.12.2011&#10;&#10; based on an implementation of Harald Glanzer, 0727156 TU Wien&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="IcmpTransceiverC.IpC" loc="10(IcmpTransceiverC.IpC):../tinyos_ws18/tos/lib_ecs/ip/IpC.nc">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/ip/ip.h">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;12.12.2011&#10;&#10; based on an implementation of Harald Glanzer, 0727156 TU Wien&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="IpC"/>
        <arguments>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="IcmpTransceiverC.IpC.IpP" loc="10(IcmpTransceiverC.IpC.IpP):../tinyos_ws18/tos/lib_ecs/ip/IpP.nc">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/ip/ip.h">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;12.12.2011&#10;&#10; based on an implementation of Harald Glanzer, 0727156 TU Wien&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="IpP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f0782f56610"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="IpQueueC" loc="10:../tinyos_ws18/tos/lib_ecs/ip/IpQueueC.nc">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/ip/ip.h">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;12.12.2011&#10;&#10; based on an implementation of Harald Glanzer, 0727156 TU Wien&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="IpQueueC.PacketQueueC" loc="8(IpQueueC.PacketQueueC):../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueueC.nc">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueueC.nc">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;12.12.2011&#10;&#10; based on an implementation of Harald Glanzer, 0727156 TU Wien&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="PacketQueueC"/>
        <arguments>
          <type-tag size="I:7" alignment="I:1"><struct-ref ref="0x7f078232b7c0"/>
            <typename><typedef-ref name="ip_queue_item_t" ref="0x7f078232bd40"/></typename>
          </type-tag>
          <value cst="I:2">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="IpQueueC.PacketQueueC.PacketQueueP" loc="11(IpQueueC.PacketQueueC.PacketQueueP):../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueueP.nc">
      <instance number="2">
        <component-ref qname="PacketQueueP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="ITEM_TYPE" scoped="" ref="0x7f07821c41c0"/></type-var>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="IpQueueP" loc="11:../tinyos_ws18/tos/lib_ecs/ip/IpQueueP.nc">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/udp/udp.h">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;12.12.2011&#10;&#10; based on an implementation of Harald Glanzer, 0727156 TU Wien&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="IcmpTransceiverP" loc="10:../tinyos_ws18/tos/lib_ecs/icmp/IcmpTransceiverP.nc">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/icmp/icmp.h">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;12.12.2011&#10;&#10; based on an implementation of Harald Glanzer, 0727156 TU Wien&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PingC.IcmpC.IcmpP" loc="10(PingC.IcmpC.IcmpP):../tinyos_ws18/tos/lib_ecs/icmp/IcmpP.nc">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/icmp/icmp.h">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;12.12.2011&#10;&#10; based on an implementation of Harald Glanzer, 0727156 TU Wien&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="IcmpP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="IcmpQueueC" loc="10:../tinyos_ws18/tos/lib_ecs/icmp/IcmpQueueC.nc">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/icmp/icmp.h">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;12.12.2011&#10;&#10; based on an implementation of Harald Glanzer, 0727156 TU Wien&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="IcmpQueueC.PacketQueueC" loc="8(IcmpQueueC.PacketQueueC):../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueueC.nc">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueueC.nc">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;12.12.2011&#10;&#10; based on an implementation of Harald Glanzer, 0727156 TU Wien&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="PacketQueueC"/>
        <arguments>
          <type-tag size="I:10" alignment="I:1"><struct-ref ref="0x7f0781f51b40"/>
            <typename><typedef-ref name="icmp_queue_item_t" ref="0x7f0781f50230"/></typename>
          </type-tag>
          <value cst="I:2">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="IcmpQueueC.PacketQueueC.PacketQueueP" loc="11(IcmpQueueC.PacketQueueC.PacketQueueP):../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueueP.nc">
      <instance number="3">
        <component-ref qname="PacketQueueP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="ITEM_TYPE" scoped="" ref="0x7f07821c41c0"/></type-var>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="IcmpQueueP" loc="11:../tinyos_ws18/tos/lib_ecs/icmp/IcmpQueueP.nc">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/icmp/icmp.h">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;12.12.2011&#10;&#10; based on an implementation of Harald Glanzer, 0727156 TU Wien&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PingP" loc="8:PingP.nc">
      <documentation loc="1:PingP.nc">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;12.12.2011&#10;&#10; based on an implementation of Harald Glanzer, 0727156 TU Wien&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="GlcdC" loc="7:../tinyos_ws18/tos/lib_ecs/glcd/GlcdC.nc">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/glcd/GlcdC.nc">
        <short>&#10; High level implementation for KS0108 Glcd&#10; </short>
        <long>&#10; High level implementation for KS0108 Glcd&#10; @author:    Markus Hartmann e988811@student.tuwien.ac.at&#10; @date:      01.02.2012&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="GlcdP" loc="41:../tinyos_ws18/tos/lib_ecs/glcd/GlcdP.nc">
      <module/>
    </component>
    <component qname="HplKS0108C" loc="7:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108C.nc">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108C.nc">
        <short>&#10; Configuration for KS0108 GLCD Display&#10; </short>
        <long>&#10; Configuration for KS0108 GLCD Display&#10; @author:    Markus Hartmann e988811@student.tuwien.ac.at&#10; @date:      01.02.2012&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplKS0108P" loc="21:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108P.nc">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108P.nc">
        <short>&#10; Hpl implementation for KS0108 GLCD Display&#10; </short>
        <long>&#10; Hpl implementation for KS0108 GLCD Display&#10; @author:    Markus Hartmann e988811@student.tuwien.ac.at&#10; @date:      01.02.2012&#10; Based on an implementation of Andreas Hagmann&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC" loc="40:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
        <short>&#10; Provide GeneralIO interfaces for all of the ATmega128's pins.</short>
        <long>&#10; Provide GeneralIO interfaces for all of the ATmega128's pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA" loc="40(HplAtm128GeneralIOC.PortA):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:34">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit0" loc="41(HplAtm128GeneralIOC.PortA.Bit0):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit1" loc="41(HplAtm128GeneralIOC.PortA.Bit1):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit2" loc="41(HplAtm128GeneralIOC.PortA.Bit2):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit3" loc="41(HplAtm128GeneralIOC.PortA.Bit3):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit4" loc="41(HplAtm128GeneralIOC.PortA.Bit4):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit5" loc="41(HplAtm128GeneralIOC.PortA.Bit5):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit6" loc="41(HplAtm128GeneralIOC.PortA.Bit6):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit7" loc="41(HplAtm128GeneralIOC.PortA.Bit7):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB" loc="40(HplAtm128GeneralIOC.PortB):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:37">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:36">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:35">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit0" loc="41(HplAtm128GeneralIOC.PortB.Bit0):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit1" loc="41(HplAtm128GeneralIOC.PortB.Bit1):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit2" loc="41(HplAtm128GeneralIOC.PortB.Bit2):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit3" loc="41(HplAtm128GeneralIOC.PortB.Bit3):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit4" loc="41(HplAtm128GeneralIOC.PortB.Bit4):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit5" loc="41(HplAtm128GeneralIOC.PortB.Bit5):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit6" loc="41(HplAtm128GeneralIOC.PortB.Bit6):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="14">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit7" loc="41(HplAtm128GeneralIOC.PortB.Bit7):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="15">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC" loc="40(HplAtm128GeneralIOC.PortC):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:39">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit0" loc="41(HplAtm128GeneralIOC.PortC.Bit0):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="16">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit1" loc="41(HplAtm128GeneralIOC.PortC.Bit1):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="17">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit2" loc="41(HplAtm128GeneralIOC.PortC.Bit2):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="18">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit3" loc="41(HplAtm128GeneralIOC.PortC.Bit3):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="19">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit4" loc="41(HplAtm128GeneralIOC.PortC.Bit4):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="20">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit5" loc="41(HplAtm128GeneralIOC.PortC.Bit5):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="21">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit6" loc="41(HplAtm128GeneralIOC.PortC.Bit6):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="22">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit7" loc="41(HplAtm128GeneralIOC.PortC.Bit7):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="23">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD" loc="40(HplAtm128GeneralIOC.PortD):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:43">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit0" loc="41(HplAtm128GeneralIOC.PortD.Bit0):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="24">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit1" loc="41(HplAtm128GeneralIOC.PortD.Bit1):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="25">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit2" loc="41(HplAtm128GeneralIOC.PortD.Bit2):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="26">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit3" loc="41(HplAtm128GeneralIOC.PortD.Bit3):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="27">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit4" loc="41(HplAtm128GeneralIOC.PortD.Bit4):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="28">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit5" loc="41(HplAtm128GeneralIOC.PortD.Bit5):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="29">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit6" loc="41(HplAtm128GeneralIOC.PortD.Bit6):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="30">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit7" loc="41(HplAtm128GeneralIOC.PortD.Bit7):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="31">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE" loc="40(HplAtm128GeneralIOC.PortE):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:46">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:45">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:44">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit0" loc="41(HplAtm128GeneralIOC.PortE.Bit0):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="32">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit1" loc="41(HplAtm128GeneralIOC.PortE.Bit1):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="33">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit2" loc="41(HplAtm128GeneralIOC.PortE.Bit2):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="34">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit3" loc="41(HplAtm128GeneralIOC.PortE.Bit3):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="35">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit4" loc="41(HplAtm128GeneralIOC.PortE.Bit4):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="36">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit5" loc="41(HplAtm128GeneralIOC.PortE.Bit5):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="37">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit6" loc="41(HplAtm128GeneralIOC.PortE.Bit6):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="38">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit7" loc="41(HplAtm128GeneralIOC.PortE.Bit7):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="39">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF" loc="40(HplAtm128GeneralIOC.PortF):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit0" loc="41(HplAtm128GeneralIOC.PortF.Bit0):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="40">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit1" loc="41(HplAtm128GeneralIOC.PortF.Bit1):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="41">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit2" loc="41(HplAtm128GeneralIOC.PortF.Bit2):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="42">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit3" loc="41(HplAtm128GeneralIOC.PortF.Bit3):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="43">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit4" loc="41(HplAtm128GeneralIOC.PortF.Bit4):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="44">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit5" loc="41(HplAtm128GeneralIOC.PortF.Bit5):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="45">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit6" loc="41(HplAtm128GeneralIOC.PortF.Bit6):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="46">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit7" loc="41(HplAtm128GeneralIOC.PortF.Bit7):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="47">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F0" loc="42(HplAtm128GeneralIOC.F0):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F1" loc="42(HplAtm128GeneralIOC.F1):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F2" loc="42(HplAtm128GeneralIOC.F2):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F3" loc="42(HplAtm128GeneralIOC.F3):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F4" loc="42(HplAtm128GeneralIOC.F4):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F5" loc="42(HplAtm128GeneralIOC.F5):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F6" loc="42(HplAtm128GeneralIOC.F6):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F7" loc="42(HplAtm128GeneralIOC.F7):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G0" loc="42(HplAtm128GeneralIOC.G0):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G1" loc="42(HplAtm128GeneralIOC.G1):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G2" loc="42(HplAtm128GeneralIOC.G2):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G3" loc="42(HplAtm128GeneralIOC.G3):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G4" loc="42(HplAtm128GeneralIOC.G4):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G5" loc="42(HplAtm128GeneralIOC.G5):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOFastPortC" loc="6:../tinyos_ws18/tos/chips_ecs/atm1280/HplAtm128GeneralIOFastPortC.nc">
      <documentation loc="1:../tinyos_ws18/tos/chips_ecs/atm1280/HplAtm128GeneralIOFastPortC.nc">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;22.01.2012&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOFastPortC.PortAP" loc="6(HplAtm128GeneralIOFastPortC.PortAP):../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
      <documentation loc="1:../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;22.01.2012&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOFastPortP"/>
        <arguments>
          <value cst="I:34">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOFastPortC.PortBP" loc="6(HplAtm128GeneralIOFastPortC.PortBP):../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
      <documentation loc="1:../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;22.01.2012&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOFastPortP"/>
        <arguments>
          <value cst="I:37">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:36">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:35">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOFastPortC.PortCP" loc="6(HplAtm128GeneralIOFastPortC.PortCP):../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
      <documentation loc="1:../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;22.01.2012&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOFastPortP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:39">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOFastPortC.PortDP" loc="6(HplAtm128GeneralIOFastPortC.PortDP):../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
      <documentation loc="1:../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;22.01.2012&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOFastPortP"/>
        <arguments>
          <value cst="I:43">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOFastPortC.PortEP" loc="6(HplAtm128GeneralIOFastPortC.PortEP):../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
      <documentation loc="1:../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;22.01.2012&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOFastPortP"/>
        <arguments>
          <value cst="I:46">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:45">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:44">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOFastPortC.PortFP" loc="6(HplAtm128GeneralIOFastPortC.PortFP):../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
      <documentation loc="1:../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;22.01.2012&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOFastPortP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOFastPortC.PortGP" loc="6(HplAtm128GeneralIOFastPortC.PortGP):../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
      <documentation loc="1:../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;22.01.2012&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOFastPortP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOFastPortC.PortHP" loc="6(HplAtm128GeneralIOFastPortC.PortHP):../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
      <documentation loc="1:../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;22.01.2012&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOFastPortP"/>
        <arguments>
          <value cst="I:2">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOFastPortC.PortJP" loc="6(HplAtm128GeneralIOFastPortC.PortJP):../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
      <documentation loc="1:../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;22.01.2012&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOFastPortP"/>
        <arguments>
          <value cst="I:5">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOFastPortC.PortKP" loc="6(HplAtm128GeneralIOFastPortC.PortKP):../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
      <documentation loc="1:../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;22.01.2012&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOFastPortP"/>
        <arguments>
          <value cst="I:8">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOFastPortC.PortLP" loc="6(HplAtm128GeneralIOFastPortC.PortLP):../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
      <documentation loc="1:../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;22.01.2012&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOFastPortP"/>
        <arguments>
          <value cst="I:11">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:10">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:9">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="BusyWaitMicroC" loc="38:../tinyos_ws18/tos/platforms/bigAVR6_1280/BusyWaitMicroC.nc" safe="">
      <documentation loc="29:../tinyos_ws18/tos/platforms/bigAVR6_1280/BusyWaitMicroC.nc">
        <short>&#10; Busy wait component as per TEP102.</short>
        <long>&#10; Busy wait component as per TEP102. Supports waiting for at least some&#10; number of microseconds. This functionality should be used sparingly,&#10; when the overhead of posting a Timer or Alarm is greater than simply&#10; busy waiting.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="Enc28j60C" loc="7:../tinyos_ws18/tos/chips_ecs/enc28j60/Enc28j60C.nc">
      <documentation loc="1:../tinyos_ws18/tos/chips_ecs/enc28j60/Enc28j60C.nc">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Harald Glanzer, 0727156 TU Wien&#10;&#10; overhauled by Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Enc28j60P" loc="9:../tinyos_ws18/tos/chips_ecs/enc28j60/Enc28j60P.nc">
      <documentation loc="1:../tinyos_ws18/tos/chips_ecs/enc28j60/enc28j60.h">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Harald Glanzer, 0727156 TU Wien&#10;&#10; overhauled by Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="Atm1280SpiC" loc="82:../tinyos_ws18/tos/chips_ecs/atm1280/spi/Atm1280SpiC.nc">
      <documentation loc="66:../tinyos_ws18/tos/chips_ecs/atm1280/spi/Atm1280SpiC.nc">
        <short>&#10; The HAL of the SPI bus on the atm128.</short>
        <long>&#10; The HAL of the SPI bus on the atm128.&#10;&#10; &#60;pre>&#10;  $Id: Atm128SpiC.nc,v 1.7 2010-06-29 22:07:43 scipio Exp $&#10; &#60;/pre>&#10;&#10;&#10; @author Philip Levis&#10; @author Martin Turon&#10; @author Joe Polastre&#10; @date   September 7 2005&#10;&#10; @author Markus Hartmann &#60;e9808811@student.tuwien.ac.at>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm1280SpiP" loc="92:../tinyos_ws18/tos/chips_ecs/atm1280/spi/Atm1280SpiP.nc" safe="">
      <documentation loc="1:../tinyos_ws18/tos/chips_ecs/atm1280/spi/SpiControl.h">
        <short>&#10; </short>
        <long>&#10; @author Markus Hartmann e988811@student.tuwien.ac.at&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128SpiC" loc="75:../tinyos_ws18/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <documentation loc="63:../tinyos_ws18/tos/chips/atm128/spi/HplAtm128SpiC.nc">
        <short>&#10; Configuration encapsulating the basic SPI HPL for the atm128.</short>
        <long>&#10; Configuration encapsulating the basic SPI HPL for the atm128.&#10;&#10; &#60;pre>&#10; $Id: HplAtm128SpiC.nc,v 1.5 2010-06-29 22:07:43 scipio Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128SpiP" loc="73:../tinyos_ws18/tos/chips/atm128/spi/HplAtm128SpiP.nc" safe="">
      <documentation loc="63:../tinyos_ws18/tos/chips/atm128/spi/HplAtm128SpiP.nc">
        <short>&#10; Implementation of the SPI bus abstraction for the atm128&#10; microcontroller.</short>
        <long>&#10; Implementation of the SPI bus abstraction for the atm128&#10; microcontroller.&#10;&#10; @author Philip Levis&#10; @author Martin Turon&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="Atm1280SpiC.Arbiter" loc="83(Atm1280SpiC.Arbiter):../tinyos_ws18/tos/system/SimpleFcfsArbiterC.nc">
      <documentation loc="62:../tinyos_ws18/tos/system/SimpleFcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SimpleFcfsArbiterC"/>
        <arguments>
          <value cst="S:Atm128SpiC.Resource">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm1280SpiC.Arbiter.Queue" loc="42(Atm1280SpiC.Arbiter.Queue):../tinyos_ws18/tos/system/FcfsResourceQueueC.nc">
      <instance number="0">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Atm1280SpiC.Arbiter.Arbiter" loc="49(Atm1280SpiC.Arbiter.Arbiter):../tinyos_ws18/tos/system/SimpleArbiterP.nc">
      <documentation loc="30:../tinyos_ws18/tos/system/SimpleArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SimpleArbiterP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC" loc="41:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <documentation loc="36:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
        <short>&#10; Component providing access to all external interrupt pins on ATmega128.</short>
        <long>&#10; Component providing access to all external interrupt pins on ATmega128.&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128InterruptSigP" loc="41:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc" safe="">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10; Exposes just the interrupt vector routine for &#10; easy linking to generic components.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin0" loc="39(HplAtm128InterruptC.IntPin0):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:105">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin1" loc="39(HplAtm128InterruptC.IntPin1):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:105">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin2" loc="39(HplAtm128InterruptC.IntPin2):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:105">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin3" loc="39(HplAtm128InterruptC.IntPin3):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:105">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin4" loc="39(HplAtm128InterruptC.IntPin4):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:106">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin5" loc="39(HplAtm128InterruptC.IntPin5):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:106">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin6" loc="39(HplAtm128InterruptC.IntPin6):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:106">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin7" loc="39(HplAtm128InterruptC.IntPin7):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:106">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DatabaseC.UdpC" loc="10(DatabaseC.UdpC):../tinyos_ws18/tos/lib_ecs/udp/UdpC.nc">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/udp/udp.h">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;12.12.2011&#10;&#10; based on an implementation of Harald Glanzer, 0727156 TU Wien&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="UdpC"/>
        <arguments>
          <value cst="I:50000">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="UdpTransceiverC" loc="10:UdpTransceiverC.nc">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/udp/udp.h">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;12.12.2011&#10;&#10; based on an implementation of Harald Glanzer, 0727156 TU Wien&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="UdpTransceiverC.IpC" loc="10(UdpTransceiverC.IpC):../tinyos_ws18/tos/lib_ecs/ip/IpC.nc">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/ip/ip.h">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;12.12.2011&#10;&#10; based on an implementation of Harald Glanzer, 0727156 TU Wien&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="IpC"/>
        <arguments>
          <value cst="I:17">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="UdpTransceiverC.IpC.IpP" loc="10(UdpTransceiverC.IpC.IpP):../tinyos_ws18/tos/lib_ecs/ip/IpP.nc">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/ip/ip.h">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;12.12.2011&#10;&#10; based on an implementation of Harald Glanzer, 0727156 TU Wien&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="IpP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f0782f56610"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="UdpTransceiverP" loc="10:UdpTransceiverP.nc">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/udp/udp.h">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;12.12.2011&#10;&#10; based on an implementation of Harald Glanzer, 0727156 TU Wien&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="UdpTransceiverC.IcmpC" loc="10(UdpTransceiverC.IcmpC):../tinyos_ws18/tos/lib_ecs/icmp/IcmpC.nc">
      <instance number="1">
        <component-ref qname="IcmpC"/>
        <arguments>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="UdpTransceiverC.IcmpC.IcmpP" loc="10(UdpTransceiverC.IcmpC.IcmpP):../tinyos_ws18/tos/lib_ecs/icmp/IcmpP.nc">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/icmp/icmp.h">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;12.12.2011&#10;&#10; based on an implementation of Harald Glanzer, 0727156 TU Wien&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="IcmpP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DatabaseC.UdpC.UdpP" loc="10(DatabaseC.UdpC.UdpP):../tinyos_ws18/tos/lib_ecs/udp/UdpP.nc">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/udp/udp.h">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;12.12.2011&#10;&#10; based on an implementation of Harald Glanzer, 0727156 TU Wien&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="UdpP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f0782f56610"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="UdpQueueC" loc="10:../tinyos_ws18/tos/lib_ecs/udp/UdpQueueC.nc">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/udp/udp.h">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;12.12.2011&#10;&#10; based on an implementation of Harald Glanzer, 0727156 TU Wien&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="UdpQueueC.PacketQueueC" loc="8(UdpQueueC.PacketQueueC):../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueueC.nc">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueueC.nc">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;12.12.2011&#10;&#10; based on an implementation of Harald Glanzer, 0727156 TU Wien&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="PacketQueueC"/>
        <arguments>
          <type-tag size="I:12" alignment="I:1"><struct-ref ref="0x7f07823162c0"/>
            <typename><typedef-ref name="udp_queue_item_t" ref="0x7f07823168f0"/></typename>
          </type-tag>
          <value cst="I:1">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="UdpQueueC.PacketQueueC.PacketQueueP" loc="11(UdpQueueC.PacketQueueC.PacketQueueP):../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueueP.nc">
      <instance number="4">
        <component-ref qname="PacketQueueP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="ITEM_TYPE" scoped="" ref="0x7f07821c41c0"/></type-var>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="UdpQueueP" loc="11:../tinyos_ws18/tos/lib_ecs/udp/UdpQueueP.nc">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/udp/udp.h">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;12.12.2011&#10;&#10; based on an implementation of Harald Glanzer, 0727156 TU Wien&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="FMClickC" loc="11:FMClick/FMClickC.nc">
      <documentation loc="1:FMClick/FMClickC.nc">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @file FMClickC.nc&#10; @author  Jan Nausner &#60;e01614835@student.tuwien.ac.at>&#10; @date    2018-12-12&#10;&#10; Configuration of the FMClick module.&#10;&#10;*</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="FMClickP" loc="17:FMClick/FMClickP.nc">
      <documentation loc="1:FMClick/FMClickP.nc">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @file FMClickP.nc&#10; @author  Jan Nausner &#60;e01614835@student.tuwien.ac.at>&#10; @date    2018-12-12&#10;&#10; FMClick module implementation.&#10;&#10;*</long>
      </documentation>
      <module/>
    </component>
    <component qname="FMClickC.I2C" loc="43(FMClickC.I2C):../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
      <documentation loc="32:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
        <short>&#10; The basic client abstraction of the I2C on the Atmega128.</short>
        <long>&#10; The basic client abstraction of the I2C on the Atmega128. I2C&#10; device drivers should instantiate one of these to ensure&#10; exclusive access to the I2C bus.&#10;&#10; @author Philip Levis&#10; @date   May 28, 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128I2CMasterC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm128I2CMasterP" loc="44:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <documentation loc="32:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
        <short>&#10; The configuration that takes the underlying I2C driver on the &#10; Atmega128 and turns it into a shared abstraction.</short>
        <long>&#10; The configuration that takes the underlying I2C driver on the &#10; Atmega128 and turns it into a shared abstraction.&#10;&#10; @date May 28 2006&#10; @author Philip Levis&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128I2CMasterP.Arbiter" loc="89(Atm128I2CMasterP.Arbiter):../tinyos_ws18/tos/system/FcfsArbiterC.nc">
      <documentation loc="69:../tinyos_ws18/tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="FcfsArbiterC"/>
        <arguments>
          <value cst="S:Atm128I2CMasterC.I2CPacket">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm128I2CMasterP.Arbiter.Queue" loc="42(Atm128I2CMasterP.Arbiter.Queue):../tinyos_ws18/tos/system/FcfsResourceQueueC.nc">
      <instance number="1">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Atm128I2CMasterP.Arbiter.Arbiter" loc="52(Atm128I2CMasterP.Arbiter.Arbiter):../tinyos_ws18/tos/system/ArbiterP.nc">
      <documentation loc="30:../tinyos_ws18/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Atm128I2CMasterP.Power" loc="58(Atm128I2CMasterP.Power):../tinyos_ws18/tos/lib/power/AsyncPowerManagerP.nc">
      <documentation loc="41:../tinyos_ws18/tos/lib/power/AsyncPowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AsyncPowerManagerP"/>
      </instance>
      <module/>
    </component>
    <component qname="Atm128I2CMasterP.I2C" loc="40(Atm128I2CMasterP.I2C):../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc">
      <documentation loc="32:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc">
        <short>&#10; The configuration that takes the underlying I2C driver on the &#10; Atmega128 and turns it into a shared abstraction.</short>
        <long>&#10; The configuration that takes the underlying I2C driver on the &#10; Atmega128 and turns it into a shared abstraction.&#10;&#10; @date May 28 2006&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128I2CMasterImplP"/>
      </instance>
      <module/>
    </component>
    <component qname="Atm128I2CMasterP.Master" loc="76(Atm128I2CMasterP.Master):../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
      <documentation loc="61:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
        <short>&#10; This driver implements an interupt driven I2C Master controller &#10; Hardware Abstraction Layer (HAL) to the ATmega128 &#10; two-wire-interface (TWI) hardware subsystem.</short>
        <long>&#10; This driver implements an interupt driven I2C Master controller &#10; Hardware Abstraction Layer (HAL) to the ATmega128 &#10; two-wire-interface (TWI) hardware subsystem.&#10;&#10; @author Philip Levis&#10; @author Philipp Sommer, ETH Zurich, sommer@tik.ee.ethz.ch&#10; @author Roland Flury, ETH Zurich, rflury@tik.ee.ethz.ch&#10; @author Thomas Fahrni, ETH Zurich, tfahrni@ee.ethz.ch&#10; @author Richard Huber, ETH Zurich, rihuber@ee.ethz.ch&#10; @author Lars Schor, ETH Zurich, lschor@ee.ethz.ch&#10; @author Andras Biro, University of Szeged&#10;&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128I2CMasterPacketP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128I2CBusC" loc="46:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBusC.nc">
      <documentation loc="35:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBusC.nc">
        <short>&#10; This driver implements direct I2C register access and a blocking master&#10; controller for the ATmega128 via a Hardware Platform Layer (HPL) to its  &#10; two-wire-interface (TWI) hardware subsystem.</short>
        <long>&#10; This driver implements direct I2C register access and a blocking master&#10; controller for the ATmega128 via a Hardware Platform Layer (HPL) to its  &#10; two-wire-interface (TWI) hardware subsystem.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Philip Levis&#10;&#10; @version    $Id: HplAtm128I2CBusC.nc,v 1.5 2010-06-29 22:07:43 scipio Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128I2CBusP" loc="49:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBusP.nc">
      <documentation loc="39:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBusP.nc">
        <short>&#10; This driver implements direct I2C register access and a blocking master&#10; controller for the ATmega128 via a Hardware Platform Layer (HPL) to its  &#10; two-wire-interface (TWI) hardware subsystem.</short>
        <long>&#10; This driver implements direct I2C register access and a blocking master&#10; controller for the ATmega128 via a Hardware Platform Layer (HPL) to its  &#10; two-wire-interface (TWI) hardware subsystem.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Philip Levis&#10;&#10; @version $Id: HplAtm128I2CBusP.nc,v 1.5 2010-06-29 22:07:43 scipio Exp $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="LedsC" loc="45:../tinyos_ws18/tos/system/LedsC.nc">
      <documentation loc="34:../tinyos_ws18/tos/system/LedsC.nc">
        <short>&#10;&#10; The basic TinyOS LEDs abstraction.</short>
        <long>&#10;&#10; The basic TinyOS LEDs abstraction.&#10;&#10; @author Phil Buonadonna&#10; @author David Gay&#10; @author Philip Levis&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="LedsP" loc="44:../tinyos_ws18/tos/platforms/bigAVR6/LedsP.nc" safe="">
      <documentation loc="35:../tinyos_ws18/tos/platforms/bigAVR6/LedsP.nc">
        <short>&#10; The implementation of the standard 3 LED mote abstraction.</short>
        <long>&#10; The implementation of the standard 3 LED mote abstraction.&#10;&#10; @author Joe Polastre&#10; @author Philip Levis&#10;&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformLedsC" loc="42:../tinyos_ws18/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <documentation loc="34:../tinyos_ws18/tos/platforms/bigAVR6/PlatformLedsC.nc">
        <short>&#10; Platform-specific LED interface.</short>
        <long>&#10; Platform-specific LED interface.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="NoLedsC" loc="45:../tinyos_ws18/tos/system/NoLedsC.nc">
      <documentation loc="35:../tinyos_ws18/tos/system/NoLedsC.nc">
        <short>&#10; A null operation replacement for the LedsC component.</short>
        <long>&#10; A null operation replacement for the LedsC component. As many&#10; components might concurrently signal information through LEDs,&#10; using LedsC and NoLedsC allows an application builder to select&#10; which components control the LEDs.&#10;&#10; @author Philip Levis&#10; @date   March 19, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="FMClickC.Timer" loc="44(FMClickC.Timer):../tinyos_ws18/tos/system/TimerMilliC.nc">
      <documentation loc="33:../tinyos_ws18/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm1280GeneralIOC" loc="45:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <documentation loc="36:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
        <short>&#10; Provide GeneralIO interfaces for all of the ATmega128's pins.</short>
        <long>&#10; Provide GeneralIO interfaces for all of the ATmega128's pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;&#10; Changed for Atm1280&#10; @author Markus Hartmann &#60;e9808811@student.tuwien.ac.at>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortA" loc="40(HplAtm1280GeneralIOC.PortA):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:34">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortA.Bit0" loc="41(HplAtm1280GeneralIOC.PortA.Bit0):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="48">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortA.Bit1" loc="41(HplAtm1280GeneralIOC.PortA.Bit1):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="49">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortA.Bit2" loc="41(HplAtm1280GeneralIOC.PortA.Bit2):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="50">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortA.Bit3" loc="41(HplAtm1280GeneralIOC.PortA.Bit3):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="51">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortA.Bit4" loc="41(HplAtm1280GeneralIOC.PortA.Bit4):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="52">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortA.Bit5" loc="41(HplAtm1280GeneralIOC.PortA.Bit5):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="53">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortA.Bit6" loc="41(HplAtm1280GeneralIOC.PortA.Bit6):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="54">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortA.Bit7" loc="41(HplAtm1280GeneralIOC.PortA.Bit7):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="55">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortB" loc="40(HplAtm1280GeneralIOC.PortB):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:37">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:36">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:35">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortB.Bit0" loc="41(HplAtm1280GeneralIOC.PortB.Bit0):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="56">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortB.Bit1" loc="41(HplAtm1280GeneralIOC.PortB.Bit1):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="57">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortB.Bit2" loc="41(HplAtm1280GeneralIOC.PortB.Bit2):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="58">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortB.Bit3" loc="41(HplAtm1280GeneralIOC.PortB.Bit3):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="59">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortB.Bit4" loc="41(HplAtm1280GeneralIOC.PortB.Bit4):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="60">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortB.Bit5" loc="41(HplAtm1280GeneralIOC.PortB.Bit5):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="61">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortB.Bit6" loc="41(HplAtm1280GeneralIOC.PortB.Bit6):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="62">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortB.Bit7" loc="41(HplAtm1280GeneralIOC.PortB.Bit7):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="63">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortC" loc="40(HplAtm1280GeneralIOC.PortC):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:39">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortC.Bit0" loc="41(HplAtm1280GeneralIOC.PortC.Bit0):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="64">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortC.Bit1" loc="41(HplAtm1280GeneralIOC.PortC.Bit1):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="65">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortC.Bit2" loc="41(HplAtm1280GeneralIOC.PortC.Bit2):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="66">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortC.Bit3" loc="41(HplAtm1280GeneralIOC.PortC.Bit3):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="67">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortC.Bit4" loc="41(HplAtm1280GeneralIOC.PortC.Bit4):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="68">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortC.Bit5" loc="41(HplAtm1280GeneralIOC.PortC.Bit5):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="69">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortC.Bit6" loc="41(HplAtm1280GeneralIOC.PortC.Bit6):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="70">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortC.Bit7" loc="41(HplAtm1280GeneralIOC.PortC.Bit7):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="71">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortD" loc="40(HplAtm1280GeneralIOC.PortD):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:43">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortD.Bit0" loc="41(HplAtm1280GeneralIOC.PortD.Bit0):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="72">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortD.Bit1" loc="41(HplAtm1280GeneralIOC.PortD.Bit1):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="73">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortD.Bit2" loc="41(HplAtm1280GeneralIOC.PortD.Bit2):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="74">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortD.Bit3" loc="41(HplAtm1280GeneralIOC.PortD.Bit3):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="75">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortD.Bit4" loc="41(HplAtm1280GeneralIOC.PortD.Bit4):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="76">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortD.Bit5" loc="41(HplAtm1280GeneralIOC.PortD.Bit5):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="77">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortD.Bit6" loc="41(HplAtm1280GeneralIOC.PortD.Bit6):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="78">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortD.Bit7" loc="41(HplAtm1280GeneralIOC.PortD.Bit7):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="79">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortE" loc="40(HplAtm1280GeneralIOC.PortE):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:46">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:45">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:44">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortE.Bit0" loc="41(HplAtm1280GeneralIOC.PortE.Bit0):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="80">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortE.Bit1" loc="41(HplAtm1280GeneralIOC.PortE.Bit1):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="81">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortE.Bit2" loc="41(HplAtm1280GeneralIOC.PortE.Bit2):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="82">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortE.Bit3" loc="41(HplAtm1280GeneralIOC.PortE.Bit3):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="83">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortE.Bit4" loc="41(HplAtm1280GeneralIOC.PortE.Bit4):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="84">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortE.Bit5" loc="41(HplAtm1280GeneralIOC.PortE.Bit5):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="85">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortE.Bit6" loc="41(HplAtm1280GeneralIOC.PortE.Bit6):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="86">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortE.Bit7" loc="41(HplAtm1280GeneralIOC.PortE.Bit7):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="87">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortF" loc="40(HplAtm1280GeneralIOC.PortF):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortF.Bit0" loc="41(HplAtm1280GeneralIOC.PortF.Bit0):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="88">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortF.Bit1" loc="41(HplAtm1280GeneralIOC.PortF.Bit1):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="89">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortF.Bit2" loc="41(HplAtm1280GeneralIOC.PortF.Bit2):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="90">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortF.Bit3" loc="41(HplAtm1280GeneralIOC.PortF.Bit3):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="91">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortF.Bit4" loc="41(HplAtm1280GeneralIOC.PortF.Bit4):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="92">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortF.Bit5" loc="41(HplAtm1280GeneralIOC.PortF.Bit5):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="93">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortF.Bit6" loc="41(HplAtm1280GeneralIOC.PortF.Bit6):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="94">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortF.Bit7" loc="41(HplAtm1280GeneralIOC.PortF.Bit7):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="95">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.F0" loc="42(HplAtm1280GeneralIOC.F0):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="14">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.F1" loc="42(HplAtm1280GeneralIOC.F1):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="15">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.F2" loc="42(HplAtm1280GeneralIOC.F2):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="16">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.F3" loc="42(HplAtm1280GeneralIOC.F3):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="17">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.F4" loc="42(HplAtm1280GeneralIOC.F4):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="18">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.F5" loc="42(HplAtm1280GeneralIOC.F5):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="19">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.F6" loc="42(HplAtm1280GeneralIOC.F6):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="20">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.F7" loc="42(HplAtm1280GeneralIOC.F7):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="21">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.G0" loc="42(HplAtm1280GeneralIOC.G0):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="22">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.G1" loc="42(HplAtm1280GeneralIOC.G1):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="23">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.G2" loc="42(HplAtm1280GeneralIOC.G2):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="24">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.G3" loc="42(HplAtm1280GeneralIOC.G3):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="25">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.G4" loc="42(HplAtm1280GeneralIOC.G4):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="26">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.G5" loc="42(HplAtm1280GeneralIOC.G5):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="27">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.H0" loc="42(HplAtm1280GeneralIOC.H0):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:258">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f0782f56610"/></typename>
            </type-int>
          </value>
          <value cst="I:257">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f0782f56610"/></typename>
            </type-int>
          </value>
          <value cst="I:256">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f0782f56610"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.H1" loc="42(HplAtm1280GeneralIOC.H1):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:258">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f0782f56610"/></typename>
            </type-int>
          </value>
          <value cst="I:257">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f0782f56610"/></typename>
            </type-int>
          </value>
          <value cst="I:256">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f0782f56610"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.H2" loc="42(HplAtm1280GeneralIOC.H2):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:258">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f0782f56610"/></typename>
            </type-int>
          </value>
          <value cst="I:257">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f0782f56610"/></typename>
            </type-int>
          </value>
          <value cst="I:256">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f0782f56610"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.H3" loc="42(HplAtm1280GeneralIOC.H3):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:258">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f0782f56610"/></typename>
            </type-int>
          </value>
          <value cst="I:257">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f0782f56610"/></typename>
            </type-int>
          </value>
          <value cst="I:256">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f0782f56610"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.H4" loc="42(HplAtm1280GeneralIOC.H4):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:258">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f0782f56610"/></typename>
            </type-int>
          </value>
          <value cst="I:257">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f0782f56610"/></typename>
            </type-int>
          </value>
          <value cst="I:256">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f0782f56610"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.H5" loc="42(HplAtm1280GeneralIOC.H5):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:258">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f0782f56610"/></typename>
            </type-int>
          </value>
          <value cst="I:257">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f0782f56610"/></typename>
            </type-int>
          </value>
          <value cst="I:256">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f0782f56610"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.H6" loc="42(HplAtm1280GeneralIOC.H6):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:258">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f0782f56610"/></typename>
            </type-int>
          </value>
          <value cst="I:257">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f0782f56610"/></typename>
            </type-int>
          </value>
          <value cst="I:256">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f0782f56610"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.H7" loc="42(HplAtm1280GeneralIOC.H7):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:258">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f0782f56610"/></typename>
            </type-int>
          </value>
          <value cst="I:257">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f0782f56610"/></typename>
            </type-int>
          </value>
          <value cst="I:256">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f0782f56610"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.J0" loc="42(HplAtm1280GeneralIOC.J0):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:261">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f0782f56610"/></typename>
            </type-int>
          </value>
          <value cst="I:260">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f0782f56610"/></typename>
            </type-int>
          </value>
          <value cst="I:259">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f0782f56610"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.J1" loc="42(HplAtm1280GeneralIOC.J1):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:261">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f0782f56610"/></typename>
            </type-int>
          </value>
          <value cst="I:260">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f0782f56610"/></typename>
            </type-int>
          </value>
          <value cst="I:259">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f0782f56610"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.J2" loc="42(HplAtm1280GeneralIOC.J2):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:261">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f0782f56610"/></typename>
            </type-int>
          </value>
          <value cst="I:260">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f0782f56610"/></typename>
            </type-int>
          </value>
          <value cst="I:259">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f0782f56610"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.J3" loc="42(HplAtm1280GeneralIOC.J3):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:261">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f0782f56610"/></typename>
            </type-int>
          </value>
          <value cst="I:260">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f0782f56610"/></typename>
            </type-int>
          </value>
          <value cst="I:259">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f0782f56610"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.J4" loc="42(HplAtm1280GeneralIOC.J4):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:261">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f0782f56610"/></typename>
            </type-int>
          </value>
          <value cst="I:260">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f0782f56610"/></typename>
            </type-int>
          </value>
          <value cst="I:259">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f0782f56610"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.J5" loc="42(HplAtm1280GeneralIOC.J5):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:261">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f0782f56610"/></typename>
            </type-int>
          </value>
          <value cst="I:260">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f0782f56610"/></typename>
            </type-int>
          </value>
          <value cst="I:259">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f0782f56610"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.J6" loc="42(HplAtm1280GeneralIOC.J6):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="14">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:261">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f0782f56610"/></typename>
            </type-int>
          </value>
          <value cst="I:260">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f0782f56610"/></typename>
            </type-int>
          </value>
          <value cst="I:259">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f0782f56610"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.J7" loc="42(HplAtm1280GeneralIOC.J7):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="15">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:261">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f0782f56610"/></typename>
            </type-int>
          </value>
          <value cst="I:260">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f0782f56610"/></typename>
            </type-int>
          </value>
          <value cst="I:259">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f0782f56610"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.K0" loc="42(HplAtm1280GeneralIOC.K0):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="16">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:264">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f0782f56610"/></typename>
            </type-int>
          </value>
          <value cst="I:263">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f0782f56610"/></typename>
            </type-int>
          </value>
          <value cst="I:262">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f0782f56610"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.K1" loc="42(HplAtm1280GeneralIOC.K1):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="17">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:264">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f0782f56610"/></typename>
            </type-int>
          </value>
          <value cst="I:263">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f0782f56610"/></typename>
            </type-int>
          </value>
          <value cst="I:262">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f0782f56610"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.K2" loc="42(HplAtm1280GeneralIOC.K2):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="18">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:264">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f0782f56610"/></typename>
            </type-int>
          </value>
          <value cst="I:263">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f0782f56610"/></typename>
            </type-int>
          </value>
          <value cst="I:262">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f0782f56610"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.K3" loc="42(HplAtm1280GeneralIOC.K3):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="19">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:264">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f0782f56610"/></typename>
            </type-int>
          </value>
          <value cst="I:263">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f0782f56610"/></typename>
            </type-int>
          </value>
          <value cst="I:262">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f0782f56610"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.K4" loc="42(HplAtm1280GeneralIOC.K4):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="20">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:264">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f0782f56610"/></typename>
            </type-int>
          </value>
          <value cst="I:263">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f0782f56610"/></typename>
            </type-int>
          </value>
          <value cst="I:262">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f0782f56610"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.K5" loc="42(HplAtm1280GeneralIOC.K5):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="21">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:264">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f0782f56610"/></typename>
            </type-int>
          </value>
          <value cst="I:263">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f0782f56610"/></typename>
            </type-int>
          </value>
          <value cst="I:262">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f0782f56610"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.K6" loc="42(HplAtm1280GeneralIOC.K6):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="22">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:264">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f0782f56610"/></typename>
            </type-int>
          </value>
          <value cst="I:263">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f0782f56610"/></typename>
            </type-int>
          </value>
          <value cst="I:262">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f0782f56610"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.K7" loc="42(HplAtm1280GeneralIOC.K7):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="23">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:264">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f0782f56610"/></typename>
            </type-int>
          </value>
          <value cst="I:263">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f0782f56610"/></typename>
            </type-int>
          </value>
          <value cst="I:262">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f0782f56610"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.L0" loc="42(HplAtm1280GeneralIOC.L0):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="24">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:267">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f0782f56610"/></typename>
            </type-int>
          </value>
          <value cst="I:266">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f0782f56610"/></typename>
            </type-int>
          </value>
          <value cst="I:265">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f0782f56610"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.L1" loc="42(HplAtm1280GeneralIOC.L1):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="25">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:267">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f0782f56610"/></typename>
            </type-int>
          </value>
          <value cst="I:266">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f0782f56610"/></typename>
            </type-int>
          </value>
          <value cst="I:265">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f0782f56610"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.L2" loc="42(HplAtm1280GeneralIOC.L2):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="26">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:267">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f0782f56610"/></typename>
            </type-int>
          </value>
          <value cst="I:266">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f0782f56610"/></typename>
            </type-int>
          </value>
          <value cst="I:265">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f0782f56610"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.L3" loc="42(HplAtm1280GeneralIOC.L3):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="27">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:267">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f0782f56610"/></typename>
            </type-int>
          </value>
          <value cst="I:266">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f0782f56610"/></typename>
            </type-int>
          </value>
          <value cst="I:265">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f0782f56610"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.L4" loc="42(HplAtm1280GeneralIOC.L4):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="28">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:267">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f0782f56610"/></typename>
            </type-int>
          </value>
          <value cst="I:266">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f0782f56610"/></typename>
            </type-int>
          </value>
          <value cst="I:265">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f0782f56610"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.L5" loc="42(HplAtm1280GeneralIOC.L5):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="29">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:267">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f0782f56610"/></typename>
            </type-int>
          </value>
          <value cst="I:266">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f0782f56610"/></typename>
            </type-int>
          </value>
          <value cst="I:265">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f0782f56610"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.L6" loc="42(HplAtm1280GeneralIOC.L6):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="30">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:267">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f0782f56610"/></typename>
            </type-int>
          </value>
          <value cst="I:266">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f0782f56610"/></typename>
            </type-int>
          </value>
          <value cst="I:265">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f0782f56610"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.L7" loc="42(HplAtm1280GeneralIOC.L7):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="31">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:267">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f0782f56610"/></typename>
            </type-int>
          </value>
          <value cst="I:266">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f0782f56610"/></typename>
            </type-int>
          </value>
          <value cst="I:265">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f0782f56610"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="PS2C" loc="11:PS2/PS2C.nc">
      <documentation loc="1:PS2/PS2C.nc">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @file    PS2C.nc&#10; @author  Jan Nausner &#60;e01614835@student.tuwien.ac.at>&#10; @date    2018-12-09&#10;&#10; Configuration of the PS2 module.&#10;&#10;*</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PS2P" loc="18:PS2/PS2P.nc">
      <module/>
    </component>
    <component qname="HplAtmegaPinChange2C" loc="44:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtmegaPinChange2C.nc">
      <module/>
    </component>
    <component qname="VolumeAdcC" loc="13:VolumeAdc/VolumeAdcC.nc">
      <documentation loc="1:VolumeAdc/VolumeAdcC.nc">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @file VolumeAdcC.nc&#10; @author  Jan Nausner &#60;e01614835@student.tuwien.ac.at>&#10; @date    2018-12-09&#10;&#10; Configuration of the VolumeAdc module.&#10;&#10;*</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="VolumeAdcP" loc="13:VolumeAdc/VolumeAdcP.nc">
      <documentation loc="1:VolumeAdc/VolumeAdcP.nc">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @file VolumeAdcP.nc&#10; @author  Jan Nausner &#60;e01614835@student.tuwien.ac.at>&#10; @date    2018-12-09&#10;&#10; VolumeAdc module implementation.&#10;&#10;*</long>
      </documentation>
      <module/>
    </component>
    <component qname="VolumeAdcC.Adc" loc="21(VolumeAdcC.Adc):../tinyos_ws18/tos/chips_ecs/atm1280/adc/AdcReadClientC.nc">
      <documentation loc="10:../tinyos_ws18/tos/chips_ecs/atm1280/adc/AdcReadClientC.nc">
        <short>&#10; Provide, as per TEP101, arbitrated access via a Read interface to the&#10; Atmega1280 ADC.</short>
        <long>&#10; Provide, as per TEP101, arbitrated access via a Read interface to the&#10; Atmega1280 ADC.  Users of this component must link it to an&#10; implementation of Atm1280AdcConfig which provides the ADC parameters&#10; (channel, etc).&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AdcReadClientC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="WireAdcP" loc="17:../tinyos_ws18/tos/chips_ecs/atm1280/adc/WireAdcP.nc">
      <documentation loc="10:../tinyos_ws18/tos/chips_ecs/atm1280/adc/WireAdcP.nc">
        <short>&#10; Support component for AdcReadClientC and AdcReadNowClientC.</short>
        <long>&#10; Support component for AdcReadClientC and AdcReadNowClientC.&#10;&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm1280AdcC" loc="51:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcC.nc">
      <documentation loc="44:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcC.nc">
        <short>&#10; HAL for the Atmega128 A/D conversion susbsystem.</short>
        <long>&#10; HAL for the Atmega128 A/D conversion susbsystem.&#10;&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm1280AdcP" loc="51:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcP.nc" safe="">
      <documentation loc="40:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcP.nc">
        <short>&#10; Internal component of the Atmega1280 A/D HAL.</short>
        <long>&#10; Internal component of the Atmega1280 A/D HAL.&#10;&#10; @author Jason Hill&#10; @author David Gay&#10; @author Philip Levis&#10; @author Phil Buonadonna&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm1280AdcC" loc="44:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280AdcC.nc">
      <documentation loc="36:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280AdcC.nc">
        <short>&#10; HPL for the Atmega1280 A/D conversion susbsystem.</short>
        <long>&#10; HPL for the Atmega1280 A/D conversion susbsystem.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm1280AdcP" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280AdcP.nc" safe="">
      <documentation loc="38:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280AdcP.nc">
        <short>&#10; HPL for the Atmega1280 A/D conversion susbsystem.</short>
        <long>&#10; HPL for the Atmega1280 A/D conversion susbsystem.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="Atm1280AdcC.AdcArbiter" loc="89(Atm1280AdcC.AdcArbiter):../tinyos_ws18/tos/system/RoundRobinArbiterC.nc">
      <documentation loc="69:../tinyos_ws18/tos/system/RoundRobinArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; a Round Robin fashion.  An array is used to keep track of which users have &#10; put in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in Round Robin order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="RoundRobinArbiterC"/>
        <arguments>
          <value cst="S:atm128adc.resource">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm1280AdcC.AdcArbiter.Queue" loc="42(Atm1280AdcC.AdcArbiter.Queue):../tinyos_ws18/tos/system/RoundRobinResourceQueueC.nc">
      <documentation loc="33:../tinyos_ws18/tos/system/RoundRobinResourceQueueC.nc">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.7 $&#10; @date $Date: 2010-06-29 22:07:56 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="RoundRobinResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Atm1280AdcC.AdcArbiter.Arbiter" loc="52(Atm1280AdcC.AdcArbiter.Arbiter):../tinyos_ws18/tos/system/ArbiterP.nc">
      <documentation loc="30:../tinyos_ws18/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Atm1280AdcC.PM" loc="67(Atm1280AdcC.PM):../tinyos_ws18/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <documentation loc="41:../tinyos_ws18/tos/lib/power/AsyncStdControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>AsyncStdControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>StdControl&#60;/code> or&#10; &#60;code>SplitControl&#60;/code> interfaces, please use either the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>SplitControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AsyncStdControlPowerManagerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm1280AdcC.PM.PowerManager" loc="58(Atm1280AdcC.PM.PowerManager):../tinyos_ws18/tos/lib/power/AsyncPowerManagerP.nc">
      <documentation loc="41:../tinyos_ws18/tos/lib/power/AsyncPowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="AsyncPowerManagerP"/>
      </instance>
      <module/>
    </component>
    <component qname="AdcP" loc="46:../tinyos_ws18/tos/chips_ecs/atm1280/adc/AdcP.nc" safe="">
      <documentation loc="39:../tinyos_ws18/tos/chips_ecs/atm1280/adc/AdcP.nc">
        <short>&#10; Convert ATmega1280 HAL A/D interface to the HIL interfaces.</short>
        <long>&#10; Convert ATmega1280 HAL A/D interface to the HIL interfaces.&#10; @author David Gay&#10; @author Jan Hauer &#60;hauer@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="WireAdcP.ArbitrateRead" loc="23(WireAdcP.ArbitrateRead):../tinyos_ws18/tos/system/ArbitratedReadC.nc">
      <documentation loc="10:../tinyos_ws18/tos/system/ArbitratedReadC.nc">
        <short>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.</short>
        <long>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.&#10;&#10; Note that this code does not deal with unexpected events: it assumes&#10; that all events it receives are in response to commands that it&#10; made. See tos/chips/atm128/adc for an example of using ArbitratedReadC &#10; in a safe way.&#10;&#10; @param width_t Width of the underlying Read interface.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="ArbitratedReadC"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f0782f56610"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="BufferedLcdC" loc="6:../tinyos_ws18/tos/lib_ecs/lcd/BufferedLcdC.nc">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/lcd/BufferedLcdC.nc">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;22.01.2012&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="BufferedLcdC.Timer" loc="44(BufferedLcdC.Timer):../tinyos_ws18/tos/system/TimerMilliC.nc">
      <documentation loc="33:../tinyos_ws18/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="BufferedLcdC.BufferedLcdP" loc="6(BufferedLcdC.BufferedLcdP):../tinyos_ws18/tos/lib_ecs/lcd/BufferedLcdP.nc">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/lcd/BufferedLcdP.nc">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;22.01.2012&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="BufferedLcdP"/>
        <arguments>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:16">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplLcdC" loc="6:../tinyos_ws18/tos/lib_ecs/lcd/HplLcdC.nc">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/lcd/HplLcdC.nc">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;22.01.2012&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplLcdP" loc="6:../tinyos_ws18/tos/lib_ecs/lcd/HplLcdP.nc">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/lcd/HplLcdP.nc">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;22.01.2012&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RadioScannerAppC.VolumeTimer" loc="44(RadioScannerAppC.VolumeTimer):../tinyos_ws18/tos/system/TimerMilliC.nc">
      <documentation loc="33:../tinyos_ws18/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RadioScannerAppC.DisplayTimer" loc="44(RadioScannerAppC.DisplayTimer):../tinyos_ws18/tos/system/TimerMilliC.nc">
      <documentation loc="33:../tinyos_ws18/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RadioScannerAppC.ErrorTimer" loc="44(RadioScannerAppC.ErrorTimer):../tinyos_ws18/tos/system/TimerMilliC.nc">
      <documentation loc="33:../tinyos_ws18/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="LlcC" loc="10:../tinyos_ws18/tos/lib_ecs/llc/LlcC.nc" abstract="">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/llc/mac.h">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;12.12.2011&#10;&#10; based on an implementation of Harald Glanzer, 0727156 TU Wien&#10;</long>
      </documentation>
      <parameters>
        <constant name="ETHER_TYPE" ref="0x7f07822509d0" loc="10:../tinyos_ws18/tos/lib_ecs/llc/LlcC.nc">
          <component-ref qname="LlcC"/>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f0782f56610"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="LlcP" loc="10:../tinyos_ws18/tos/lib_ecs/llc/LlcP.nc" abstract="">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/llc/mac.h">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;12.12.2011&#10;&#10; based on an implementation of Harald Glanzer, 0727156 TU Wien&#10;</long>
      </documentation>
      <parameters>
        <constant name="ETHER_TYPE" ref="0x7f07821f8bb0" loc="10:../tinyos_ws18/tos/lib_ecs/llc/LlcP.nc">
          <component-ref qname="LlcP"/>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f0782f56610"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="PacketQueueC" loc="8:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueueC.nc" abstract="">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueueC.nc">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;12.12.2011&#10;&#10; based on an implementation of Harald Glanzer, 0727156 TU Wien&#10;</long>
      </documentation>
      <parameters>
        <typedef name="ITEM_TYPE" ref="0x7f07821c41c0" loc="8:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueueC.nc">
          <component-ref qname="PacketQueueC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="ITEM_TYPE" scoped="" ref="0x7f07821c41c0"/></type-var>
        </typedef>
        <constant name="LEN" ref="0x7f07821c44f0" loc="8:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueueC.nc">
          <component-ref qname="PacketQueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="PacketQueueP" loc="11:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueueP.nc" abstract="">
      <parameters>
        <typedef name="ITEM_TYPE" ref="0x7f07821b7020" loc="11:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueueP.nc">
          <component-ref qname="PacketQueueP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="ITEM_TYPE" scoped="" ref="0x7f07821b7020"/></type-var>
        </typedef>
        <constant name="QUEUE_LEN" ref="0x7f07821b7390" loc="11:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueueP.nc">
          <component-ref qname="PacketQueueP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="TimerMilliC" loc="44:../tinyos_ws18/tos/system/TimerMilliC.nc" abstract="">
      <documentation loc="33:../tinyos_ws18/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm1280AlarmSyncC" loc="32:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncC.nc" abstract="">
      <documentation loc="11:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncC.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10; @author Markus Hartmann&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision" ref="0x7f0782102c70" loc="32:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncC.nc">
          <component-ref qname="Atm1280AlarmSyncC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x7f0782102c70"/></type-var>
        </typedef>
        <constant name="hw_prescaler" ref="0x7f07820ff060" loc="32:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncC.nc">
          <component-ref qname="Atm1280AlarmSyncC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
          </type-int>
        </constant>
        <constant name="sw_prescaler" ref="0x7f07820ff3f0" loc="32:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncC.nc">
          <component-ref qname="Atm1280AlarmSyncC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm1280AlarmSyncP" loc="33:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncP.nc" abstract="" safe="">
      <documentation loc="11:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncP.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 2&#10; and never lets timer 2 overflow.&#10;&#10; Based on Atm1281AlarmAsyncP&#10;&#10; @author David Gay&#10; @author Markus Hartmann &#60;e9808811@student.tuwien.ac.at>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision" ref="0x7f07820f3020" loc="33:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncP.nc">
          <component-ref qname="Atm1280AlarmSyncP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x7f07820f3020"/></type-var>
        </typedef>
        <constant name="hw_prescaler" ref="0x7f07820f33b0" loc="33:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncP.nc">
          <component-ref qname="Atm1280AlarmSyncP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
          </type-int>
        </constant>
        <constant name="sw_prescaler" ref="0x7f07820f3740" loc="33:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncP.nc">
          <component-ref qname="Atm1280AlarmSyncP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AlarmToTimerC" loc="46:../tinyos_ws18/tos/lib/timer/AlarmToTimerC.nc" abstract="" safe="">
      <documentation loc="36:../tinyos_ws18/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f0782008160" loc="46:../tinyos_ws18/tos/lib/timer/AlarmToTimerC.nc">
          <component-ref qname="AlarmToTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f0782008160"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="VirtualizeTimerC" loc="46:../tinyos_ws18/tos/lib/timer/VirtualizeTimerC.nc" abstract="" safe="">
      <documentation loc="34:../tinyos_ws18/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f0781fd6230" loc="46:../tinyos_ws18/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f0781fd6230"/></type-var>
        </typedef>
        <constant name="max_timers" ref="0x7f0781fd6560" loc="46:../tinyos_ws18/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="CounterToLocalTimeC" loc="46:../tinyos_ws18/tos/lib/timer/CounterToLocalTimeC.nc" abstract="" safe="">
      <documentation loc="36:../tinyos_ws18/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f0781f88de0" loc="46:../tinyos_ws18/tos/lib/timer/CounterToLocalTimeC.nc">
          <component-ref qname="CounterToLocalTimeC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f0781f88de0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="IcmpC" loc="10:../tinyos_ws18/tos/lib_ecs/icmp/IcmpC.nc" abstract="">
      <parameters>
        <constant name="TYPE" ref="0x7f0781f50650" loc="10:../tinyos_ws18/tos/lib_ecs/icmp/IcmpC.nc">
          <component-ref qname="IcmpC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="IpC" loc="10:../tinyos_ws18/tos/lib_ecs/ip/IpC.nc" abstract="">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/ip/ip.h">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;12.12.2011&#10;&#10; based on an implementation of Harald Glanzer, 0727156 TU Wien&#10;</long>
      </documentation>
      <parameters>
        <constant name="PROTOCOL" ref="0x7f0781f436b0" loc="10:../tinyos_ws18/tos/lib_ecs/ip/IpC.nc">
          <component-ref qname="IpC"/>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f0782f56610"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="IpP" loc="10:../tinyos_ws18/tos/lib_ecs/ip/IpP.nc" abstract="">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/ip/ip.h">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;12.12.2011&#10;&#10; based on an implementation of Harald Glanzer, 0727156 TU Wien&#10;</long>
      </documentation>
      <parameters>
        <constant name="PROTOCOL" ref="0x7f0781f3f650" loc="10:../tinyos_ws18/tos/lib_ecs/ip/IpP.nc">
          <component-ref qname="IpP"/>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f0782f56610"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="IcmpP" loc="10:../tinyos_ws18/tos/lib_ecs/icmp/IcmpP.nc" abstract="">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/icmp/icmp.h">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;12.12.2011&#10;&#10; based on an implementation of Harald Glanzer, 0727156 TU Wien&#10;</long>
      </documentation>
      <parameters>
        <constant name="TYPE" ref="0x7f0781ef2020" loc="10:../tinyos_ws18/tos/lib_ecs/icmp/IcmpP.nc">
          <component-ref qname="IcmpP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOPortP" loc="40:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc" abstract="">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x7f0781d8d900" loc="40:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x7f0781d8dc70" loc="40:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x7f0781d8a020" loc="40:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOPinP" loc="41:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc" abstract="" safe="">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x7f0781d7fd00" loc="41:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x7f0781d7c0d0" loc="42:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x7f0781d7c460" loc="43:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x7f0781d7c7b0" loc="44:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOSlowPinP" loc="42:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc" abstract="" safe="">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x7f0781cea890" loc="42:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x7f0781ceac20" loc="43:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x7f0781ce7020" loc="44:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x7f0781ce7370" loc="45:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOFastPortP" loc="6:../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc" abstract="">
      <documentation loc="1:../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;22.01.2012&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x7f0781c45ba0" loc="6:../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
          <component-ref qname="HplAtm128GeneralIOFastPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x7f0781c42020" loc="6:../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
          <component-ref qname="HplAtm128GeneralIOFastPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x7f0781c42390" loc="6:../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
          <component-ref qname="HplAtm128GeneralIOFastPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="SimpleFcfsArbiterC" loc="83:../tinyos_ws18/tos/system/SimpleFcfsArbiterC.nc" abstract="">
      <documentation loc="62:../tinyos_ws18/tos/system/SimpleFcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0x7f0781a5ce40" loc="83:../tinyos_ws18/tos/system/SimpleFcfsArbiterC.nc">
          <component-ref qname="SimpleFcfsArbiterC"/>
          <type-pointer size="I:2" alignment="I:1">
            <type-int cname="char" unsigned="" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="FcfsResourceQueueC" loc="42:../tinyos_ws18/tos/system/FcfsResourceQueueC.nc" abstract="" safe="">
      <parameters>
        <constant name="size" ref="0x7f0781a4c210" loc="42:../tinyos_ws18/tos/system/FcfsResourceQueueC.nc">
          <component-ref qname="FcfsResourceQueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="SimpleArbiterP" loc="49:../tinyos_ws18/tos/system/SimpleArbiterP.nc" abstract="" safe="">
      <documentation loc="30:../tinyos_ws18/tos/system/SimpleArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="HplAtm128InterruptPinP" loc="39:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc" abstract="" safe="">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <constant name="ctrl_addr" ref="0x7f07819c33d0" loc="39:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
          <component-ref qname="HplAtm128InterruptPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
          </type-int>
        </constant>
        <constant name="edge0bit" ref="0x7f07819c3760" loc="40:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
          <component-ref qname="HplAtm128InterruptPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
          </type-int>
        </constant>
        <constant name="edge1bit" ref="0x7f07819c3af0" loc="41:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
          <component-ref qname="HplAtm128InterruptPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x7f07819c3e40" loc="42:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
          <component-ref qname="HplAtm128InterruptPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="UdpC" loc="10:../tinyos_ws18/tos/lib_ecs/udp/UdpC.nc" abstract="">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/udp/udp.h">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;12.12.2011&#10;&#10; based on an implementation of Harald Glanzer, 0727156 TU Wien&#10;</long>
      </documentation>
      <parameters>
        <constant name="PORT" ref="0x7f0781982450" loc="10:../tinyos_ws18/tos/lib_ecs/udp/UdpC.nc">
          <component-ref qname="UdpC"/>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f0782f56610"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="UdpP" loc="10:../tinyos_ws18/tos/lib_ecs/udp/UdpP.nc" abstract="">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/udp/udp.h">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;12.12.2011&#10;&#10; based on an implementation of Harald Glanzer, 0727156 TU Wien&#10;</long>
      </documentation>
      <parameters>
        <constant name="PORT" ref="0x7f078197de70" loc="10:../tinyos_ws18/tos/lib_ecs/udp/UdpP.nc">
          <component-ref qname="UdpP"/>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f0782f56610"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128I2CMasterC" loc="43:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterC.nc" abstract="">
      <documentation loc="32:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
        <short>&#10; The basic client abstraction of the I2C on the Atmega128.</short>
        <long>&#10; The basic client abstraction of the I2C on the Atmega128. I2C&#10; device drivers should instantiate one of these to ensure&#10; exclusive access to the I2C bus.&#10;&#10; @author Philip Levis&#10; @date   May 28, 2006&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="FcfsArbiterC" loc="89:../tinyos_ws18/tos/system/FcfsArbiterC.nc" abstract="">
      <documentation loc="69:../tinyos_ws18/tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0x7f07817fcc20" loc="89:../tinyos_ws18/tos/system/FcfsArbiterC.nc">
          <component-ref qname="FcfsArbiterC"/>
          <type-pointer size="I:2" alignment="I:1">
            <type-int cname="char" unsigned="" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="ArbiterP" loc="52:../tinyos_ws18/tos/system/ArbiterP.nc" abstract="" safe="">
      <documentation loc="30:../tinyos_ws18/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
        <constant name="default_owner_id" ref="0x7f07817eca00" loc="52:../tinyos_ws18/tos/system/ArbiterP.nc">
          <component-ref qname="ArbiterP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AsyncPowerManagerP" loc="58:../tinyos_ws18/tos/lib/power/AsyncPowerManagerP.nc" abstract="" safe="">
      <documentation loc="41:../tinyos_ws18/tos/lib/power/AsyncPowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128I2CMasterImplP" loc="40:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc" abstract="">
      <documentation loc="32:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc">
        <short>&#10; The configuration that takes the underlying I2C driver on the &#10; Atmega128 and turns it into a shared abstraction.</short>
        <long>&#10; The configuration that takes the underlying I2C driver on the &#10; Atmega128 and turns it into a shared abstraction.&#10;&#10; @date May 28 2006&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128I2CMasterPacketP" loc="76:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc" abstract="">
      <documentation loc="61:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
        <short>&#10; This driver implements an interupt driven I2C Master controller &#10; Hardware Abstraction Layer (HAL) to the ATmega128 &#10; two-wire-interface (TWI) hardware subsystem.</short>
        <long>&#10; This driver implements an interupt driven I2C Master controller &#10; Hardware Abstraction Layer (HAL) to the ATmega128 &#10; two-wire-interface (TWI) hardware subsystem.&#10;&#10; @author Philip Levis&#10; @author Philipp Sommer, ETH Zurich, sommer@tik.ee.ethz.ch&#10; @author Roland Flury, ETH Zurich, rflury@tik.ee.ethz.ch&#10; @author Thomas Fahrni, ETH Zurich, tfahrni@ee.ethz.ch&#10; @author Richard Huber, ETH Zurich, rihuber@ee.ethz.ch&#10; @author Lars Schor, ETH Zurich, lschor@ee.ethz.ch&#10; @author Andras Biro, University of Szeged&#10;&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOSlowPinP" loc="42:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc" abstract="" safe="">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x7f078150a4c0" loc="42:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f0782f56610"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x7f078150a860" loc="43:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f0782f56610"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x7f078150ac00" loc="44:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f0782f56610"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x7f0781509020" loc="45:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AdcReadClientC" loc="21:../tinyos_ws18/tos/chips_ecs/atm1280/adc/AdcReadClientC.nc" abstract="">
      <documentation loc="10:../tinyos_ws18/tos/chips_ecs/atm1280/adc/AdcReadClientC.nc">
        <short>&#10; Provide, as per TEP101, arbitrated access via a Read interface to the&#10; Atmega1280 ADC.</short>
        <long>&#10; Provide, as per TEP101, arbitrated access via a Read interface to the&#10; Atmega1280 ADC.  Users of this component must link it to an&#10; implementation of Atm1280AdcConfig which provides the ADC parameters&#10; (channel, etc).&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="RoundRobinArbiterC" loc="89:../tinyos_ws18/tos/system/RoundRobinArbiterC.nc" abstract="">
      <documentation loc="69:../tinyos_ws18/tos/system/RoundRobinArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; a Round Robin fashion.  An array is used to keep track of which users have &#10; put in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in Round Robin order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0x7f07812d65c0" loc="89:../tinyos_ws18/tos/system/RoundRobinArbiterC.nc">
          <component-ref qname="RoundRobinArbiterC"/>
          <type-pointer size="I:2" alignment="I:1">
            <type-int cname="char" unsigned="" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="RoundRobinResourceQueueC" loc="42:../tinyos_ws18/tos/system/RoundRobinResourceQueueC.nc" abstract="" safe="">
      <documentation loc="33:../tinyos_ws18/tos/system/RoundRobinResourceQueueC.nc">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.7 $&#10; @date $Date: 2010-06-29 22:07:56 $&#10;</long>
      </documentation>
      <parameters>
        <constant name="size" ref="0x7f07812d0e80" loc="42:../tinyos_ws18/tos/system/RoundRobinResourceQueueC.nc">
          <component-ref qname="RoundRobinResourceQueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AsyncStdControlPowerManagerC" loc="67:../tinyos_ws18/tos/lib/power/AsyncStdControlPowerManagerC.nc" abstract="">
      <documentation loc="41:../tinyos_ws18/tos/lib/power/AsyncStdControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>AsyncStdControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>StdControl&#60;/code> or&#10; &#60;code>SplitControl&#60;/code> interfaces, please use either the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>SplitControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="ArbitratedReadC" loc="23:../tinyos_ws18/tos/system/ArbitratedReadC.nc" abstract="" safe="">
      <documentation loc="10:../tinyos_ws18/tos/system/ArbitratedReadC.nc">
        <short>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.</short>
        <long>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.&#10;&#10; Note that this code does not deal with unexpected events: it assumes&#10; that all events it receives are in response to commands that it&#10; made. See tos/chips/atm128/adc for an example of using ArbitratedReadC &#10; in a safe way.&#10;&#10; @param width_t Width of the underlying Read interface.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
        <typedef name="width_t" ref="0x7f078125f1f0" loc="23:../tinyos_ws18/tos/system/ArbitratedReadC.nc">
          <component-ref qname="ArbitratedReadC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="width_t" scoped="" ref="0x7f078125f1f0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="BufferedLcdP" loc="6:../tinyos_ws18/tos/lib_ecs/lcd/BufferedLcdP.nc" abstract="">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/lcd/BufferedLcdP.nc">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;22.01.2012&#10;</long>
      </documentation>
      <parameters>
        <constant name="LINES" ref="0x7f078122eb70" loc="6:../tinyos_ws18/tos/lib_ecs/lcd/BufferedLcdP.nc">
          <component-ref qname="BufferedLcdP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
          </type-int>
        </constant>
        <constant name="LINE_WIDTH" ref="0x7f078122b020" loc="6:../tinyos_ws18/tos/lib_ecs/lcd/BufferedLcdP.nc">
          <component-ref qname="BufferedLcdP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
  </components>
  <interfaces>
    <interface provided="0" name="SoftwareInit" ref="0x7f07824aabf0" loc="58:../tinyos_ws18/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x7f07824aabf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f07824ad020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x7f07824ab720" loc="57:../tinyos_ws18/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x7f07824ab720"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7f07824abaa0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x7f07824a7d50" loc="52:../tinyos_ws18/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x7f07824a7d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f07824a6100"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f07824add00" loc="46:../tinyos_ws18/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f07824add00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f07824a80a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128Calibrate" ref="0x7f07824a7020" loc="50:../tinyos_ws18/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x7f07824a7020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x7f07824a73a0"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x7f07824a7530"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x7f07824a76c0"/>
        <function-ref name="actualMicro" scoped="" ref="0x7f07824a7850"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x7f07824a79e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteInit" ref="0x7f078249f7a0" loc="45:../tinyos_ws18/tos/platforms/bigAVR6_1280/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MoteInit" scoped="" ref="0x7f078249f7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f078249fb20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f078249f0c0" loc="44:../tinyos_ws18/tos/platforms/bigAVR6_1280/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f078249f0c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f078249f440"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MeasureClock" ref="0x7f078249e020" loc="46:../tinyos_ws18/tos/platforms/bigAVR6_1280/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MeasureClock" scoped="" ref="0x7f078249e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f078249e3a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x7f07824976f0" loc="4:../tinyos_ws18/tos/platforms/bigAVR6/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x7f07824976f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f0782497a70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x7f0782497020" loc="3:../tinyos_ws18/tos/platforms/bigAVR6/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x7f0782497020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f07824973a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f078248e860" loc="51:../tinyos_ws18/tos/platforms/bigAVR6_1280/MeasureClockC.nc">
      <component-ref qname="MeasureClockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f078248e860"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x7f078263a3a0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x7f078263a3a0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f078248ebe0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128Calibrate" ref="0x7f078248d020" loc="52:../tinyos_ws18/tos/platforms/bigAVR6_1280/MeasureClockC.nc">
      <component-ref qname="MeasureClockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x7f078248d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x7f078248d3a0"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x7f078248d530"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x7f078248d6c0"/>
        <function-ref name="actualMicro" scoped="" ref="0x7f078248d850"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x7f078248d9e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x7f078247a720" loc="60:../tinyos_ws18/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x7f078247a720"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f078247aaa0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x7f07824a9e20" loc="57:../tinyos_ws18/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x7f07824a9e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7f078247b1c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PlatformInit" ref="0x7f078247a020" loc="59:../tinyos_ws18/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x7f078247a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f078247a3a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Scheduler" ref="0x7f078247b4b0" loc="58:../tinyos_ws18/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x7f078247b4b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f078247b830"/>
        <function-ref name="taskLoop" scoped="" ref="0x7f078247b9c0"/>
        <function-ref name="runNextTask" scoped="" ref="0x7f078247bb50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x7f078262ebd0" loc="48:../tinyos_ws18/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0x7f078262ebd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f0782662020"/>
        <function-ref name="runTask" scoped="" ref="0x7f07826621b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x7f0782638a20" loc="47:../tinyos_ws18/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x7f0782638a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f0782638da0"/>
        <function-ref name="taskLoop" scoped="" ref="0x7f0782fe6020"/>
        <function-ref name="runNextTask" scoped="" ref="0x7f0782fe61b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x7f07825389e0" loc="56:../tinyos_ws18/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0x7f07825389e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f0782538d60"/>
        <function-ref name="runTask" scoped="" ref="0x7f0782536020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuSleep" ref="0x7f07825330d0" loc="57:../tinyos_ws18/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0x7f07825330d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x7f0782533450"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x7f0782539990" loc="55:../tinyos_ws18/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x7f0782539990"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f0782539d10"/>
        <function-ref name="taskLoop" scoped="" ref="0x7f0782538020"/>
        <function-ref name="runNextTask" scoped="" ref="0x7f07825381b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerOverride" ref="0x7f0782516de0" loc="88:../tinyos_ws18/tos/chips_ecs/atm1280/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x7f0782516de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x7f0782519180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuSleep" ref="0x7f0782551080" loc="84:../tinyos_ws18/tos/chips_ecs/atm1280/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0x7f0782551080"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x7f0782551400"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerState" ref="0x7f07825175a0" loc="85:../tinyos_ws18/tos/chips_ecs/atm1280/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x7f07825175a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x7f0782517920"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DB" ref="0x7f0782450020" loc="32:RadioScannerP.nc">
      <component-ref qname="RadioScannerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DB" scoped="" ref="0x7f0782450020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Database"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannelList" scoped="" ref="0x7f07824503a0"/>
        <function-ref name="receivedChannelEntry" scoped="" ref="0x7f0782450530"/>
        <function-ref name="saveChannel" scoped="" ref="0x7f07824506c0"/>
        <function-ref name="savedChannel" scoped="" ref="0x7f0782450850"/>
        <function-ref name="getChannel" scoped="" ref="0x7f07824509e0"/>
        <function-ref name="purgeChannelList" scoped="" ref="0x7f0782450b70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x7f07824634e0" loc="28:RadioScannerP.nc">
      <component-ref qname="RadioScannerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x7f07824634e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7f0782463860"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioInit" ref="0x7f078244a020" loc="33:RadioScannerP.nc">
      <component-ref qname="RadioScannerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioInit" scoped="" ref="0x7f078244a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f078244a3a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="volumeKnob" ref="0x7f0782430340" loc="36:RadioScannerP.nc">
      <component-ref qname="RadioScannerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="volumeKnob" scoped="" ref="0x7f0782430340"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f0782f56610"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f0782435020"/>
        <function-ref name="readDone" scoped="" ref="0x7f07824354a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="inputTuneChannel" ref="0x7f078240c2b0" loc="111:RadioScannerP.nc">
      <component-ref qname="RadioScannerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="inputTuneChannel" scoped="" ref="0x7f078240c2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f078240c730"/>
        <function-ref name="runTask" scoped="" ref="0x7f078240c8c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Keyboard" ref="0x7f0782434600" loc="35:RadioScannerP.nc">
      <component-ref qname="RadioScannerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Keyboard" scoped="" ref="0x7f0782434600"/></type-interface>
      <instance>
        <interfacedef-ref qname="PS2"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f0782434980"/>
        <function-ref name="receivedChar" scoped="" ref="0x7f0782434b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VolumeTimer" ref="0x7f0782425820" loc="37:RadioScannerP.nc">
      <component-ref qname="RadioScannerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="VolumeTimer" scoped="" ref="0x7f0782425820"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f07825841a0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f0782584510"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f0782424cf0"/>
        <function-ref name="fired" scoped="" ref="0x7f078242f300"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f07824240d0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f078242fc00"/>
        <function-ref name="getdt" scoped="" ref="0x7f0782422660"/>
        <function-ref name="gett0" scoped="" ref="0x7f07824221e0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f078242f780"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f0782433480"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f07824246e0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f0782433950"/>
        <function-ref name="stop" scoped="" ref="0x7f0782433e20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="setVolume" ref="0x7f078240a2a0" loc="113:RadioScannerP.nc">
      <component-ref qname="RadioScannerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="setVolume" scoped="" ref="0x7f078240a2a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f078240a620"/>
        <function-ref name="runTask" scoped="" ref="0x7f078240a7b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startSeekUp" ref="0x7f07824082a0" loc="114:RadioScannerP.nc">
      <component-ref qname="RadioScannerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="startSeekUp" scoped="" ref="0x7f07824082a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f0782408620"/>
        <function-ref name="runTask" scoped="" ref="0x7f07824087b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="handleChar" ref="0x7f07823fe410" loc="130:RadioScannerP.nc">
      <component-ref qname="RadioScannerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="handleChar" scoped="" ref="0x7f07823fe410"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f07823fe790"/>
        <function-ref name="runTask" scoped="" ref="0x7f07823fe920"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="seekBand" ref="0x7f07823d8200" loc="315:RadioScannerP.nc">
      <component-ref qname="RadioScannerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="seekBand" scoped="" ref="0x7f07823d8200"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f07823d8580"/>
        <function-ref name="runTask" scoped="" ref="0x7f07823d8710"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DBInit" ref="0x7f0782451640" loc="31:RadioScannerP.nc">
      <component-ref qname="RadioScannerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DBInit" scoped="" ref="0x7f0782451640"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f07824519c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="displayHardError" ref="0x7f07824032b0" loc="118:RadioScannerP.nc">
      <component-ref qname="RadioScannerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="displayHardError" scoped="" ref="0x7f07824032b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f0782403630"/>
        <function-ref name="runTask" scoped="" ref="0x7f07824037c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Lcd" ref="0x7f078244b6b0" loc="30:RadioScannerP.nc">
      <component-ref qname="RadioScannerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Lcd" scoped="" ref="0x7f078244b6b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BufferedLcd"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f078244ba30"/>
        <function-ref name="forceRefresh" scoped="" ref="0x7f078244bbc0"/>
        <function-ref name="goTo" scoped="" ref="0x7f078244bd50"/>
        <function-ref name="write" scoped="" ref="0x7f0782451020"/>
        <function-ref name="autoRefresh" scoped="" ref="0x7f07824511b0"/>
        <function-ref name="write_P" scoped="" ref="0x7f0782451340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ErrorTimer" ref="0x7f078241c1c0" loc="39:RadioScannerP.nc">
      <component-ref qname="RadioScannerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ErrorTimer" scoped="" ref="0x7f078241c1c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f07825841a0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f0782584510"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f0782418630"/>
        <function-ref name="fired" scoped="" ref="0x7f078241bc30"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f078241a9d0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f078241a550"/>
        <function-ref name="getdt" scoped="" ref="0x7f0782417020"/>
        <function-ref name="gett0" scoped="" ref="0x7f0782418ab0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f078241a0d0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f078241cdb0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f0782418020"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f078241b2e0"/>
        <function-ref name="stop" scoped="" ref="0x7f078241b7b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DisplayTimer" ref="0x7f0782422cb0" loc="38:RadioScannerP.nc">
      <component-ref qname="RadioScannerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DisplayTimer" scoped="" ref="0x7f0782422cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f07825841a0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f0782584510"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f078241d220"/>
        <function-ref name="fired" scoped="" ref="0x7f07824207c0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f078241f590"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f078241f110"/>
        <function-ref name="getdt" scoped="" ref="0x7f078241db20"/>
        <function-ref name="gett0" scoped="" ref="0x7f078241d6a0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f0782420c40"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f0782421940"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f078241fba0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f0782421e10"/>
        <function-ref name="stop" scoped="" ref="0x7f0782420340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Radio" ref="0x7f0782437d60" loc="34:RadioScannerP.nc">
      <component-ref qname="RadioScannerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Radio" scoped="" ref="0x7f0782437d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="FMClick"/>
      </instance>
      <interface-functions>
        <function-ref name="tune" scoped="" ref="0x7f0782441e00"/>
        <function-ref name="initDone" scoped="" ref="0x7f0782441310"/>
        <function-ref name="setVolume" scoped="" ref="0x7f07824414a0"/>
        <function-ref name="rdsReceived" scoped="" ref="0x7f0782441630"/>
        <function-ref name="receiveRDS" scoped="" ref="0x7f07824417c0"/>
        <function-ref name="tuneComplete" scoped="" ref="0x7f0782441950"/>
        <function-ref name="getChannel" scoped="" ref="0x7f0782441ae0"/>
        <function-ref name="seekComplete" scoped="" ref="0x7f0782441c70"/>
        <function-ref name="seek" scoped="" ref="0x7f0782441180"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="displayChannelInfo" ref="0x7f078240b330" loc="112:RadioScannerP.nc">
      <component-ref qname="RadioScannerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="displayChannelInfo" scoped="" ref="0x7f078240b330"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f078240b6b0"/>
        <function-ref name="runTask" scoped="" ref="0x7f078240b840"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startTune" ref="0x7f07824064a0" loc="116:RadioScannerP.nc">
      <component-ref qname="RadioScannerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="startTune" scoped="" ref="0x7f07824064a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f0782406820"/>
        <function-ref name="runTask" scoped="" ref="0x7f07824069b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="addChannel" ref="0x7f0782405380" loc="117:RadioScannerP.nc">
      <component-ref qname="RadioScannerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="addChannel" scoped="" ref="0x7f0782405380"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f0782405700"/>
        <function-ref name="runTask" scoped="" ref="0x7f0782405890"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="displaySoftError" ref="0x7f07824022b0" loc="119:RadioScannerP.nc">
      <component-ref qname="RadioScannerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="displaySoftError" scoped="" ref="0x7f07824022b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f0782402630"/>
        <function-ref name="runTask" scoped="" ref="0x7f07824027c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startSeekDown" ref="0x7f07824072a0" loc="115:RadioScannerP.nc">
      <component-ref qname="RadioScannerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="startSeekDown" scoped="" ref="0x7f07824072a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f0782407620"/>
        <function-ref name="runTask" scoped="" ref="0x7f07824077b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Glcd" ref="0x7f0782452ce0" loc="29:RadioScannerP.nc">
      <component-ref qname="RadioScannerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Glcd" scoped="" ref="0x7f0782452ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Glcd"/>
      </instance>
      <interface-functions>
        <function-ref name="fill" scoped="" ref="0x7f0782462d20"/>
        <function-ref name="drawRect" scoped="" ref="0x7f0782462230"/>
        <function-ref name="drawLine" scoped="" ref="0x7f07824623c0"/>
        <function-ref name="setPixel" scoped="" ref="0x7f0782462550"/>
        <function-ref name="invertPixel" scoped="" ref="0x7f07824626e0"/>
        <function-ref name="clearPixel" scoped="" ref="0x7f0782462870"/>
        <function-ref name="drawEllipse" scoped="" ref="0x7f0782462a00"/>
        <function-ref name="drawTextPgm" scoped="" ref="0x7f07824620a0"/>
        <function-ref name="drawText" scoped="" ref="0x7f0782462b90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="readyScreen" ref="0x7f07823d7e60" loc="320:RadioScannerP.nc">
      <component-ref qname="RadioScannerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="readyScreen" scoped="" ref="0x7f07823d7e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f07823d6210"/>
        <function-ref name="runTask" scoped="" ref="0x7f07823d63a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f0782336b70" loc="17:Database/DatabaseC.nc">
      <component-ref qname="DatabaseC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f0782336b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f0782335020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Database" ref="0x7f07823352d0" loc="18:Database/DatabaseC.nc">
      <component-ref qname="DatabaseC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Database" scoped="" ref="0x7f07823352d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Database"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannelList" scoped="" ref="0x7f0782335650"/>
        <function-ref name="receivedChannelEntry" scoped="" ref="0x7f07823357e0"/>
        <function-ref name="saveChannel" scoped="" ref="0x7f0782335970"/>
        <function-ref name="savedChannel" scoped="" ref="0x7f0782335b00"/>
        <function-ref name="getChannel" scoped="" ref="0x7f0782335c90"/>
        <function-ref name="purgeChannelList" scoped="" ref="0x7f0782335e20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="fetchList" ref="0x7f07822fcbc0" loc="79:Database/DatabaseP.nc">
      <component-ref qname="DatabaseP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="fetchList" scoped="" ref="0x7f07822fcbc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f07822fb020"/>
        <function-ref name="runTask" scoped="" ref="0x7f07822fb1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IpControl" ref="0x7f078230cbb0" loc="32:Database/DatabaseP.nc">
      <component-ref qname="DatabaseP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IpControl" scoped="" ref="0x7f078230cbb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="IpControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setGateway" scoped="" ref="0x7f0782312020"/>
        <function-ref name="getGateway" scoped="" ref="0x7f07823121b0"/>
        <function-ref name="setNetmask" scoped="" ref="0x7f0782312340"/>
        <function-ref name="getIp" scoped="" ref="0x7f07823124d0"/>
        <function-ref name="getNetmask" scoped="" ref="0x7f0782312660"/>
        <function-ref name="setIp" scoped="" ref="0x7f07823127f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendTask" ref="0x7f07822ffe00" loc="77:Database/DatabaseP.nc">
      <component-ref qname="DatabaseP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="sendTask" scoped="" ref="0x7f07822ffe00"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f07822fd1c0"/>
        <function-ref name="runTask" scoped="" ref="0x7f07822fd350"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f078231d0c0" loc="25:Database/DatabaseP.nc">
      <component-ref qname="DatabaseP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f078231d0c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f078231d440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Database" ref="0x7f078231d6f0" loc="26:Database/DatabaseP.nc">
      <component-ref qname="DatabaseP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Database" scoped="" ref="0x7f078231d6f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Database"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannelList" scoped="" ref="0x7f078231da70"/>
        <function-ref name="receivedChannelEntry" scoped="" ref="0x7f078231dc00"/>
        <function-ref name="saveChannel" scoped="" ref="0x7f078231dd90"/>
        <function-ref name="savedChannel" scoped="" ref="0x7f078231c020"/>
        <function-ref name="getChannel" scoped="" ref="0x7f078231c1b0"/>
        <function-ref name="purgeChannelList" scoped="" ref="0x7f078231c340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UdpSend" ref="0x7f0782313a10" loc="30:Database/DatabaseP.nc">
      <component-ref qname="DatabaseP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UdpSend" scoped="" ref="0x7f0782313a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="UdpSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f0782313d90"/>
        <function-ref name="sendDone" scoped="" ref="0x7f078231b020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Control" ref="0x7f0782310020" loc="33:Database/DatabaseP.nc">
      <component-ref qname="DatabaseP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Control" scoped="" ref="0x7f0782310020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f07823103a0"/>
        <function-ref name="stopDone" scoped="" ref="0x7f0782310530"/>
        <function-ref name="start" scoped="" ref="0x7f07823106c0"/>
        <function-ref name="stop" scoped="" ref="0x7f0782310850"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UdpReceive" ref="0x7f0782311c30" loc="31:Database/DatabaseP.nc">
      <component-ref qname="DatabaseP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UdpReceive" scoped="" ref="0x7f0782311c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="UdpReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="received" scoped="" ref="0x7f078231a020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Glcd" ref="0x7f0782310ad0" loc="35:Database/DatabaseP.nc">
      <component-ref qname="DatabaseP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Glcd" scoped="" ref="0x7f0782310ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Glcd"/>
      </instance>
      <interface-functions>
        <function-ref name="fill" scoped="" ref="0x7f078230ab10"/>
        <function-ref name="drawRect" scoped="" ref="0x7f078230a020"/>
        <function-ref name="drawLine" scoped="" ref="0x7f078230a1b0"/>
        <function-ref name="setPixel" scoped="" ref="0x7f078230a340"/>
        <function-ref name="invertPixel" scoped="" ref="0x7f078230a4d0"/>
        <function-ref name="clearPixel" scoped="" ref="0x7f078230a660"/>
        <function-ref name="drawEllipse" scoped="" ref="0x7f078230a7f0"/>
        <function-ref name="drawTextPgm" scoped="" ref="0x7f0782310e50"/>
        <function-ref name="drawText" scoped="" ref="0x7f078230a980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="recvTask" ref="0x7f07822fdce0" loc="78:Database/DatabaseP.nc">
      <component-ref qname="DatabaseP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="recvTask" scoped="" ref="0x7f07822fdce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f07822fc0a0"/>
        <function-ref name="runTask" scoped="" ref="0x7f07822fc230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketSender" ref="0x7f0782257ba0" loc="11:../tinyos_ws18/tos/lib_ecs/ip/IpTransceiverC.nc">
      <component-ref qname="IpTransceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketSender" scoped="" ref="0x7f0782257ba0"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x7f078263a3a0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x7f078263a3a0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="PacketSender"/>
        <arguments>
          <type-tag size="I:7" alignment="I:1"><struct-ref ref="0x7f078232b7c0"/>
            <typename><typedef-ref name="ip_queue_item_t" ref="0x7f078232bd40"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f078225a7b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f078225acc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IpControl" ref="0x7f0782255390" loc="13:../tinyos_ws18/tos/lib_ecs/ip/IpTransceiverC.nc">
      <component-ref qname="IpTransceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IpControl" scoped="" ref="0x7f0782255390"/></type-interface>
      <instance>
        <interfacedef-ref qname="IpControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setGateway" scoped="" ref="0x7f0782255710"/>
        <function-ref name="getGateway" scoped="" ref="0x7f07822558a0"/>
        <function-ref name="setNetmask" scoped="" ref="0x7f0782255a30"/>
        <function-ref name="getIp" scoped="" ref="0x7f0782255bc0"/>
        <function-ref name="getNetmask" scoped="" ref="0x7f0782255d50"/>
        <function-ref name="setIp" scoped="" ref="0x7f0782254020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IpPacket" ref="0x7f0782252020" loc="14:../tinyos_ws18/tos/lib_ecs/ip/IpTransceiverC.nc">
      <component-ref qname="IpTransceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IpPacket" scoped="" ref="0x7f0782252020"/></type-interface>
      <instance>
        <interfacedef-ref qname="IpPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="getPacket" scoped="" ref="0x7f07822523a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IpReceive" ref="0x7f0782253cc0" loc="12:../tinyos_ws18/tos/lib_ecs/ip/IpTransceiverC.nc">
      <component-ref qname="IpTransceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IpReceive" scoped="" ref="0x7f0782253cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="IpReceive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="received" scoped="" ref="0x7f07822550a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketSender" ref="0x7f078224a740" loc="12:../tinyos_ws18/tos/lib_ecs/ip/IpTransceiverP.nc">
      <component-ref qname="IpTransceiverP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketSender" scoped="" ref="0x7f078224a740"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketSender"/>
        <arguments>
          <type-tag size="I:7" alignment="I:1"><struct-ref ref="0x7f078232b7c0"/>
            <typename><typedef-ref name="ip_queue_item_t" ref="0x7f078232bd40"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f0782248390"/>
        <function-ref name="sendDone" scoped="" ref="0x7f07822488a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LlcReceive" ref="0x7f078223f2f0" loc="16:../tinyos_ws18/tos/lib_ecs/ip/IpTransceiverP.nc">
      <component-ref qname="IpTransceiverP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LlcReceive" scoped="" ref="0x7f078223f2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LlcReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="received" scoped="" ref="0x7f078223f670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IpControl" ref="0x7f0782247990" loc="14:../tinyos_ws18/tos/lib_ecs/ip/IpTransceiverP.nc">
      <component-ref qname="IpTransceiverP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IpControl" scoped="" ref="0x7f0782247990"/></type-interface>
      <instance>
        <interfacedef-ref qname="IpControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setGateway" scoped="" ref="0x7f0782247d10"/>
        <function-ref name="getGateway" scoped="" ref="0x7f0782246020"/>
        <function-ref name="setNetmask" scoped="" ref="0x7f07822461b0"/>
        <function-ref name="getIp" scoped="" ref="0x7f0782246340"/>
        <function-ref name="getNetmask" scoped="" ref="0x7f07822464d0"/>
        <function-ref name="setIp" scoped="" ref="0x7f0782246660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LlcSend" ref="0x7f0782241860" loc="15:../tinyos_ws18/tos/lib_ecs/ip/IpTransceiverP.nc">
      <component-ref qname="IpTransceiverP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LlcSend" scoped="" ref="0x7f0782241860"/></type-interface>
      <instance>
        <interfacedef-ref qname="LlcSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f0782241be0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f0782241d70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Arp" ref="0x7f0782237c60" loc="17:../tinyos_ws18/tos/lib_ecs/ip/IpTransceiverP.nc">
      <component-ref qname="IpTransceiverP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Arp" scoped="" ref="0x7f0782237c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Arp"/>
      </instance>
      <interface-functions>
        <function-ref name="resolve" scoped="" ref="0x7f0782244020"/>
        <function-ref name="resolved" scoped="" ref="0x7f07822441b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f0782244470" loc="18:../tinyos_ws18/tos/lib_ecs/ip/IpTransceiverP.nc">
      <component-ref qname="IpTransceiverP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f0782244470"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f07822447f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IpPacket" ref="0x7f0782244ae0" loc="19:../tinyos_ws18/tos/lib_ecs/ip/IpTransceiverP.nc">
      <component-ref qname="IpTransceiverP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IpPacket" scoped="" ref="0x7f0782244ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="IpPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="getPacket" scoped="" ref="0x7f0782244e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IpReceive" ref="0x7f0782247320" loc="13:../tinyos_ws18/tos/lib_ecs/ip/IpTransceiverP.nc">
      <component-ref qname="IpTransceiverP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IpReceive" scoped="" ref="0x7f0782247320"/></type-interface>
      <instance>
        <interfacedef-ref qname="IpReceive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="received" scoped="" ref="0x7f07822476a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LlcReceive" ref="0x7f0782182120" loc="12:../tinyos_ws18/tos/lib_ecs/llc/LlcC.nc">
      <component-ref qname="IpTransceiverC.LlcC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LlcReceive" scoped="" ref="0x7f0782182120"/></type-interface>
      <instance>
        <interfacedef-ref qname="LlcReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="received" scoped="" ref="0x7f07821824a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LlcSend" ref="0x7f07821fc930" loc="11:../tinyos_ws18/tos/lib_ecs/llc/LlcC.nc">
      <component-ref qname="IpTransceiverC.LlcC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LlcSend" scoped="" ref="0x7f07821fc930"/></type-interface>
      <instance>
        <interfacedef-ref qname="LlcSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f07821fccb0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f07821fce40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketSender" ref="0x7f07821fac80" loc="11:../tinyos_ws18/tos/lib_ecs/llc/LlcTransceiverC.nc">
      <component-ref qname="LlcTransceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketSender" scoped="" ref="0x7f07821fac80"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x7f078263a3a0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x7f078263a3a0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="PacketSender"/>
        <arguments>
          <type-tag size="I:12" alignment="I:1"><struct-ref ref="0x7f078224bb60"/>
            <typename><typedef-ref name="mac_queue_item_t" ref="0x7f078224a180"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f07821f78a0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f07821f7db0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LlcReceive" ref="0x7f07821f6890" loc="12:../tinyos_ws18/tos/lib_ecs/llc/LlcTransceiverC.nc">
      <component-ref qname="LlcTransceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LlcReceive" scoped="" ref="0x7f07821f6890"/></type-interface>
      <instance>
        <interfacedef-ref qname="LlcReceive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
          <typename><typedef-ref name="uint16_t" ref="0x7f0782f56610"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="received" scoped="" ref="0x7f07821f6c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MacControl" ref="0x7f07821ed550" loc="14:../tinyos_ws18/tos/lib_ecs/llc/LlcTransceiverC.nc">
      <component-ref qname="LlcTransceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MacControl" scoped="" ref="0x7f07821ed550"/></type-interface>
      <instance>
        <interfacedef-ref qname="MacControl"/>
      </instance>
      <interface-functions>
        <function-ref name="getMac" scoped="" ref="0x7f07821ed8d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Mac" ref="0x7f07821f0ca0" loc="13:../tinyos_ws18/tos/lib_ecs/llc/LlcTransceiverC.nc">
      <component-ref qname="LlcTransceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Mac" scoped="" ref="0x7f07821f0ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Mac"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f07821f30a0"/>
        <function-ref name="received" scoped="" ref="0x7f07821f3230"/>
        <function-ref name="sendDone" scoped="" ref="0x7f07821f33c0"/>
        <function-ref name="getMac" scoped="" ref="0x7f07821f3550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketSender" ref="0x7f07821ef6c0" loc="11:../tinyos_ws18/tos/lib_ecs/llc/LlcTransceiverP.nc">
      <component-ref qname="LlcTransceiverP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketSender" scoped="" ref="0x7f07821ef6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketSender"/>
        <arguments>
          <type-tag size="I:12" alignment="I:1"><struct-ref ref="0x7f078224bb60"/>
            <typename><typedef-ref name="mac_queue_item_t" ref="0x7f078224a180"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f07821eb390"/>
        <function-ref name="sendDone" scoped="" ref="0x7f07821eb8a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LlcReceive" ref="0x7f07821ea360" loc="12:../tinyos_ws18/tos/lib_ecs/llc/LlcTransceiverP.nc">
      <component-ref qname="LlcTransceiverP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LlcReceive" scoped="" ref="0x7f07821ea360"/></type-interface>
      <instance>
        <interfacedef-ref qname="LlcReceive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
          <typename><typedef-ref name="uint16_t" ref="0x7f0782f56610"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="received" scoped="" ref="0x7f07821ea6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MacControl" ref="0x7f07821e9640" loc="14:../tinyos_ws18/tos/lib_ecs/llc/LlcTransceiverP.nc">
      <component-ref qname="LlcTransceiverP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MacControl" scoped="" ref="0x7f07821e9640"/></type-interface>
      <instance>
        <interfacedef-ref qname="MacControl"/>
      </instance>
      <interface-functions>
        <function-ref name="getMac" scoped="" ref="0x7f07821e99c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Mac" ref="0x7f07821ea990" loc="13:../tinyos_ws18/tos/lib_ecs/llc/LlcTransceiverP.nc">
      <component-ref qname="LlcTransceiverP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Mac" scoped="" ref="0x7f07821ea990"/></type-interface>
      <instance>
        <interfacedef-ref qname="Mac"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f07821ead10"/>
        <function-ref name="received" scoped="" ref="0x7f07821e9020"/>
        <function-ref name="sendDone" scoped="" ref="0x7f07821e91b0"/>
        <function-ref name="getMac" scoped="" ref="0x7f07821e9340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LlcSend" ref="0x7f07811a71b0" loc="11:../tinyos_ws18/tos/lib_ecs/llc/LlcP.nc">
      <component-ref qname="IpTransceiverC.LlcC.LlcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LlcSend" scoped="" ref="0x7f07811a71b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LlcSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f07811a7530"/>
        <function-ref name="sendDone" scoped="" ref="0x7f07811a76c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LlcQueue" ref="0x7f07811a7950" loc="12:../tinyos_ws18/tos/lib_ecs/llc/LlcP.nc">
      <component-ref qname="IpTransceiverC.LlcC.LlcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LlcQueue" scoped="" ref="0x7f07811a7950"/></type-interface>
      <instance>
        <interfacedef-ref qname="LlcQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f07811a7cd0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f07811a7e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LlcQueue" ref="0x7f07821c8410" loc="11:../tinyos_ws18/tos/lib_ecs/llc/LlcQueueC.nc">
      <component-ref qname="LlcQueueC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LlcQueue" scoped="" ref="0x7f07821c8410"/></type-interface>
      <instance>
        <interfacedef-ref qname="LlcQueue"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f07821c8790"/>
        <function-ref name="sendDone" scoped="" ref="0x7f07821c8920"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketSender" ref="0x7f0782196020" loc="10:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueueC.nc">
      <component-ref qname="LlcQueueC.PacketQueueC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketSender" scoped="" ref="0x7f0782196020"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x7f078263a3a0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x7f078263a3a0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="PacketSender"/>
        <arguments>
          <type-tag size="I:12" alignment="I:1"><struct-ref ref="0x7f078224bb60"/>
            <typename><typedef-ref name="mac_queue_item_t" ref="0x7f078224a180"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f0782196c10"/>
        <function-ref name="sendDone" scoped="" ref="0x7f0782194170"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketQueue" ref="0x7f07821c5060" loc="9:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueueC.nc">
      <component-ref qname="LlcQueueC.PacketQueueC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketQueue" scoped="" ref="0x7f07821c5060"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketQueue"/>
        <arguments>
          <type-tag size="I:12" alignment="I:1"><struct-ref ref="0x7f078224bb60"/>
            <typename><typedef-ref name="mac_queue_item_t" ref="0x7f078224a180"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f07821971b0"/>
        <function-ref name="getBuffer" scoped="" ref="0x7f07821c5c50"/>
        <function-ref name="sendDone" scoped="" ref="0x7f0782197680"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketSender" ref="0x7f078119b020" loc="13:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueueP.nc">
      <component-ref qname="LlcQueueC.PacketQueueC.PacketQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketSender" scoped="" ref="0x7f078119b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketSender"/>
        <arguments>
          <type-tag size="I:12" alignment="I:1"><struct-ref ref="0x7f078224bb60"/>
            <typename><typedef-ref name="mac_queue_item_t" ref="0x7f078224a180"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f078119bc10"/>
        <function-ref name="sendDone" scoped="" ref="0x7f0781199170"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketQueue" ref="0x7f078119d240" loc="12:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueueP.nc">
      <component-ref qname="LlcQueueC.PacketQueueC.PacketQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketQueue" scoped="" ref="0x7f078119d240"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketQueue"/>
        <arguments>
          <type-tag size="I:12" alignment="I:1"><struct-ref ref="0x7f078224bb60"/>
            <typename><typedef-ref name="mac_queue_item_t" ref="0x7f078224a180"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f078119c380"/>
        <function-ref name="getBuffer" scoped="" ref="0x7f078119de30"/>
        <function-ref name="sendDone" scoped="" ref="0x7f078119c850"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendNext" ref="0x7f0781199630" loc="26:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueueP.nc">
      <component-ref qname="LlcQueueC.PacketQueueC.PacketQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="sendNext" scoped="" ref="0x7f0781199630"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f07811999b0"/>
        <function-ref name="runTask" scoped="" ref="0x7f0781199b40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketQueue" ref="0x7f07821904f0" loc="13:../tinyos_ws18/tos/lib_ecs/llc/LlcQueueP.nc">
      <component-ref qname="LlcQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketQueue" scoped="" ref="0x7f07821904f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketQueue"/>
        <arguments>
          <type-tag size="I:12" alignment="I:1"><struct-ref ref="0x7f078224bb60"/>
            <typename><typedef-ref name="mac_queue_item_t" ref="0x7f078224a180"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f078218f620"/>
        <function-ref name="getBuffer" scoped="" ref="0x7f078218f110"/>
        <function-ref name="sendDone" scoped="" ref="0x7f078218faf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LlcQueue" ref="0x7f0782193a00" loc="12:../tinyos_ws18/tos/lib_ecs/llc/LlcQueueP.nc">
      <component-ref qname="LlcQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LlcQueue" scoped="" ref="0x7f0782193a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="LlcQueue"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f0782193d80"/>
        <function-ref name="sendDone" scoped="" ref="0x7f0782190020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IpControl" ref="0x7f0782181bf0" loc="10:../tinyos_ws18/tos/lib_ecs/arp/ArpC.nc">
      <component-ref qname="ArpC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IpControl" scoped="" ref="0x7f0782181bf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="IpControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setGateway" scoped="" ref="0x7f078217e020"/>
        <function-ref name="getGateway" scoped="" ref="0x7f078217e1b0"/>
        <function-ref name="setNetmask" scoped="" ref="0x7f078217e340"/>
        <function-ref name="getIp" scoped="" ref="0x7f078217e4d0"/>
        <function-ref name="getNetmask" scoped="" ref="0x7f078217e660"/>
        <function-ref name="setIp" scoped="" ref="0x7f078217e7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Arp" ref="0x7f07821813f0" loc="9:../tinyos_ws18/tos/lib_ecs/arp/ArpC.nc">
      <component-ref qname="ArpC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Arp" scoped="" ref="0x7f07821813f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Arp"/>
      </instance>
      <interface-functions>
        <function-ref name="resolve" scoped="" ref="0x7f0782181770"/>
        <function-ref name="resolved" scoped="" ref="0x7f0782181900"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketSender" ref="0x7f078217dc90" loc="13:../tinyos_ws18/tos/lib_ecs/arp/ArpP.nc">
      <component-ref qname="ArpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketSender" scoped="" ref="0x7f078217dc90"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketSender"/>
        <arguments>
          <type-tag size="I:28" alignment="I:1"><struct-ref ref="0x7f078223a080"/>
            <typename><typedef-ref name="arp_packet_t" ref="0x7f078223a970"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f078217a8a0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f078217adb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timeout" ref="0x7f07821762f0" loc="15:../tinyos_ws18/tos/lib_ecs/arp/ArpP.nc">
      <component-ref qname="ArpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timeout" scoped="" ref="0x7f07821762f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f07825841a0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f0782584510"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f0782172870"/>
        <function-ref name="fired" scoped="" ref="0x7f0782175e40"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f0782173c00"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f0782173780"/>
        <function-ref name="getdt" scoped="" ref="0x7f07821711e0"/>
        <function-ref name="gett0" scoped="" ref="0x7f0782172cf0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f0782173300"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f0782175020"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f0782172260"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f07821754f0"/>
        <function-ref name="stop" scoped="" ref="0x7f07821759c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ClearCacheTimeout" ref="0x7f07821718a0" loc="16:../tinyos_ws18/tos/lib_ecs/arp/ArpP.nc">
      <component-ref qname="ArpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ClearCacheTimeout" scoped="" ref="0x7f07821718a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f07825841a0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f0782584510"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f078216dcf0"/>
        <function-ref name="fired" scoped="" ref="0x7f078216f310"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f078216d0d0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f078216fc10"/>
        <function-ref name="getdt" scoped="" ref="0x7f078216c660"/>
        <function-ref name="gett0" scoped="" ref="0x7f078216c1e0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f078216f790"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f07821704c0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f078216d6e0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f0782170990"/>
        <function-ref name="stop" scoped="" ref="0x7f0782170e60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LlcReceive" ref="0x7f078216b320" loc="18:../tinyos_ws18/tos/lib_ecs/arp/ArpP.nc">
      <component-ref qname="ArpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LlcReceive" scoped="" ref="0x7f078216b320"/></type-interface>
      <instance>
        <interfacedef-ref qname="LlcReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="received" scoped="" ref="0x7f078216b6a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketQueue" ref="0x7f07821784a0" loc="14:../tinyos_ws18/tos/lib_ecs/arp/ArpP.nc">
      <component-ref qname="ArpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketQueue" scoped="" ref="0x7f07821784a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketQueue"/>
        <arguments>
          <type-tag size="I:28" alignment="I:1"><struct-ref ref="0x7f078223a080"/>
            <typename><typedef-ref name="arp_packet_t" ref="0x7f078223a970"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f07821775e0"/>
        <function-ref name="getBuffer" scoped="" ref="0x7f07821770d0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f0782177ab0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Arp" ref="0x7f078217d2d0" loc="12:../tinyos_ws18/tos/lib_ecs/arp/ArpP.nc">
      <component-ref qname="ArpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Arp" scoped="" ref="0x7f078217d2d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Arp"/>
      </instance>
      <interface-functions>
        <function-ref name="resolve" scoped="" ref="0x7f078217d650"/>
        <function-ref name="resolved" scoped="" ref="0x7f078217d7e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LlcSend" ref="0x7f078216cae0" loc="17:../tinyos_ws18/tos/lib_ecs/arp/ArpP.nc">
      <component-ref qname="ArpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LlcSend" scoped="" ref="0x7f078216cae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LlcSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f078216ce60"/>
        <function-ref name="sendDone" scoped="" ref="0x7f078216b020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IpControl" ref="0x7f078216b990" loc="19:../tinyos_ws18/tos/lib_ecs/arp/ArpP.nc">
      <component-ref qname="ArpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IpControl" scoped="" ref="0x7f078216b990"/></type-interface>
      <instance>
        <interfacedef-ref qname="IpControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setGateway" scoped="" ref="0x7f078216bd10"/>
        <function-ref name="getGateway" scoped="" ref="0x7f078216a020"/>
        <function-ref name="setNetmask" scoped="" ref="0x7f078216a1b0"/>
        <function-ref name="getIp" scoped="" ref="0x7f078216a340"/>
        <function-ref name="getNetmask" scoped="" ref="0x7f078216a4d0"/>
        <function-ref name="setIp" scoped="" ref="0x7f078216a660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MacControl" ref="0x7f078216a960" loc="20:../tinyos_ws18/tos/lib_ecs/arp/ArpP.nc">
      <component-ref qname="ArpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MacControl" scoped="" ref="0x7f078216a960"/></type-interface>
      <instance>
        <interfacedef-ref qname="MacControl"/>
      </instance>
      <interface-functions>
        <function-ref name="getMac" scoped="" ref="0x7f078216ace0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f0782169020" loc="21:../tinyos_ws18/tos/lib_ecs/arp/ArpP.nc">
      <component-ref qname="ArpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f0782169020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f07821693a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f0781f74140" loc="45:../tinyos_ws18/tos/system/TimerMilliC.nc">
      <component-ref qname="ArpC.TimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f0781f74140"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f07825841a0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f0782584510"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f0781f71630"/>
        <function-ref name="fired" scoped="" ref="0x7f0781f73b70"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f0781f72920"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f0781f724a0"/>
        <function-ref name="getdt" scoped="" ref="0x7f0781f6f020"/>
        <function-ref name="gett0" scoped="" ref="0x7f0781f71ab0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f0781f72020"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f0781f74d30"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f0781f71020"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f0781f73220"/>
        <function-ref name="stop" scoped="" ref="0x7f0781f736f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x7f078212aaa0" loc="49:../tinyos_ws18/tos/system/TimerMilliP.nc">
      <component-ref qname="TimerMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerMilli" scoped="" ref="0x7f078212aaa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f07825841a0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f0782584510"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f0782126020"/>
        <function-ref name="fired" scoped="" ref="0x7f0782128510"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f0782127300"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f0782128e10"/>
        <function-ref name="getdt" scoped="" ref="0x7f0782126920"/>
        <function-ref name="gett0" scoped="" ref="0x7f07821264a0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f0782128990"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f07821296b0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f0782127910"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f0782129b80"/>
        <function-ref name="stop" scoped="" ref="0x7f0782128090"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x7f07821215a0" loc="46:../tinyos_ws18/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerMilli" scoped="" ref="0x7f07821215a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f07825841a0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f0782584510"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f078211da80"/>
        <function-ref name="fired" scoped="" ref="0x7f078211e090"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f078211ee10"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f078211e990"/>
        <function-ref name="getdt" scoped="" ref="0x7f078211c4a0"/>
        <function-ref name="gett0" scoped="" ref="0x7f078211c020"/>
        <function-ref name="isRunning" scoped="" ref="0x7f078211e510"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f0782120200"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f078211d470"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f07821206d0"/>
        <function-ref name="stop" scoped="" ref="0x7f0782120ba0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7f078211a020" loc="47:../tinyos_ws18/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x7f078211a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f07825841a0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f0782584510"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f078211ac50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f07821247a0" loc="45:../tinyos_ws18/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f07821247a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f0782124b20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CounterMilli32" ref="0x7f0782104b40" loc="29:../tinyos_ws18/tos/platforms/bigAVR6_1280/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterMilli32" scoped="" ref="0x7f0782104b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f07825841a0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f0782584510"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f0782f55170"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f0782108970"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f0782103340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f0782108e30"/>
        <function-ref name="overflow" scoped="" ref="0x7f0782103800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f07821177a0" loc="27:../tinyos_ws18/tos/platforms/bigAVR6_1280/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f07821177a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f0782117b20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AlarmMilli32" ref="0x7f0782113440" loc="28:../tinyos_ws18/tos/platforms/bigAVR6_1280/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AlarmMilli32" scoped="" ref="0x7f0782113440"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f07825841a0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f0782584510"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f0782f55170"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f078210bdb0"/>
        <function-ref name="fired" scoped="" ref="0x7f078210cda0"/>
        <function-ref name="startAt" scoped="" ref="0x7f078210b760"/>
        <function-ref name="isRunning" scoped="" ref="0x7f078210b2a0"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f078210a2a0"/>
        <function-ref name="start" scoped="" ref="0x7f078210c3d0"/>
        <function-ref name="stop" scoped="" ref="0x7f078210c8e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f07820134b0" loc="35:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm1280AlarmSyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x7f07820134b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f07825841a0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f0782584510"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f0782f55170"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f0782010db0"/>
        <function-ref name="fired" scoped="" ref="0x7f0782012da0"/>
        <function-ref name="startAt" scoped="" ref="0x7f0782010760"/>
        <function-ref name="isRunning" scoped="" ref="0x7f07820102a0"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f078200f2a0"/>
        <function-ref name="start" scoped="" ref="0x7f07820123d0"/>
        <function-ref name="stop" scoped="" ref="0x7f07820128e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f0782014ba0" loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm1280AlarmSyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f0782014ba0"/></type-interface>
      <attribute-value>
        <attribute-ref name="atleastonce" ref="0x7f078263a020"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atleastonce" ref="0x7f078263a020"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f0782013020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f078200f8d0" loc="36:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm1280AlarmSyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7f078200f8d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f07825841a0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f0782584510"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f0782f55170"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f078200e780"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f078200d150"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f078200ec40"/>
        <function-ref name="overflow" scoped="" ref="0x7f078200d610"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerCtrl" ref="0x7f078116e7d0" loc="41:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm1280AlarmSyncC.Atm1280AlarmSyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x7f078116e7d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0x7f078116eb50"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x7f078116ece0"/>
        <function-ref name="getControlA" scoped="" ref="0x7f078116ee70"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x7f078116d030"/>
        <function-ref name="setControlB" scoped="" ref="0x7f078116d1c0"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x7f078116d350"/>
        <function-ref name="getControlB" scoped="" ref="0x7f078116d4e0"/>
        <function-ref name="setControlA" scoped="" ref="0x7f078116d670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f078117ae80" loc="36:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm1280AlarmSyncC.Atm1280AlarmSyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x7f078117ae80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f07825841a0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f0782584510"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f0782f55170"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f07811776e0"/>
        <function-ref name="fired" scoped="" ref="0x7f07811786b0"/>
        <function-ref name="startAt" scoped="" ref="0x7f0781177090"/>
        <function-ref name="isRunning" scoped="" ref="0x7f0781178b70"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f0781177ba0"/>
        <function-ref name="start" scoped="" ref="0x7f0781179cb0"/>
        <function-ref name="stop" scoped="" ref="0x7f07811781f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f078117a670" loc="35:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm1280AlarmSyncC.Atm1280AlarmSyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f078117a670"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f078117a9f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f0781176260" loc="37:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm1280AlarmSyncC.Atm1280AlarmSyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7f0781176260"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f07825841a0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f0782584510"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f0782f55170"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f0781174090"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f0781174a10"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f0781174550"/>
        <function-ref name="overflow" scoped="" ref="0x7f0781173020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerSync" ref="0x7f0781169dd0" loc="43:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm1280AlarmSyncC.Atm1280AlarmSyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerSync" scoped="" ref="0x7f0781169dd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm1280TimerSync"/>
      </instance>
      <interface-functions>
        <function-ref name="setTimer2Synchronous" scoped="" ref="0x7f0781168180"/>
        <function-ref name="compareBBusy" scoped="" ref="0x7f0781168310"/>
        <function-ref name="controlBBusy" scoped="" ref="0x7f07811684a0"/>
        <function-ref name="controlABusy" scoped="" ref="0x7f0781168630"/>
        <function-ref name="countBusy" scoped="" ref="0x7f07811687c0"/>
        <function-ref name="compareABusy" scoped="" ref="0x7f0781168950"/>
        <function-ref name="getAssr" scoped="" ref="0x7f0781168ae0"/>
        <function-ref name="setAssr" scoped="" ref="0x7f0781168c70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Compare" ref="0x7f078116da20" loc="42:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm1280AlarmSyncC.Atm1280AlarmSyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x7f078116da20"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7f07811694e0"/>
        <function-ref name="fired" scoped="" ref="0x7f078116b0d0"/>
        <function-ref name="get" scoped="" ref="0x7f078116c6b0"/>
        <function-ref name="reset" scoped="" ref="0x7f078116b590"/>
        <function-ref name="isOn" scoped="" ref="0x7f07811699a0"/>
        <function-ref name="set" scoped="" ref="0x7f078116cb70"/>
        <function-ref name="start" scoped="" ref="0x7f078116ba50"/>
        <function-ref name="stop" scoped="" ref="0x7f0781169020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f07811735d0" loc="40:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm1280AlarmSyncC.Atm1280AlarmSyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f07811735d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7f078116f9a0"/>
        <function-ref name="test" scoped="" ref="0x7f078116f020"/>
        <function-ref name="get" scoped="" ref="0x7f0781172240"/>
        <function-ref name="setScale" scoped="" ref="0x7f078116fe60"/>
        <function-ref name="getScale" scoped="" ref="0x7f078116e3a0"/>
        <function-ref name="reset" scoped="" ref="0x7f0781171110"/>
        <function-ref name="overflow" scoped="" ref="0x7f0781172c10"/>
        <function-ref name="isOn" scoped="" ref="0x7f078116f4e0"/>
        <function-ref name="set" scoped="" ref="0x7f0781172700"/>
        <function-ref name="start" scoped="" ref="0x7f07811715d0"/>
        <function-ref name="stop" scoped="" ref="0x7f0781171a90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x7f0782085570" loc="55:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280Timer2SyncC.nc">
      <component-ref qname="HplAtm1280Timer2SyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x7f0782085570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0x7f07820858f0"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x7f0782085a80"/>
        <function-ref name="getControlA" scoped="" ref="0x7f0782085c10"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x7f0782085da0"/>
        <function-ref name="setControlB" scoped="" ref="0x7f0782084020"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x7f07820841b0"/>
        <function-ref name="getControlB" scoped="" ref="0x7f0782084340"/>
        <function-ref name="setControlA" scoped="" ref="0x7f07820844d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerSync" ref="0x7f0782080d60" loc="57:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280Timer2SyncC.nc">
      <component-ref qname="HplAtm1280Timer2SyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerSync" scoped="" ref="0x7f0782080d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm1280TimerSync"/>
      </instance>
      <interface-functions>
        <function-ref name="setTimer2Synchronous" scoped="" ref="0x7f078207f180"/>
        <function-ref name="compareBBusy" scoped="" ref="0x7f078207f310"/>
        <function-ref name="controlBBusy" scoped="" ref="0x7f078207f4a0"/>
        <function-ref name="controlABusy" scoped="" ref="0x7f078207f630"/>
        <function-ref name="countBusy" scoped="" ref="0x7f078207f7c0"/>
        <function-ref name="compareABusy" scoped="" ref="0x7f078207f950"/>
        <function-ref name="getAssr" scoped="" ref="0x7f078207fae0"/>
        <function-ref name="setAssr" scoped="" ref="0x7f078207fc70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f07820849d0" loc="56:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280Timer2SyncC.nc">
      <component-ref qname="HplAtm1280Timer2SyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x7f07820849d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7f0782080350"/>
        <function-ref name="fired" scoped="" ref="0x7f0782082020"/>
        <function-ref name="get" scoped="" ref="0x7f0782083630"/>
        <function-ref name="reset" scoped="" ref="0x7f07820824e0"/>
        <function-ref name="isOn" scoped="" ref="0x7f0782080810"/>
        <function-ref name="set" scoped="" ref="0x7f0782083af0"/>
        <function-ref name="start" scoped="" ref="0x7f07820829a0"/>
        <function-ref name="stop" scoped="" ref="0x7f0782082e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f078208a190" loc="54:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280Timer2SyncC.nc">
      <component-ref qname="HplAtm1280Timer2SyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f078208a190"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7f07820864e0"/>
        <function-ref name="test" scoped="" ref="0x7f0782088b30"/>
        <function-ref name="get" scoped="" ref="0x7f078208adc0"/>
        <function-ref name="setScale" scoped="" ref="0x7f07820869a0"/>
        <function-ref name="getScale" scoped="" ref="0x7f0782085020"/>
        <function-ref name="reset" scoped="" ref="0x7f0782089cb0"/>
        <function-ref name="overflow" scoped="" ref="0x7f07820897f0"/>
        <function-ref name="isOn" scoped="" ref="0x7f0782086020"/>
        <function-ref name="set" scoped="" ref="0x7f07820892e0"/>
        <function-ref name="start" scoped="" ref="0x7f07820881b0"/>
        <function-ref name="stop" scoped="" ref="0x7f0782088670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x7f07820767b0" loc="87:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280Timer2SyncP.nc">
      <component-ref qname="HplAtm1280Timer2SyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x7f07820767b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0x7f0782076b30"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x7f0782076cc0"/>
        <function-ref name="getControlA" scoped="" ref="0x7f0782076e50"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x7f0782075020"/>
        <function-ref name="setControlB" scoped="" ref="0x7f07820751b0"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x7f0782075340"/>
        <function-ref name="getControlB" scoped="" ref="0x7f07820754d0"/>
        <function-ref name="setControlA" scoped="" ref="0x7f0782075660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerOverride" ref="0x7f0782070020" loc="89:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280Timer2SyncP.nc">
      <component-ref qname="HplAtm1280Timer2SyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x7f0782070020"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x7f07820703a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerSync" ref="0x7f0782070750" loc="90:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280Timer2SyncP.nc">
      <component-ref qname="HplAtm1280Timer2SyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerSync" scoped="" ref="0x7f0782070750"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm1280TimerSync"/>
      </instance>
      <interface-functions>
        <function-ref name="setTimer2Synchronous" scoped="" ref="0x7f0782070ad0"/>
        <function-ref name="compareBBusy" scoped="" ref="0x7f0782070c60"/>
        <function-ref name="controlBBusy" scoped="" ref="0x7f0782070df0"/>
        <function-ref name="controlABusy" scoped="" ref="0x7f078206f020"/>
        <function-ref name="countBusy" scoped="" ref="0x7f078206f1b0"/>
        <function-ref name="compareABusy" scoped="" ref="0x7f078206f340"/>
        <function-ref name="getAssr" scoped="" ref="0x7f078206f4d0"/>
        <function-ref name="setAssr" scoped="" ref="0x7f078206f660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f0782075b60" loc="88:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280Timer2SyncP.nc">
      <component-ref qname="HplAtm1280Timer2SyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x7f0782075b60"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7f0782071550"/>
        <function-ref name="fired" scoped="" ref="0x7f07820721f0"/>
        <function-ref name="get" scoped="" ref="0x7f07820747d0"/>
        <function-ref name="reset" scoped="" ref="0x7f07820726b0"/>
        <function-ref name="isOn" scoped="" ref="0x7f0782071a10"/>
        <function-ref name="set" scoped="" ref="0x7f0782074c90"/>
        <function-ref name="start" scoped="" ref="0x7f0782072b70"/>
        <function-ref name="stop" scoped="" ref="0x7f0782071090"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f078207b270" loc="86:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280Timer2SyncP.nc">
      <component-ref qname="HplAtm1280Timer2SyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f078207b270"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7f0782077810"/>
        <function-ref name="test" scoped="" ref="0x7f0782078e60"/>
        <function-ref name="get" scoped="" ref="0x7f078207a020"/>
        <function-ref name="setScale" scoped="" ref="0x7f0782077cd0"/>
        <function-ref name="getScale" scoped="" ref="0x7f0782076260"/>
        <function-ref name="reset" scoped="" ref="0x7f0782078020"/>
        <function-ref name="overflow" scoped="" ref="0x7f078207a9f0"/>
        <function-ref name="isOn" scoped="" ref="0x7f0782077350"/>
        <function-ref name="set" scoped="" ref="0x7f078207a4e0"/>
        <function-ref name="start" scoped="" ref="0x7f07820784e0"/>
        <function-ref name="stop" scoped="" ref="0x7f07820789a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="fired" ref="0x7f0781fda020" loc="74:../tinyos_ws18/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="fired" scoped="" ref="0x7f0781fda020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f0781fda3a0"/>
        <function-ref name="runTask" scoped="" ref="0x7f0781fda530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x7f0781fdfcd0" loc="49:../tinyos_ws18/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x7f0781fdfcd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f07825841a0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f0782584510"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f0782f55170"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f0781fdb670"/>
        <function-ref name="fired" scoped="" ref="0x7f0781fdc550"/>
        <function-ref name="startAt" scoped="" ref="0x7f0781fdb020"/>
        <function-ref name="isRunning" scoped="" ref="0x7f0781fdca10"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f0781fdbb30"/>
        <function-ref name="start" scoped="" ref="0x7f0781fdeb60"/>
        <function-ref name="stop" scoped="" ref="0x7f0781fdc090"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f0781fe4830" loc="48:../tinyos_ws18/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f0781fe4830"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f07825841a0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f0782584510"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f0781fe0cf0"/>
        <function-ref name="fired" scoped="" ref="0x7f0781fe1300"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f0781fe00d0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f0781fe1c00"/>
        <function-ref name="getdt" scoped="" ref="0x7f0781fdf660"/>
        <function-ref name="gett0" scoped="" ref="0x7f0781fdf1e0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f0781fe1780"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f0781fe3480"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f0781fe06e0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f0781fe3950"/>
        <function-ref name="stop" scoped="" ref="0x7f0781fe3e20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="updateFromTimer" ref="0x7f0781f8aa00" loc="71:../tinyos_ws18/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="updateFromTimer" scoped="" ref="0x7f0781f8aa00"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f0781f8ad80"/>
        <function-ref name="runTask" scoped="" ref="0x7f0781f89020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerFrom" ref="0x7f0781f8f640" loc="49:../tinyos_ws18/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerFrom" scoped="" ref="0x7f0781f8f640"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f07825841a0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f0782584510"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f0781f8bc40"/>
        <function-ref name="fired" scoped="" ref="0x7f0781f8c1e0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f0781f8b020"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f0781f8cae0"/>
        <function-ref name="getdt" scoped="" ref="0x7f0781f8a590"/>
        <function-ref name="gett0" scoped="" ref="0x7f0781f8a110"/>
        <function-ref name="isRunning" scoped="" ref="0x7f0781f8c660"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f0781f8e390"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f0781f8b630"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f0781f8e860"/>
        <function-ref name="stop" scoped="" ref="0x7f0781f8ed30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f0781f95150" loc="48:../tinyos_ws18/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f0781f95150"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f07825841a0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f0782584510"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f0781f90700"/>
        <function-ref name="fired" scoped="" ref="0x7f0781f94c30"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f0781f92a50"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f0781f925b0"/>
        <function-ref name="getdt" scoped="" ref="0x7f0781f8f090"/>
        <function-ref name="gett0" scoped="" ref="0x7f0781f90ba0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f0781f92110"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f0781f95d60"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f0781f900d0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f0781f942a0"/>
        <function-ref name="stop" scoped="" ref="0x7f0781f94790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7f0781f86790" loc="48:../tinyos_ws18/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x7f0781f86790"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f07825841a0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f0782584510"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f0781f853f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7f0781f85a60" loc="49:../tinyos_ws18/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7f0781f85a60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f07825841a0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f0782584510"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f0782f55170"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f0781f7b890"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f0781f7a260"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f0781f7bd50"/>
        <function-ref name="overflow" scoped="" ref="0x7f0781f7a720"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f0781f6eb00" loc="45:../tinyos_ws18/tos/system/TimerMilliC.nc">
      <component-ref qname="ArpC.ClearCacheTimeoutC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f0781f6eb00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f07825841a0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f0782584510"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f0781f69110"/>
        <function-ref name="fired" scoped="" ref="0x7f0781f6c5b0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f0781f6b4a0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f0781f6b020"/>
        <function-ref name="getdt" scoped="" ref="0x7f0781f69a10"/>
        <function-ref name="gett0" scoped="" ref="0x7f0781f69590"/>
        <function-ref name="isRunning" scoped="" ref="0x7f0781f6ca30"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f0781f6d750"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f0781f6bab0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f0781f6dc20"/>
        <function-ref name="stop" scoped="" ref="0x7f0781f6c130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LlcReceive" ref="0x7f0781f66020" loc="12:../tinyos_ws18/tos/lib_ecs/llc/LlcC.nc">
      <component-ref qname="ArpC.LlcC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LlcReceive" scoped="" ref="0x7f0781f66020"/></type-interface>
      <instance>
        <interfacedef-ref qname="LlcReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="received" scoped="" ref="0x7f0781f663a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LlcSend" ref="0x7f0781f67700" loc="11:../tinyos_ws18/tos/lib_ecs/llc/LlcC.nc">
      <component-ref qname="ArpC.LlcC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LlcSend" scoped="" ref="0x7f0781f67700"/></type-interface>
      <instance>
        <interfacedef-ref qname="LlcSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f0781f67a80"/>
        <function-ref name="sendDone" scoped="" ref="0x7f0781f67c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LlcSend" ref="0x7f078110f380" loc="11:../tinyos_ws18/tos/lib_ecs/llc/LlcP.nc">
      <component-ref qname="ArpC.LlcC.LlcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LlcSend" scoped="" ref="0x7f078110f380"/></type-interface>
      <instance>
        <interfacedef-ref qname="LlcSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f078110f700"/>
        <function-ref name="sendDone" scoped="" ref="0x7f078110f890"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LlcQueue" ref="0x7f078110fb20" loc="12:../tinyos_ws18/tos/lib_ecs/llc/LlcP.nc">
      <component-ref qname="ArpC.LlcC.LlcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LlcQueue" scoped="" ref="0x7f078110fb20"/></type-interface>
      <instance>
        <interfacedef-ref qname="LlcQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f078110d020"/>
        <function-ref name="sendDone" scoped="" ref="0x7f078110d1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketSender" ref="0x7f0781f61360" loc="10:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueueC.nc">
      <component-ref qname="ArpC.PacketQueueC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketSender" scoped="" ref="0x7f0781f61360"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x7f078263a3a0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x7f078263a3a0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="PacketSender"/>
        <arguments>
          <type-tag size="I:28" alignment="I:1"><struct-ref ref="0x7f078223a080"/>
            <typename><typedef-ref name="arp_packet_t" ref="0x7f078223a970"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f0781f60020"/>
        <function-ref name="sendDone" scoped="" ref="0x7f0781f60530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketQueue" ref="0x7f0781f644a0" loc="9:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueueC.nc">
      <component-ref qname="ArpC.PacketQueueC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketQueue" scoped="" ref="0x7f0781f644a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketQueue"/>
        <arguments>
          <type-tag size="I:28" alignment="I:1"><struct-ref ref="0x7f078223a080"/>
            <typename><typedef-ref name="arp_packet_t" ref="0x7f078223a970"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f0781f635e0"/>
        <function-ref name="getBuffer" scoped="" ref="0x7f0781f630d0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f0781f63ab0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketSender" ref="0x7f0781105dd0" loc="13:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueueP.nc">
      <component-ref qname="ArpC.PacketQueueC.PacketQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketSender" scoped="" ref="0x7f0781105dd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketSender"/>
        <arguments>
          <type-tag size="I:28" alignment="I:1"><struct-ref ref="0x7f078223a080"/>
            <typename><typedef-ref name="arp_packet_t" ref="0x7f078223a970"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f0781103a80"/>
        <function-ref name="sendDone" scoped="" ref="0x7f0781102020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketQueue" ref="0x7f07811060b0" loc="12:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueueP.nc">
      <component-ref qname="ArpC.PacketQueueC.PacketQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketQueue" scoped="" ref="0x7f07811060b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketQueue"/>
        <arguments>
          <type-tag size="I:28" alignment="I:1"><struct-ref ref="0x7f078223a080"/>
            <typename><typedef-ref name="arp_packet_t" ref="0x7f078223a970"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f0781105220"/>
        <function-ref name="getBuffer" scoped="" ref="0x7f0781106ca0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f07811056f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendNext" ref="0x7f07811024e0" loc="26:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueueP.nc">
      <component-ref qname="ArpC.PacketQueueC.PacketQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="sendNext" scoped="" ref="0x7f07811024e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f0781102860"/>
        <function-ref name="runTask" scoped="" ref="0x7f07811029f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IcmpReceive" ref="0x7f0781f54d90" loc="12:../tinyos_ws18/tos/lib_ecs/icmp/IcmpC.nc">
      <component-ref qname="PingC.IcmpC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IcmpReceive" scoped="" ref="0x7f0781f54d90"/></type-interface>
      <instance>
        <interfacedef-ref qname="IcmpReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="received" scoped="" ref="0x7f0781eca180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IcmpSend" ref="0x7f0781f545f0" loc="11:../tinyos_ws18/tos/lib_ecs/icmp/IcmpC.nc">
      <component-ref qname="PingC.IcmpC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IcmpSend" scoped="" ref="0x7f0781f545f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="IcmpSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f0781f54970"/>
        <function-ref name="sendDone" scoped="" ref="0x7f0781f54b00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketSender" ref="0x7f0781f4e9e0" loc="11:../tinyos_ws18/tos/lib_ecs/icmp/IcmpTransceiverC.nc">
      <component-ref qname="IcmpTransceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketSender" scoped="" ref="0x7f0781f4e9e0"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x7f078263a3a0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x7f078263a3a0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="PacketSender"/>
        <arguments>
          <type-tag size="I:10" alignment="I:1"><struct-ref ref="0x7f0781f51b40"/>
            <typename><typedef-ref name="icmp_queue_item_t" ref="0x7f0781f50230"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f0781f45670"/>
        <function-ref name="sendDone" scoped="" ref="0x7f0781f45b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IcmpReceive" ref="0x7f0781f44610" loc="12:../tinyos_ws18/tos/lib_ecs/icmp/IcmpTransceiverC.nc">
      <component-ref qname="IcmpTransceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IcmpReceive" scoped="" ref="0x7f0781f44610"/></type-interface>
      <instance>
        <interfacedef-ref qname="IcmpReceive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="received" scoped="" ref="0x7f0781f44990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IpSend" ref="0x7f0781f41430" loc="11:../tinyos_ws18/tos/lib_ecs/ip/IpC.nc">
      <component-ref qname="IcmpTransceiverC.IpC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IpSend" scoped="" ref="0x7f0781f41430"/></type-interface>
      <instance>
        <interfacedef-ref qname="IpSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f0781f417b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f0781f41940"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IpReceive" ref="0x7f0781f41bd0" loc="12:../tinyos_ws18/tos/lib_ecs/ip/IpC.nc">
      <component-ref qname="IcmpTransceiverC.IpC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IpReceive" scoped="" ref="0x7f0781f41bd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="IpReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="received" scoped="" ref="0x7f0781f13020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IpSend" ref="0x7f07810ea3f0" loc="11:../tinyos_ws18/tos/lib_ecs/ip/IpP.nc">
      <component-ref qname="IcmpTransceiverC.IpC.IpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IpSend" scoped="" ref="0x7f07810ea3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="IpSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f07810ea770"/>
        <function-ref name="sendDone" scoped="" ref="0x7f07810ea900"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IpQueue" ref="0x7f07810eab90" loc="12:../tinyos_ws18/tos/lib_ecs/ip/IpP.nc">
      <component-ref qname="IcmpTransceiverC.IpC.IpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IpQueue" scoped="" ref="0x7f07810eab90"/></type-interface>
      <instance>
        <interfacedef-ref qname="IpQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f07810e9020"/>
        <function-ref name="sendDone" scoped="" ref="0x7f07810e91b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IpQueue" ref="0x7f0781f30d60" loc="11:../tinyos_ws18/tos/lib_ecs/ip/IpQueueC.nc">
      <component-ref qname="IpQueueC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IpQueue" scoped="" ref="0x7f0781f30d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="IpQueue"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f0781f2d180"/>
        <function-ref name="sendDone" scoped="" ref="0x7f0781f2d310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketSender" ref="0x7f0781f28020" loc="10:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueueC.nc">
      <component-ref qname="IpQueueC.PacketQueueC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketSender" scoped="" ref="0x7f0781f28020"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x7f078263a3a0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x7f078263a3a0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="PacketSender"/>
        <arguments>
          <type-tag size="I:7" alignment="I:1"><struct-ref ref="0x7f078232b7c0"/>
            <typename><typedef-ref name="ip_queue_item_t" ref="0x7f078232bd40"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f0781f28c10"/>
        <function-ref name="sendDone" scoped="" ref="0x7f0781f26170"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketQueue" ref="0x7f0781f2a060" loc="9:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueueC.nc">
      <component-ref qname="IpQueueC.PacketQueueC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketQueue" scoped="" ref="0x7f0781f2a060"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketQueue"/>
        <arguments>
          <type-tag size="I:7" alignment="I:1"><struct-ref ref="0x7f078232b7c0"/>
            <typename><typedef-ref name="ip_queue_item_t" ref="0x7f078232bd40"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f0781f291b0"/>
        <function-ref name="getBuffer" scoped="" ref="0x7f0781f2ac50"/>
        <function-ref name="sendDone" scoped="" ref="0x7f0781f29680"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketSender" ref="0x7f07810df770" loc="13:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueueP.nc">
      <component-ref qname="IpQueueC.PacketQueueC.PacketQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketSender" scoped="" ref="0x7f07810df770"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketSender"/>
        <arguments>
          <type-tag size="I:7" alignment="I:1"><struct-ref ref="0x7f078232b7c0"/>
            <typename><typedef-ref name="ip_queue_item_t" ref="0x7f078232bd40"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f07810dd390"/>
        <function-ref name="sendDone" scoped="" ref="0x7f07810dd8a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketQueue" ref="0x7f07810e1a00" loc="12:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueueP.nc">
      <component-ref qname="IpQueueC.PacketQueueC.PacketQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketQueue" scoped="" ref="0x7f07810e1a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketQueue"/>
        <arguments>
          <type-tag size="I:7" alignment="I:1"><struct-ref ref="0x7f078232b7c0"/>
            <typename><typedef-ref name="ip_queue_item_t" ref="0x7f078232bd40"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f07810e0b80"/>
        <function-ref name="getBuffer" scoped="" ref="0x7f07810e0670"/>
        <function-ref name="sendDone" scoped="" ref="0x7f07810df090"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendNext" ref="0x7f07810ddd60" loc="26:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueueP.nc">
      <component-ref qname="IpQueueC.PacketQueueC.PacketQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="sendNext" scoped="" ref="0x7f07810ddd60"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f07810dc180"/>
        <function-ref name="runTask" scoped="" ref="0x7f07810dc310"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IpQueue" ref="0x7f0781f259f0" loc="12:../tinyos_ws18/tos/lib_ecs/ip/IpQueueP.nc">
      <component-ref qname="IpQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IpQueue" scoped="" ref="0x7f0781f259f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="IpQueue"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f0781f25d70"/>
        <function-ref name="sendDone" scoped="" ref="0x7f0781f21020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketQueue" ref="0x7f0781f214e0" loc="13:../tinyos_ws18/tos/lib_ecs/ip/IpQueueP.nc">
      <component-ref qname="IpQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketQueue" scoped="" ref="0x7f0781f214e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketQueue"/>
        <arguments>
          <type-tag size="I:7" alignment="I:1"><struct-ref ref="0x7f078232b7c0"/>
            <typename><typedef-ref name="ip_queue_item_t" ref="0x7f078232bd40"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f0781f20620"/>
        <function-ref name="getBuffer" scoped="" ref="0x7f0781f20110"/>
        <function-ref name="sendDone" scoped="" ref="0x7f0781f20af0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketSender" ref="0x7f0781f10290" loc="11:../tinyos_ws18/tos/lib_ecs/icmp/IcmpTransceiverP.nc">
      <component-ref qname="IcmpTransceiverP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketSender" scoped="" ref="0x7f0781f10290"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketSender"/>
        <arguments>
          <type-tag size="I:10" alignment="I:1"><struct-ref ref="0x7f0781f51b40"/>
            <typename><typedef-ref name="icmp_queue_item_t" ref="0x7f0781f50230"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f0781f10e80"/>
        <function-ref name="sendDone" scoped="" ref="0x7f0781f0f3b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IpSend" ref="0x7f0781f0d490" loc="13:../tinyos_ws18/tos/lib_ecs/icmp/IcmpTransceiverP.nc">
      <component-ref qname="IcmpTransceiverP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IpSend" scoped="" ref="0x7f0781f0d490"/></type-interface>
      <instance>
        <interfacedef-ref qname="IpSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f0781f0d810"/>
        <function-ref name="sendDone" scoped="" ref="0x7f0781f0d9a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IcmpReceive" ref="0x7f0781f0fdf0" loc="12:../tinyos_ws18/tos/lib_ecs/icmp/IcmpTransceiverP.nc">
      <component-ref qname="IcmpTransceiverP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IcmpReceive" scoped="" ref="0x7f0781f0fdf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="IcmpReceive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="received" scoped="" ref="0x7f0781f0d1c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IpReceive" ref="0x7f0781f0dc90" loc="14:../tinyos_ws18/tos/lib_ecs/icmp/IcmpTransceiverP.nc">
      <component-ref qname="IcmpTransceiverP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IpReceive" scoped="" ref="0x7f0781f0dc90"/></type-interface>
      <instance>
        <interfacedef-ref qname="IpReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="received" scoped="" ref="0x7f0781f0c0a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IcmpQueue" ref="0x7f07810f0dd0" loc="12:../tinyos_ws18/tos/lib_ecs/icmp/IcmpP.nc">
      <component-ref qname="PingC.IcmpC.IcmpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IcmpQueue" scoped="" ref="0x7f07810f0dd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="IcmpQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f07810ef180"/>
        <function-ref name="sendDone" scoped="" ref="0x7f07810ef310"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IcmpSend" ref="0x7f07810f0630" loc="11:../tinyos_ws18/tos/lib_ecs/icmp/IcmpP.nc">
      <component-ref qname="PingC.IcmpC.IcmpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IcmpSend" scoped="" ref="0x7f07810f0630"/></type-interface>
      <instance>
        <interfacedef-ref qname="IcmpSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f07810f09b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f07810f0b40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IcmpQueue" ref="0x7f0781ee4410" loc="11:../tinyos_ws18/tos/lib_ecs/icmp/IcmpQueueC.nc">
      <component-ref qname="IcmpQueueC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IcmpQueue" scoped="" ref="0x7f0781ee4410"/></type-interface>
      <instance>
        <interfacedef-ref qname="IcmpQueue"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f0781ee4790"/>
        <function-ref name="sendDone" scoped="" ref="0x7f0781ee4920"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketSender" ref="0x7f0781edf9d0" loc="10:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueueC.nc">
      <component-ref qname="IcmpQueueC.PacketQueueC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketSender" scoped="" ref="0x7f0781edf9d0"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x7f078263a3a0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x7f078263a3a0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="PacketSender"/>
        <arguments>
          <type-tag size="I:10" alignment="I:1"><struct-ref ref="0x7f0781f51b40"/>
            <typename><typedef-ref name="icmp_queue_item_t" ref="0x7f0781f50230"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f0781ede5f0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f0781edeb00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketQueue" ref="0x7f0781ee2ae0" loc="9:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueueC.nc">
      <component-ref qname="IcmpQueueC.PacketQueueC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketQueue" scoped="" ref="0x7f0781ee2ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketQueue"/>
        <arguments>
          <type-tag size="I:10" alignment="I:1"><struct-ref ref="0x7f0781f51b40"/>
            <typename><typedef-ref name="icmp_queue_item_t" ref="0x7f0781f50230"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f0781ee1c60"/>
        <function-ref name="getBuffer" scoped="" ref="0x7f0781ee1750"/>
        <function-ref name="sendDone" scoped="" ref="0x7f0781edf170"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketSender" ref="0x7f07810c3bd0" loc="13:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueueP.nc">
      <component-ref qname="IcmpQueueC.PacketQueueC.PacketQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketSender" scoped="" ref="0x7f07810c3bd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketSender"/>
        <arguments>
          <type-tag size="I:10" alignment="I:1"><struct-ref ref="0x7f0781f51b40"/>
            <typename><typedef-ref name="icmp_queue_item_t" ref="0x7f0781f50230"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f07810c2860"/>
        <function-ref name="sendDone" scoped="" ref="0x7f07810c2d70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketQueue" ref="0x7f07810c6e30" loc="12:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueueP.nc">
      <component-ref qname="IcmpQueueC.PacketQueueC.PacketQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketQueue" scoped="" ref="0x7f07810c6e30"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketQueue"/>
        <arguments>
          <type-tag size="I:10" alignment="I:1"><struct-ref ref="0x7f0781f51b40"/>
            <typename><typedef-ref name="icmp_queue_item_t" ref="0x7f0781f50230"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f07810c3020"/>
        <function-ref name="getBuffer" scoped="" ref="0x7f07810c4a80"/>
        <function-ref name="sendDone" scoped="" ref="0x7f07810c34f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendNext" ref="0x7f07810c0290" loc="26:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueueP.nc">
      <component-ref qname="IcmpQueueC.PacketQueueC.PacketQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="sendNext" scoped="" ref="0x7f07810c0290"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f07810c0610"/>
        <function-ref name="runTask" scoped="" ref="0x7f07810c07a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IcmpQueue" ref="0x7f0781eda450" loc="12:../tinyos_ws18/tos/lib_ecs/icmp/IcmpQueueP.nc">
      <component-ref qname="IcmpQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IcmpQueue" scoped="" ref="0x7f0781eda450"/></type-interface>
      <instance>
        <interfacedef-ref qname="IcmpQueue"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f0781eda7d0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f0781eda960"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketQueue" ref="0x7f0781edae30" loc="13:../tinyos_ws18/tos/lib_ecs/icmp/IcmpQueueP.nc">
      <component-ref qname="IcmpQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketQueue" scoped="" ref="0x7f0781edae30"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketQueue"/>
        <arguments>
          <type-tag size="I:10" alignment="I:1"><struct-ref ref="0x7f0781f51b40"/>
            <typename><typedef-ref name="icmp_queue_item_t" ref="0x7f0781f50230"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f0781ed7020"/>
        <function-ref name="getBuffer" scoped="" ref="0x7f0781ed8a80"/>
        <function-ref name="sendDone" scoped="" ref="0x7f0781ed74f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IcmpReceive" ref="0x7f0781ec7130" loc="9:PingP.nc">
      <component-ref qname="PingP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IcmpReceive" scoped="" ref="0x7f0781ec7130"/></type-interface>
      <instance>
        <interfacedef-ref qname="IcmpReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="received" scoped="" ref="0x7f0781ec74b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IcmpSend" ref="0x7f0781ec77a0" loc="10:PingP.nc">
      <component-ref qname="PingP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IcmpSend" scoped="" ref="0x7f0781ec77a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="IcmpSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f0781ec7b20"/>
        <function-ref name="sendDone" scoped="" ref="0x7f0781ec7cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Glcd" ref="0x7f0781ebe220" loc="9:../tinyos_ws18/tos/lib_ecs/glcd/GlcdC.nc">
      <component-ref qname="GlcdC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Glcd" scoped="" ref="0x7f0781ebe220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Glcd"/>
      </instance>
      <interface-functions>
        <function-ref name="fill" scoped="" ref="0x7f0781ebd340"/>
        <function-ref name="drawRect" scoped="" ref="0x7f0781ebe730"/>
        <function-ref name="drawLine" scoped="" ref="0x7f0781ebe8c0"/>
        <function-ref name="setPixel" scoped="" ref="0x7f0781ebea50"/>
        <function-ref name="invertPixel" scoped="" ref="0x7f0781ebebe0"/>
        <function-ref name="clearPixel" scoped="" ref="0x7f0781ebed70"/>
        <function-ref name="drawEllipse" scoped="" ref="0x7f0781ebd020"/>
        <function-ref name="drawTextPgm" scoped="" ref="0x7f0781ebe5a0"/>
        <function-ref name="drawText" scoped="" ref="0x7f0781ebd1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f0781e8b020" loc="44:../tinyos_ws18/tos/lib_ecs/glcd/GlcdP.nc">
      <component-ref qname="GlcdP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f0781e8b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f0781e8b3a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Hpl" ref="0x7f0781e84640" loc="45:../tinyos_ws18/tos/lib_ecs/glcd/GlcdP.nc">
      <component-ref qname="GlcdP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Hpl" scoped="" ref="0x7f0781e84640"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplKS0108"/>
      </instance>
      <interface-functions>
        <function-ref name="dataWrite" scoped="" ref="0x7f0781e849c0"/>
        <function-ref name="init" scoped="" ref="0x7f0781e84b50"/>
        <function-ref name="dataRead" scoped="" ref="0x7f0781e84ce0"/>
        <function-ref name="controlWrite" scoped="" ref="0x7f0781e84e70"/>
        <function-ref name="controlRead" scoped="" ref="0x7f0781e8a030"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Glcd" ref="0x7f0781e8dbf0" loc="43:../tinyos_ws18/tos/lib_ecs/glcd/GlcdP.nc">
      <component-ref qname="GlcdP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Glcd" scoped="" ref="0x7f0781e8dbf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Glcd"/>
      </instance>
      <interface-functions>
        <function-ref name="fill" scoped="" ref="0x7f0781e8cca0"/>
        <function-ref name="drawRect" scoped="" ref="0x7f0781e8c1b0"/>
        <function-ref name="drawLine" scoped="" ref="0x7f0781e8c340"/>
        <function-ref name="setPixel" scoped="" ref="0x7f0781e8c4d0"/>
        <function-ref name="invertPixel" scoped="" ref="0x7f0781e8c660"/>
        <function-ref name="clearPixel" scoped="" ref="0x7f0781e8c7f0"/>
        <function-ref name="drawEllipse" scoped="" ref="0x7f0781e8c980"/>
        <function-ref name="drawTextPgm" scoped="" ref="0x7f0781e8c020"/>
        <function-ref name="drawText" scoped="" ref="0x7f0781e8cb10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplKS0108" ref="0x7f0781ebc640" loc="9:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108C.nc">
      <component-ref qname="HplKS0108C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplKS0108" scoped="" ref="0x7f0781ebc640"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplKS0108"/>
      </instance>
      <interface-functions>
        <function-ref name="dataWrite" scoped="" ref="0x7f0781ebc9c0"/>
        <function-ref name="init" scoped="" ref="0x7f0781ebcb50"/>
        <function-ref name="dataRead" scoped="" ref="0x7f0781ebcce0"/>
        <function-ref name="controlWrite" scoped="" ref="0x7f0781ebce70"/>
        <function-ref name="controlRead" scoped="" ref="0x7f0781e15030"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="EN" ref="0x7f0781e07370" loc="29:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108P.nc">
      <component-ref qname="HplKS0108P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="EN" scoped="" ref="0x7f0781e07370"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0781e076f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f0781e07880"/>
        <function-ref name="toggle" scoped="" ref="0x7f0781e07a10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0781e07ba0"/>
        <function-ref name="get" scoped="" ref="0x7f0781e07d30"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0781e06020"/>
        <function-ref name="set" scoped="" ref="0x7f0781e061b0"/>
        <function-ref name="clr" scoped="" ref="0x7f0781e06340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BusyWait" ref="0x7f0781dfa910" loc="34:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108P.nc">
      <component-ref qname="HplKS0108P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BusyWait" scoped="" ref="0x7f0781dfa910"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f07825825c0"/>
            <typename><typedef-ref name="TMicro" ref="0x7f0782582930"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f0782f56610"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x7f0781dfd780"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CS_0" ref="0x7f0781e0b7b0" loc="25:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108P.nc">
      <component-ref qname="HplKS0108P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CS_0" scoped="" ref="0x7f0781e0b7b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0781e0bb30"/>
        <function-ref name="isInput" scoped="" ref="0x7f0781e0bcc0"/>
        <function-ref name="toggle" scoped="" ref="0x7f0781e0be50"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0781e11020"/>
        <function-ref name="get" scoped="" ref="0x7f0781e111b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0781e11340"/>
        <function-ref name="set" scoped="" ref="0x7f0781e114d0"/>
        <function-ref name="clr" scoped="" ref="0x7f0781e11660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RST" ref="0x7f0781e06690" loc="30:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108P.nc">
      <component-ref qname="HplKS0108P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RST" scoped="" ref="0x7f0781e06690"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0781e06a10"/>
        <function-ref name="isInput" scoped="" ref="0x7f0781e06ba0"/>
        <function-ref name="toggle" scoped="" ref="0x7f0781e06d30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0781e05020"/>
        <function-ref name="get" scoped="" ref="0x7f0781e051b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0781e05340"/>
        <function-ref name="set" scoped="" ref="0x7f0781e054d0"/>
        <function-ref name="clr" scoped="" ref="0x7f0781e05660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RS" ref="0x7f0781e10cd0" loc="27:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108P.nc">
      <component-ref qname="HplKS0108P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RS" scoped="" ref="0x7f0781e10cd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0781e090a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f0781e09230"/>
        <function-ref name="toggle" scoped="" ref="0x7f0781e093c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0781e09550"/>
        <function-ref name="get" scoped="" ref="0x7f0781e096e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0781e09870"/>
        <function-ref name="set" scoped="" ref="0x7f0781e09a00"/>
        <function-ref name="clr" scoped="" ref="0x7f0781e09b90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CS_1" ref="0x7f0781e119c0" loc="26:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108P.nc">
      <component-ref qname="HplKS0108P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CS_1" scoped="" ref="0x7f0781e119c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0781e11d40"/>
        <function-ref name="isInput" scoped="" ref="0x7f0781e10020"/>
        <function-ref name="toggle" scoped="" ref="0x7f0781e101b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0781e10340"/>
        <function-ref name="get" scoped="" ref="0x7f0781e104d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0781e10660"/>
        <function-ref name="set" scoped="" ref="0x7f0781e107f0"/>
        <function-ref name="clr" scoped="" ref="0x7f0781e10980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplKS0108" ref="0x7f0781e15be0" loc="23:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108P.nc">
      <component-ref qname="HplKS0108P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplKS0108" scoped="" ref="0x7f0781e15be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplKS0108"/>
      </instance>
      <interface-functions>
        <function-ref name="dataWrite" scoped="" ref="0x7f0781e12020"/>
        <function-ref name="init" scoped="" ref="0x7f0781e121b0"/>
        <function-ref name="dataRead" scoped="" ref="0x7f0781e12340"/>
        <function-ref name="controlWrite" scoped="" ref="0x7f0781e124d0"/>
        <function-ref name="controlRead" scoped="" ref="0x7f0781e12660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RW" ref="0x7f0781e08020" loc="28:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108P.nc">
      <component-ref qname="HplKS0108P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RW" scoped="" ref="0x7f0781e08020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0781e083a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f0781e08530"/>
        <function-ref name="toggle" scoped="" ref="0x7f0781e086c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0781e08850"/>
        <function-ref name="get" scoped="" ref="0x7f0781e089e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0781e08b70"/>
        <function-ref name="set" scoped="" ref="0x7f0781e08d00"/>
        <function-ref name="clr" scoped="" ref="0x7f0781e07020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Data" ref="0x7f0781e04060" loc="32:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108P.nc">
      <component-ref qname="HplKS0108P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Data" scoped="" ref="0x7f0781e04060"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIOPort"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0781e043e0"/>
        <function-ref name="clear" scoped="" ref="0x7f0781e04570"/>
        <function-ref name="toggle" scoped="" ref="0x7f0781e04700"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0781e04890"/>
        <function-ref name="read" scoped="" ref="0x7f0781e04a20"/>
        <function-ref name="write" scoped="" ref="0x7f0781e04bb0"/>
        <function-ref name="set" scoped="" ref="0x7f0781e04d40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG0" ref="0x7f0781d97020" loc="98:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG0" scoped="" ref="0x7f0781d97020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0781d977a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f0781d97930"/>
        <function-ref name="toggle" scoped="" ref="0x7f0781d97ac0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0781d97c50"/>
        <function-ref name="get" scoped="" ref="0x7f0781d97de0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0781d96020"/>
        <function-ref name="set" scoped="" ref="0x7f0781d961b0"/>
        <function-ref name="clr" scoped="" ref="0x7f0781d96340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD1" ref="0x7f0781db4800" loc="72:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD1" scoped="" ref="0x7f0781db4800"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0781db4b80"/>
        <function-ref name="isInput" scoped="" ref="0x7f0781db4d10"/>
        <function-ref name="toggle" scoped="" ref="0x7f0781db3020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0781db31b0"/>
        <function-ref name="get" scoped="" ref="0x7f0781db3340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0781db34d0"/>
        <function-ref name="set" scoped="" ref="0x7f0781db3660"/>
        <function-ref name="clr" scoped="" ref="0x7f0781db37f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE3" ref="0x7f0781da7670" loc="83:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE3" scoped="" ref="0x7f0781da7670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0781da79f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f0781da7b80"/>
        <function-ref name="toggle" scoped="" ref="0x7f0781da7d10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0781da6020"/>
        <function-ref name="get" scoped="" ref="0x7f0781da61b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0781da6340"/>
        <function-ref name="set" scoped="" ref="0x7f0781da64d0"/>
        <function-ref name="clr" scoped="" ref="0x7f0781da6660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF3" ref="0x7f0781d9d020" loc="92:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF3" scoped="" ref="0x7f0781d9d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0781d9d3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f0781d9d530"/>
        <function-ref name="toggle" scoped="" ref="0x7f0781d9d6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0781d9d850"/>
        <function-ref name="get" scoped="" ref="0x7f0781d9d9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0781d9db70"/>
        <function-ref name="set" scoped="" ref="0x7f0781d9dd00"/>
        <function-ref name="clr" scoped="" ref="0x7f0781d9c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG5" ref="0x7f0781d90350" loc="103:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG5" scoped="" ref="0x7f0781d90350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0781d906d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f0781d90860"/>
        <function-ref name="toggle" scoped="" ref="0x7f0781d909f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0781d90b80"/>
        <function-ref name="get" scoped="" ref="0x7f0781d90d10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0781d8f020"/>
        <function-ref name="set" scoped="" ref="0x7f0781d8f1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f0781d8f340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA6" ref="0x7f0781dcb990" loc="50:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA6" scoped="" ref="0x7f0781dcb990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0781dcbd10"/>
        <function-ref name="isInput" scoped="" ref="0x7f0781dca020"/>
        <function-ref name="toggle" scoped="" ref="0x7f0781dca1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0781dca340"/>
        <function-ref name="get" scoped="" ref="0x7f0781dca4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0781dca660"/>
        <function-ref name="set" scoped="" ref="0x7f0781dca7f0"/>
        <function-ref name="clr" scoped="" ref="0x7f0781dca980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF1" ref="0x7f0781da0990" loc="90:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF1" scoped="" ref="0x7f0781da0990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0781da0d10"/>
        <function-ref name="isInput" scoped="" ref="0x7f0781d9f020"/>
        <function-ref name="toggle" scoped="" ref="0x7f0781d9f1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0781d9f340"/>
        <function-ref name="get" scoped="" ref="0x7f0781d9f4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0781d9f660"/>
        <function-ref name="set" scoped="" ref="0x7f0781d9f7f0"/>
        <function-ref name="clr" scoped="" ref="0x7f0781d9f980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB0" ref="0x7f0781dc8020" loc="53:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB0" scoped="" ref="0x7f0781dc8020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0781dc83a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f0781dc8530"/>
        <function-ref name="toggle" scoped="" ref="0x7f0781dc86c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0781dc8850"/>
        <function-ref name="get" scoped="" ref="0x7f0781dc89e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0781dc8b70"/>
        <function-ref name="set" scoped="" ref="0x7f0781dc8d00"/>
        <function-ref name="clr" scoped="" ref="0x7f0781dc7020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC2" ref="0x7f0781dbc020" loc="64:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC2" scoped="" ref="0x7f0781dbc020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0781dbc3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f0781dbc530"/>
        <function-ref name="toggle" scoped="" ref="0x7f0781dbc6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0781dbc850"/>
        <function-ref name="get" scoped="" ref="0x7f0781dbc9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0781dbcb70"/>
        <function-ref name="set" scoped="" ref="0x7f0781dbcd00"/>
        <function-ref name="clr" scoped="" ref="0x7f0781dbb020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD4" ref="0x7f0781daf060" loc="75:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD4" scoped="" ref="0x7f0781daf060"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0781daf3e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f0781daf570"/>
        <function-ref name="toggle" scoped="" ref="0x7f0781daf700"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0781daf890"/>
        <function-ref name="get" scoped="" ref="0x7f0781dafa20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0781dafbb0"/>
        <function-ref name="set" scoped="" ref="0x7f0781dafd40"/>
        <function-ref name="clr" scoped="" ref="0x7f0781dae020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE6" ref="0x7f0781da3020" loc="86:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE6" scoped="" ref="0x7f0781da3020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0781da33a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f0781da3530"/>
        <function-ref name="toggle" scoped="" ref="0x7f0781da36c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0781da3850"/>
        <function-ref name="get" scoped="" ref="0x7f0781da39e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0781da3b70"/>
        <function-ref name="set" scoped="" ref="0x7f0781da3d00"/>
        <function-ref name="clr" scoped="" ref="0x7f0781da2020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA1" ref="0x7f0781dd2b20" loc="45:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA1" scoped="" ref="0x7f0781dd2b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0781dd1020"/>
        <function-ref name="isInput" scoped="" ref="0x7f0781dd11b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f0781dd1340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0781dd14d0"/>
        <function-ref name="get" scoped="" ref="0x7f0781dd1660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0781dd17f0"/>
        <function-ref name="set" scoped="" ref="0x7f0781dd1980"/>
        <function-ref name="clr" scoped="" ref="0x7f0781dd1b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB3" ref="0x7f0781dc5990" loc="56:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB3" scoped="" ref="0x7f0781dc5990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0781dc5d10"/>
        <function-ref name="isInput" scoped="" ref="0x7f0781dc4020"/>
        <function-ref name="toggle" scoped="" ref="0x7f0781dc41b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0781dc4340"/>
        <function-ref name="get" scoped="" ref="0x7f0781dc44d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0781dc4660"/>
        <function-ref name="set" scoped="" ref="0x7f0781dc47f0"/>
        <function-ref name="clr" scoped="" ref="0x7f0781dc4980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC5" ref="0x7f0781db9990" loc="67:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC5" scoped="" ref="0x7f0781db9990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0781db9d10"/>
        <function-ref name="isInput" scoped="" ref="0x7f0781db8020"/>
        <function-ref name="toggle" scoped="" ref="0x7f0781db81b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0781db8340"/>
        <function-ref name="get" scoped="" ref="0x7f0781db84d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0781db8660"/>
        <function-ref name="set" scoped="" ref="0x7f0781db87f0"/>
        <function-ref name="clr" scoped="" ref="0x7f0781db8980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD7" ref="0x7f0781dac990" loc="78:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD7" scoped="" ref="0x7f0781dac990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0781dacd10"/>
        <function-ref name="isInput" scoped="" ref="0x7f0781dab020"/>
        <function-ref name="toggle" scoped="" ref="0x7f0781dab1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0781dab340"/>
        <function-ref name="get" scoped="" ref="0x7f0781dab4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0781dab660"/>
        <function-ref name="set" scoped="" ref="0x7f0781dab7f0"/>
        <function-ref name="clr" scoped="" ref="0x7f0781dab980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF6" ref="0x7f0781d9a990" loc="95:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF6" scoped="" ref="0x7f0781d9a990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0781d9ad10"/>
        <function-ref name="isInput" scoped="" ref="0x7f0781d99020"/>
        <function-ref name="toggle" scoped="" ref="0x7f0781d991b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0781d99340"/>
        <function-ref name="get" scoped="" ref="0x7f0781d994d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0781d99660"/>
        <function-ref name="set" scoped="" ref="0x7f0781d997f0"/>
        <function-ref name="clr" scoped="" ref="0x7f0781d99980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG3" ref="0x7f0781d93cb0" loc="101:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG3" scoped="" ref="0x7f0781d93cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0781d920a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f0781d92230"/>
        <function-ref name="toggle" scoped="" ref="0x7f0781d923c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0781d92550"/>
        <function-ref name="get" scoped="" ref="0x7f0781d926e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0781d92870"/>
        <function-ref name="set" scoped="" ref="0x7f0781d92a00"/>
        <function-ref name="clr" scoped="" ref="0x7f0781d92b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE1" ref="0x7f0781da9020" loc="81:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE1" scoped="" ref="0x7f0781da9020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0781da93a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f0781da9530"/>
        <function-ref name="toggle" scoped="" ref="0x7f0781da96c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0781da9850"/>
        <function-ref name="get" scoped="" ref="0x7f0781da99e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0781da9b70"/>
        <function-ref name="set" scoped="" ref="0x7f0781da9d00"/>
        <function-ref name="clr" scoped="" ref="0x7f0781da8020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA4" ref="0x7f0781dce350" loc="48:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA4" scoped="" ref="0x7f0781dce350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0781dce6d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f0781dce860"/>
        <function-ref name="toggle" scoped="" ref="0x7f0781dce9f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0781dceb80"/>
        <function-ref name="get" scoped="" ref="0x7f0781dced10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0781dcc020"/>
        <function-ref name="set" scoped="" ref="0x7f0781dcc1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f0781dcc340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB6" ref="0x7f0781dc1350" loc="59:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB6" scoped="" ref="0x7f0781dc1350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0781dc16d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f0781dc1860"/>
        <function-ref name="toggle" scoped="" ref="0x7f0781dc19f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0781dc1b80"/>
        <function-ref name="get" scoped="" ref="0x7f0781dc1d10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0781dc0020"/>
        <function-ref name="set" scoped="" ref="0x7f0781dc01b0"/>
        <function-ref name="clr" scoped="" ref="0x7f0781dc0340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG1" ref="0x7f0781d96670" loc="99:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG1" scoped="" ref="0x7f0781d96670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0781d969f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f0781d96b80"/>
        <function-ref name="toggle" scoped="" ref="0x7f0781d96d10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0781d95020"/>
        <function-ref name="get" scoped="" ref="0x7f0781d951b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0781d95340"/>
        <function-ref name="set" scoped="" ref="0x7f0781d954d0"/>
        <function-ref name="clr" scoped="" ref="0x7f0781d95660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC0" ref="0x7f0781dbf990" loc="62:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC0" scoped="" ref="0x7f0781dbf990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0781dbfd10"/>
        <function-ref name="isInput" scoped="" ref="0x7f0781dbe020"/>
        <function-ref name="toggle" scoped="" ref="0x7f0781dbe1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0781dbe340"/>
        <function-ref name="get" scoped="" ref="0x7f0781dbe4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0781dbe660"/>
        <function-ref name="set" scoped="" ref="0x7f0781dbe7f0"/>
        <function-ref name="clr" scoped="" ref="0x7f0781dbe980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD2" ref="0x7f0781db3b20" loc="73:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD2" scoped="" ref="0x7f0781db3b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0781db2020"/>
        <function-ref name="isInput" scoped="" ref="0x7f0781db21b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f0781db2340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0781db24d0"/>
        <function-ref name="get" scoped="" ref="0x7f0781db2660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0781db27f0"/>
        <function-ref name="set" scoped="" ref="0x7f0781db2980"/>
        <function-ref name="clr" scoped="" ref="0x7f0781db2b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE4" ref="0x7f0781da6990" loc="84:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE4" scoped="" ref="0x7f0781da6990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0781da6d10"/>
        <function-ref name="isInput" scoped="" ref="0x7f0781da5020"/>
        <function-ref name="toggle" scoped="" ref="0x7f0781da51b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0781da5340"/>
        <function-ref name="get" scoped="" ref="0x7f0781da54d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0781da5660"/>
        <function-ref name="set" scoped="" ref="0x7f0781da57f0"/>
        <function-ref name="clr" scoped="" ref="0x7f0781da5980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF4" ref="0x7f0781d9c350" loc="93:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF4" scoped="" ref="0x7f0781d9c350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0781d9c6d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f0781d9c860"/>
        <function-ref name="toggle" scoped="" ref="0x7f0781d9c9f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0781d9cb80"/>
        <function-ref name="get" scoped="" ref="0x7f0781d9cd10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0781d9b020"/>
        <function-ref name="set" scoped="" ref="0x7f0781d9b1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f0781d9b340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA7" ref="0x7f0781dcacb0" loc="51:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA7" scoped="" ref="0x7f0781dcacb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0781dc90a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f0781dc9230"/>
        <function-ref name="toggle" scoped="" ref="0x7f0781dc93c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0781dc9550"/>
        <function-ref name="get" scoped="" ref="0x7f0781dc96e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0781dc9870"/>
        <function-ref name="set" scoped="" ref="0x7f0781dc9a00"/>
        <function-ref name="clr" scoped="" ref="0x7f0781dc9b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB1" ref="0x7f0781dc7350" loc="54:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB1" scoped="" ref="0x7f0781dc7350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0781dc76d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f0781dc7860"/>
        <function-ref name="toggle" scoped="" ref="0x7f0781dc79f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0781dc7b80"/>
        <function-ref name="get" scoped="" ref="0x7f0781dc7d10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0781dc6020"/>
        <function-ref name="set" scoped="" ref="0x7f0781dc61b0"/>
        <function-ref name="clr" scoped="" ref="0x7f0781dc6340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC3" ref="0x7f0781dbb350" loc="65:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC3" scoped="" ref="0x7f0781dbb350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0781dbb6d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f0781dbb860"/>
        <function-ref name="toggle" scoped="" ref="0x7f0781dbb9f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0781dbbb80"/>
        <function-ref name="get" scoped="" ref="0x7f0781dbbd10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0781dba020"/>
        <function-ref name="set" scoped="" ref="0x7f0781dba1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f0781dba340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD5" ref="0x7f0781dae350" loc="76:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD5" scoped="" ref="0x7f0781dae350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0781dae6d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f0781dae860"/>
        <function-ref name="toggle" scoped="" ref="0x7f0781dae9f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0781daeb80"/>
        <function-ref name="get" scoped="" ref="0x7f0781daed10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0781dad020"/>
        <function-ref name="set" scoped="" ref="0x7f0781dad1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f0781dad340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE7" ref="0x7f0781da2350" loc="87:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE7" scoped="" ref="0x7f0781da2350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0781da26d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f0781da2860"/>
        <function-ref name="toggle" scoped="" ref="0x7f0781da29f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0781da2b80"/>
        <function-ref name="get" scoped="" ref="0x7f0781da2d10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0781da1020"/>
        <function-ref name="set" scoped="" ref="0x7f0781da11b0"/>
        <function-ref name="clr" scoped="" ref="0x7f0781da1340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA2" ref="0x7f0781dd1e40" loc="46:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA2" scoped="" ref="0x7f0781dd1e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0781dd01e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f0781dd0370"/>
        <function-ref name="toggle" scoped="" ref="0x7f0781dd0500"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0781dd0690"/>
        <function-ref name="get" scoped="" ref="0x7f0781dd0820"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0781dd09b0"/>
        <function-ref name="set" scoped="" ref="0x7f0781dd0b40"/>
        <function-ref name="clr" scoped="" ref="0x7f0781dd0cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB4" ref="0x7f0781dc4cb0" loc="57:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB4" scoped="" ref="0x7f0781dc4cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0781dc3180"/>
        <function-ref name="isInput" scoped="" ref="0x7f0781dc3310"/>
        <function-ref name="toggle" scoped="" ref="0x7f0781dc34a0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0781dc3630"/>
        <function-ref name="get" scoped="" ref="0x7f0781dc37c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0781dc3950"/>
        <function-ref name="set" scoped="" ref="0x7f0781dc3ae0"/>
        <function-ref name="clr" scoped="" ref="0x7f0781dc3c70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC6" ref="0x7f0781db8cb0" loc="68:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC6" scoped="" ref="0x7f0781db8cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0781db70a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f0781db7230"/>
        <function-ref name="toggle" scoped="" ref="0x7f0781db73c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0781db7550"/>
        <function-ref name="get" scoped="" ref="0x7f0781db76e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0781db7870"/>
        <function-ref name="set" scoped="" ref="0x7f0781db7a00"/>
        <function-ref name="clr" scoped="" ref="0x7f0781db7b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF7" ref="0x7f0781d99cb0" loc="96:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF7" scoped="" ref="0x7f0781d99cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0781d980a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f0781d98230"/>
        <function-ref name="toggle" scoped="" ref="0x7f0781d983c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0781d98550"/>
        <function-ref name="get" scoped="" ref="0x7f0781d986e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0781d98870"/>
        <function-ref name="set" scoped="" ref="0x7f0781d98a00"/>
        <function-ref name="clr" scoped="" ref="0x7f0781d98b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD0" ref="0x7f0781db5350" loc="71:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD0" scoped="" ref="0x7f0781db5350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0781db58d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f0781db5a60"/>
        <function-ref name="toggle" scoped="" ref="0x7f0781db5bf0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0781db5d80"/>
        <function-ref name="get" scoped="" ref="0x7f0781db4020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0781db41b0"/>
        <function-ref name="set" scoped="" ref="0x7f0781db4340"/>
        <function-ref name="clr" scoped="" ref="0x7f0781db44d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE2" ref="0x7f0781da8350" loc="82:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE2" scoped="" ref="0x7f0781da8350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0781da86d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f0781da8860"/>
        <function-ref name="toggle" scoped="" ref="0x7f0781da89f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0781da8b80"/>
        <function-ref name="get" scoped="" ref="0x7f0781da8d10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0781da7020"/>
        <function-ref name="set" scoped="" ref="0x7f0781da71b0"/>
        <function-ref name="clr" scoped="" ref="0x7f0781da7340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF2" ref="0x7f0781d9fcb0" loc="91:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF2" scoped="" ref="0x7f0781d9fcb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0781d9e0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f0781d9e230"/>
        <function-ref name="toggle" scoped="" ref="0x7f0781d9e3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0781d9e550"/>
        <function-ref name="get" scoped="" ref="0x7f0781d9e6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0781d9e870"/>
        <function-ref name="set" scoped="" ref="0x7f0781d9ea00"/>
        <function-ref name="clr" scoped="" ref="0x7f0781d9eb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG4" ref="0x7f0781d91020" loc="102:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG4" scoped="" ref="0x7f0781d91020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0781d913a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f0781d91530"/>
        <function-ref name="toggle" scoped="" ref="0x7f0781d916c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0781d91850"/>
        <function-ref name="get" scoped="" ref="0x7f0781d919e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0781d91b70"/>
        <function-ref name="set" scoped="" ref="0x7f0781d91d00"/>
        <function-ref name="clr" scoped="" ref="0x7f0781d90020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA5" ref="0x7f0781dcc670" loc="49:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA5" scoped="" ref="0x7f0781dcc670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0781dcc9f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f0781dccb80"/>
        <function-ref name="toggle" scoped="" ref="0x7f0781dccd10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0781dcb020"/>
        <function-ref name="get" scoped="" ref="0x7f0781dcb1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0781dcb340"/>
        <function-ref name="set" scoped="" ref="0x7f0781dcb4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f0781dcb660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB7" ref="0x7f0781dc0670" loc="60:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB7" scoped="" ref="0x7f0781dc0670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0781dc09f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f0781dc0b80"/>
        <function-ref name="toggle" scoped="" ref="0x7f0781dc0d10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0781dbf020"/>
        <function-ref name="get" scoped="" ref="0x7f0781dbf1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0781dbf340"/>
        <function-ref name="set" scoped="" ref="0x7f0781dbf4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f0781dbf660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF0" ref="0x7f0781da1670" loc="89:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF0" scoped="" ref="0x7f0781da1670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0781da19f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f0781da1b80"/>
        <function-ref name="toggle" scoped="" ref="0x7f0781da1d10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0781da0020"/>
        <function-ref name="get" scoped="" ref="0x7f0781da01b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0781da0340"/>
        <function-ref name="set" scoped="" ref="0x7f0781da04d0"/>
        <function-ref name="clr" scoped="" ref="0x7f0781da0660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC1" ref="0x7f0781dbecb0" loc="63:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC1" scoped="" ref="0x7f0781dbecb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0781dbd0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f0781dbd230"/>
        <function-ref name="toggle" scoped="" ref="0x7f0781dbd3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0781dbd550"/>
        <function-ref name="get" scoped="" ref="0x7f0781dbd6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0781dbd870"/>
        <function-ref name="set" scoped="" ref="0x7f0781dbda00"/>
        <function-ref name="clr" scoped="" ref="0x7f0781dbdb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD3" ref="0x7f0781db2e40" loc="74:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD3" scoped="" ref="0x7f0781db2e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0781db01e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f0781db0370"/>
        <function-ref name="toggle" scoped="" ref="0x7f0781db0500"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0781db0690"/>
        <function-ref name="get" scoped="" ref="0x7f0781db0820"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0781db09b0"/>
        <function-ref name="set" scoped="" ref="0x7f0781db0b40"/>
        <function-ref name="clr" scoped="" ref="0x7f0781db0cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE5" ref="0x7f0781da5cb0" loc="85:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE5" scoped="" ref="0x7f0781da5cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0781da40a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f0781da4230"/>
        <function-ref name="toggle" scoped="" ref="0x7f0781da43c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0781da4550"/>
        <function-ref name="get" scoped="" ref="0x7f0781da46e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0781da4870"/>
        <function-ref name="set" scoped="" ref="0x7f0781da4a00"/>
        <function-ref name="clr" scoped="" ref="0x7f0781da4b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF5" ref="0x7f0781d9b670" loc="94:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF5" scoped="" ref="0x7f0781d9b670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0781d9b9f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f0781d9bb80"/>
        <function-ref name="toggle" scoped="" ref="0x7f0781d9bd10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0781d9a020"/>
        <function-ref name="get" scoped="" ref="0x7f0781d9a1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0781d9a340"/>
        <function-ref name="set" scoped="" ref="0x7f0781d9a4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f0781d9a660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA0" ref="0x7f0781dd5860" loc="44:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA0" scoped="" ref="0x7f0781dd5860"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0781dd5be0"/>
        <function-ref name="isInput" scoped="" ref="0x7f0781dd5d70"/>
        <function-ref name="toggle" scoped="" ref="0x7f0781dd2020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0781dd21b0"/>
        <function-ref name="get" scoped="" ref="0x7f0781dd2340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0781dd24d0"/>
        <function-ref name="set" scoped="" ref="0x7f0781dd2660"/>
        <function-ref name="clr" scoped="" ref="0x7f0781dd27f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB2" ref="0x7f0781dc6670" loc="55:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB2" scoped="" ref="0x7f0781dc6670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0781dc69f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f0781dc6b80"/>
        <function-ref name="toggle" scoped="" ref="0x7f0781dc6d10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0781dc5020"/>
        <function-ref name="get" scoped="" ref="0x7f0781dc51b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0781dc5340"/>
        <function-ref name="set" scoped="" ref="0x7f0781dc54d0"/>
        <function-ref name="clr" scoped="" ref="0x7f0781dc5660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC4" ref="0x7f0781dba670" loc="66:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC4" scoped="" ref="0x7f0781dba670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0781dba9f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f0781dbab80"/>
        <function-ref name="toggle" scoped="" ref="0x7f0781dbad10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0781db9020"/>
        <function-ref name="get" scoped="" ref="0x7f0781db91b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0781db9340"/>
        <function-ref name="set" scoped="" ref="0x7f0781db94d0"/>
        <function-ref name="clr" scoped="" ref="0x7f0781db9660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD6" ref="0x7f0781dad670" loc="77:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD6" scoped="" ref="0x7f0781dad670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0781dad9f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f0781dadb80"/>
        <function-ref name="toggle" scoped="" ref="0x7f0781dadd10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0781dac020"/>
        <function-ref name="get" scoped="" ref="0x7f0781dac1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0781dac340"/>
        <function-ref name="set" scoped="" ref="0x7f0781dac4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f0781dac660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG2" ref="0x7f0781d95990" loc="100:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG2" scoped="" ref="0x7f0781d95990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0781d95d10"/>
        <function-ref name="isInput" scoped="" ref="0x7f0781d93020"/>
        <function-ref name="toggle" scoped="" ref="0x7f0781d931b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0781d93340"/>
        <function-ref name="get" scoped="" ref="0x7f0781d934d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0781d93660"/>
        <function-ref name="set" scoped="" ref="0x7f0781d937f0"/>
        <function-ref name="clr" scoped="" ref="0x7f0781d93980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE0" ref="0x7f0781dabcb0" loc="80:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE0" scoped="" ref="0x7f0781dabcb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0781daa0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f0781daa230"/>
        <function-ref name="toggle" scoped="" ref="0x7f0781daa3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0781daa550"/>
        <function-ref name="get" scoped="" ref="0x7f0781daa6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0781daa870"/>
        <function-ref name="set" scoped="" ref="0x7f0781daaa00"/>
        <function-ref name="clr" scoped="" ref="0x7f0781daab90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC7" ref="0x7f0781db6020" loc="69:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC7" scoped="" ref="0x7f0781db6020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0781db63a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f0781db6530"/>
        <function-ref name="toggle" scoped="" ref="0x7f0781db66c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0781db6850"/>
        <function-ref name="get" scoped="" ref="0x7f0781db69e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0781db6b70"/>
        <function-ref name="set" scoped="" ref="0x7f0781db6d00"/>
        <function-ref name="clr" scoped="" ref="0x7f0781db5020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA3" ref="0x7f0781dcf060" loc="47:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA3" scoped="" ref="0x7f0781dcf060"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0781dcf3e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f0781dcf570"/>
        <function-ref name="toggle" scoped="" ref="0x7f0781dcf700"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0781dcf890"/>
        <function-ref name="get" scoped="" ref="0x7f0781dcfa20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0781dcfbb0"/>
        <function-ref name="set" scoped="" ref="0x7f0781dcfd40"/>
        <function-ref name="clr" scoped="" ref="0x7f0781dce020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB5" ref="0x7f0781dc2020" loc="58:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB5" scoped="" ref="0x7f0781dc2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0781dc23a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f0781dc2530"/>
        <function-ref name="toggle" scoped="" ref="0x7f0781dc26c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0781dc2850"/>
        <function-ref name="get" scoped="" ref="0x7f0781dc29e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0781dc2b70"/>
        <function-ref name="set" scoped="" ref="0x7f0781dc2d00"/>
        <function-ref name="clr" scoped="" ref="0x7f0781dc1020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7f0781d43440" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7f0781d43440"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0781d437c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f0781d43950"/>
        <function-ref name="toggle" scoped="" ref="0x7f0781d43ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0781d43c70"/>
        <function-ref name="get" scoped="" ref="0x7f0781d43e00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0781d42020"/>
        <function-ref name="set" scoped="" ref="0x7f0781d421b0"/>
        <function-ref name="clr" scoped="" ref="0x7f0781d42340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7f0781d408f0" loc="49:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7f0781d408f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0781d40c70"/>
        <function-ref name="isInput" scoped="" ref="0x7f0781d40e00"/>
        <function-ref name="toggle" scoped="" ref="0x7f0781d3f020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0781d3f1b0"/>
        <function-ref name="get" scoped="" ref="0x7f0781d3f340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0781d3f4d0"/>
        <function-ref name="set" scoped="" ref="0x7f0781d3f660"/>
        <function-ref name="clr" scoped="" ref="0x7f0781d3f7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7f0781d46140" loc="44:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7f0781d46140"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0781d464c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f0781d46650"/>
        <function-ref name="toggle" scoped="" ref="0x7f0781d467e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0781d46970"/>
        <function-ref name="get" scoped="" ref="0x7f0781d46b00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0781d46c90"/>
        <function-ref name="set" scoped="" ref="0x7f0781d46e20"/>
        <function-ref name="clr" scoped="" ref="0x7f0781d45020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7f0781d425d0" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7f0781d425d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0781d42950"/>
        <function-ref name="isInput" scoped="" ref="0x7f0781d42ae0"/>
        <function-ref name="toggle" scoped="" ref="0x7f0781d42c70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0781d42e00"/>
        <function-ref name="get" scoped="" ref="0x7f0781d41020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0781d411b0"/>
        <function-ref name="set" scoped="" ref="0x7f0781d41340"/>
        <function-ref name="clr" scoped="" ref="0x7f0781d414d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7f0781d3fa80" loc="50:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7f0781d3fa80"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0781d3fe00"/>
        <function-ref name="isInput" scoped="" ref="0x7f0781d3e020"/>
        <function-ref name="toggle" scoped="" ref="0x7f0781d3e1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0781d3e340"/>
        <function-ref name="get" scoped="" ref="0x7f0781d3e4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0781d3e660"/>
        <function-ref name="set" scoped="" ref="0x7f0781d3e7f0"/>
        <function-ref name="clr" scoped="" ref="0x7f0781d3e980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7f0781d452b0" loc="45:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7f0781d452b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0781d45630"/>
        <function-ref name="isInput" scoped="" ref="0x7f0781d457c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f0781d45950"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0781d45ae0"/>
        <function-ref name="get" scoped="" ref="0x7f0781d45c70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0781d45e00"/>
        <function-ref name="set" scoped="" ref="0x7f0781d43020"/>
        <function-ref name="clr" scoped="" ref="0x7f0781d431b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7f0781d41760" loc="48:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7f0781d41760"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0781d41ae0"/>
        <function-ref name="isInput" scoped="" ref="0x7f0781d41c70"/>
        <function-ref name="toggle" scoped="" ref="0x7f0781d41e00"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0781d40020"/>
        <function-ref name="get" scoped="" ref="0x7f0781d401b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0781d40340"/>
        <function-ref name="set" scoped="" ref="0x7f0781d404d0"/>
        <function-ref name="clr" scoped="" ref="0x7f0781d40660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7f0781d3ec10" loc="51:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7f0781d3ec10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0781d3d020"/>
        <function-ref name="isInput" scoped="" ref="0x7f0781d3d1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f0781d3d340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0781d3d4d0"/>
        <function-ref name="get" scoped="" ref="0x7f0781d3d660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0781d3d7f0"/>
        <function-ref name="set" scoped="" ref="0x7f0781d3d980"/>
        <function-ref name="clr" scoped="" ref="0x7f0781d3db10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f078107f6d0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f078107f6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f078107fa50"/>
        <function-ref name="isInput" scoped="" ref="0x7f078107fbe0"/>
        <function-ref name="toggle" scoped="" ref="0x7f078107fd70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f078107e020"/>
        <function-ref name="get" scoped="" ref="0x7f078107e1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f078107e340"/>
        <function-ref name="set" scoped="" ref="0x7f078107e4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f078107e660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f078107c9b0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f078107c9b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f078107cd30"/>
        <function-ref name="isInput" scoped="" ref="0x7f078107b020"/>
        <function-ref name="toggle" scoped="" ref="0x7f078107b1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f078107b340"/>
        <function-ref name="get" scoped="" ref="0x7f078107b4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f078107b660"/>
        <function-ref name="set" scoped="" ref="0x7f078107b7f0"/>
        <function-ref name="clr" scoped="" ref="0x7f078107b980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f0781079e20" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f0781079e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f07810781c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f0781078350"/>
        <function-ref name="toggle" scoped="" ref="0x7f07810784e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0781078670"/>
        <function-ref name="get" scoped="" ref="0x7f0781078800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0781078990"/>
        <function-ref name="set" scoped="" ref="0x7f0781078b20"/>
        <function-ref name="clr" scoped="" ref="0x7f0781078cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f07810750a0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f07810750a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0781075420"/>
        <function-ref name="isInput" scoped="" ref="0x7f07810755b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f0781075740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f07810758d0"/>
        <function-ref name="get" scoped="" ref="0x7f0781075a60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0781075bf0"/>
        <function-ref name="set" scoped="" ref="0x7f0781075d80"/>
        <function-ref name="clr" scoped="" ref="0x7f0781074020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f07810723f0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f07810723f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0781072770"/>
        <function-ref name="isInput" scoped="" ref="0x7f0781072900"/>
        <function-ref name="toggle" scoped="" ref="0x7f0781072a90"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0781072c20"/>
        <function-ref name="get" scoped="" ref="0x7f0781072db0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0781071020"/>
        <function-ref name="set" scoped="" ref="0x7f07810711b0"/>
        <function-ref name="clr" scoped="" ref="0x7f0781071340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f078106f6d0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f078106f6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f078106fa50"/>
        <function-ref name="isInput" scoped="" ref="0x7f078106fbe0"/>
        <function-ref name="toggle" scoped="" ref="0x7f078106fd70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0781065020"/>
        <function-ref name="get" scoped="" ref="0x7f07810651b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0781065340"/>
        <function-ref name="set" scoped="" ref="0x7f07810654d0"/>
        <function-ref name="clr" scoped="" ref="0x7f0781065660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f07810639b0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f07810639b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0781063d30"/>
        <function-ref name="isInput" scoped="" ref="0x7f0781062020"/>
        <function-ref name="toggle" scoped="" ref="0x7f07810621b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0781062340"/>
        <function-ref name="get" scoped="" ref="0x7f07810624d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0781062660"/>
        <function-ref name="set" scoped="" ref="0x7f07810627f0"/>
        <function-ref name="clr" scoped="" ref="0x7f0781062980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f0781060e20" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f0781060e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f078105f1c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f078105f350"/>
        <function-ref name="toggle" scoped="" ref="0x7f078105f4e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f078105f670"/>
        <function-ref name="get" scoped="" ref="0x7f078105f800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f078105f990"/>
        <function-ref name="set" scoped="" ref="0x7f078105fb20"/>
        <function-ref name="clr" scoped="" ref="0x7f078105fcb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7f0781d34760" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7f0781d34760"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0781d34ae0"/>
        <function-ref name="isInput" scoped="" ref="0x7f0781d34c70"/>
        <function-ref name="toggle" scoped="" ref="0x7f0781d34e00"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0781d33020"/>
        <function-ref name="get" scoped="" ref="0x7f0781d331b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0781d33340"/>
        <function-ref name="set" scoped="" ref="0x7f0781d334d0"/>
        <function-ref name="clr" scoped="" ref="0x7f0781d33660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7f0781d31c10" loc="49:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7f0781d31c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0781d30020"/>
        <function-ref name="isInput" scoped="" ref="0x7f0781d301b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f0781d30340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0781d304d0"/>
        <function-ref name="get" scoped="" ref="0x7f0781d30660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0781d307f0"/>
        <function-ref name="set" scoped="" ref="0x7f0781d30980"/>
        <function-ref name="clr" scoped="" ref="0x7f0781d30b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7f0781d363f0" loc="44:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7f0781d363f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0781d36770"/>
        <function-ref name="isInput" scoped="" ref="0x7f0781d36900"/>
        <function-ref name="toggle" scoped="" ref="0x7f0781d36a90"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0781d36c20"/>
        <function-ref name="get" scoped="" ref="0x7f0781d36db0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0781d35020"/>
        <function-ref name="set" scoped="" ref="0x7f0781d351b0"/>
        <function-ref name="clr" scoped="" ref="0x7f0781d35340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7f0781d338f0" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7f0781d338f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0781d33c70"/>
        <function-ref name="isInput" scoped="" ref="0x7f0781d33e00"/>
        <function-ref name="toggle" scoped="" ref="0x7f0781d32020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0781d321b0"/>
        <function-ref name="get" scoped="" ref="0x7f0781d32340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0781d324d0"/>
        <function-ref name="set" scoped="" ref="0x7f0781d32660"/>
        <function-ref name="clr" scoped="" ref="0x7f0781d327f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7f0781d30da0" loc="50:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7f0781d30da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0781d2f180"/>
        <function-ref name="isInput" scoped="" ref="0x7f0781d2f310"/>
        <function-ref name="toggle" scoped="" ref="0x7f0781d2f4a0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0781d2f630"/>
        <function-ref name="get" scoped="" ref="0x7f0781d2f7c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0781d2f950"/>
        <function-ref name="set" scoped="" ref="0x7f0781d2fae0"/>
        <function-ref name="clr" scoped="" ref="0x7f0781d2fc70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7f0781d355d0" loc="45:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7f0781d355d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0781d35950"/>
        <function-ref name="isInput" scoped="" ref="0x7f0781d35ae0"/>
        <function-ref name="toggle" scoped="" ref="0x7f0781d35c70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0781d35e00"/>
        <function-ref name="get" scoped="" ref="0x7f0781d34020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0781d341b0"/>
        <function-ref name="set" scoped="" ref="0x7f0781d34340"/>
        <function-ref name="clr" scoped="" ref="0x7f0781d344d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7f0781d32a80" loc="48:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7f0781d32a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0781d32e00"/>
        <function-ref name="isInput" scoped="" ref="0x7f0781d31020"/>
        <function-ref name="toggle" scoped="" ref="0x7f0781d311b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0781d31340"/>
        <function-ref name="get" scoped="" ref="0x7f0781d314d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0781d31660"/>
        <function-ref name="set" scoped="" ref="0x7f0781d317f0"/>
        <function-ref name="clr" scoped="" ref="0x7f0781d31980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7f0781d2e020" loc="51:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7f0781d2e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0781d2e3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f0781d2e530"/>
        <function-ref name="toggle" scoped="" ref="0x7f0781d2e6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0781d2e850"/>
        <function-ref name="get" scoped="" ref="0x7f0781d2e9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0781d2eb70"/>
        <function-ref name="set" scoped="" ref="0x7f0781d2ed00"/>
        <function-ref name="clr" scoped="" ref="0x7f0781d2d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f078100ca60" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f078100ca60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f078100cde0"/>
        <function-ref name="isInput" scoped="" ref="0x7f078100a020"/>
        <function-ref name="toggle" scoped="" ref="0x7f078100a1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f078100a340"/>
        <function-ref name="get" scoped="" ref="0x7f078100a4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f078100a660"/>
        <function-ref name="set" scoped="" ref="0x7f078100a7f0"/>
        <function-ref name="clr" scoped="" ref="0x7f078100a980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f0781008e20" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f0781008e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f07810071c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f0781007350"/>
        <function-ref name="toggle" scoped="" ref="0x7f07810074e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0781007670"/>
        <function-ref name="get" scoped="" ref="0x7f0781007800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0781007990"/>
        <function-ref name="set" scoped="" ref="0x7f0781007b20"/>
        <function-ref name="clr" scoped="" ref="0x7f0781007cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f07810040a0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f07810040a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0781004420"/>
        <function-ref name="isInput" scoped="" ref="0x7f07810045b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f0781004740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f07810048d0"/>
        <function-ref name="get" scoped="" ref="0x7f0781004a60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0781004bf0"/>
        <function-ref name="set" scoped="" ref="0x7f0781004d80"/>
        <function-ref name="clr" scoped="" ref="0x7f0781003020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f07810013f0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f07810013f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0781001770"/>
        <function-ref name="isInput" scoped="" ref="0x7f0781001900"/>
        <function-ref name="toggle" scoped="" ref="0x7f0781001a90"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0781001c20"/>
        <function-ref name="get" scoped="" ref="0x7f0781001db0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0781000020"/>
        <function-ref name="set" scoped="" ref="0x7f07810001b0"/>
        <function-ref name="clr" scoped="" ref="0x7f0781000340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f0780ffe6d0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f0780ffe6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0780ffea50"/>
        <function-ref name="isInput" scoped="" ref="0x7f0780ffebe0"/>
        <function-ref name="toggle" scoped="" ref="0x7f0780ffed70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0780ffd020"/>
        <function-ref name="get" scoped="" ref="0x7f0780ffd1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0780ffd340"/>
        <function-ref name="set" scoped="" ref="0x7f0780ffd4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f0780ffd660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f0780ffb9b0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f0780ffb9b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0780ffbd30"/>
        <function-ref name="isInput" scoped="" ref="0x7f0780ffa020"/>
        <function-ref name="toggle" scoped="" ref="0x7f0780ffa1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0780ffa340"/>
        <function-ref name="get" scoped="" ref="0x7f0780ffa4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0780ffa660"/>
        <function-ref name="set" scoped="" ref="0x7f0780ffa7f0"/>
        <function-ref name="clr" scoped="" ref="0x7f0780ffa980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f0780ff8e20" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f0780ff8e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0780ff71c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f0780ff7350"/>
        <function-ref name="toggle" scoped="" ref="0x7f0780ff74e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0780ff7670"/>
        <function-ref name="get" scoped="" ref="0x7f0780ff7800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0780ff7990"/>
        <function-ref name="set" scoped="" ref="0x7f0780ff7b20"/>
        <function-ref name="clr" scoped="" ref="0x7f0780ff7cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f0780ff40a0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f0780ff40a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0780ff4420"/>
        <function-ref name="isInput" scoped="" ref="0x7f0780ff45b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f0780ff4740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0780ff48d0"/>
        <function-ref name="get" scoped="" ref="0x7f0780ff4a60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0780ff4bf0"/>
        <function-ref name="set" scoped="" ref="0x7f0780ff4d80"/>
        <function-ref name="clr" scoped="" ref="0x7f0780ff3020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7f0781d25a80" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7f0781d25a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0781d25e00"/>
        <function-ref name="isInput" scoped="" ref="0x7f0781d24020"/>
        <function-ref name="toggle" scoped="" ref="0x7f0781d241b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0781d24340"/>
        <function-ref name="get" scoped="" ref="0x7f0781d244d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0781d24660"/>
        <function-ref name="set" scoped="" ref="0x7f0781d247f0"/>
        <function-ref name="clr" scoped="" ref="0x7f0781d24980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7f0781d21020" loc="49:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7f0781d21020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0781d213a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f0781d21530"/>
        <function-ref name="toggle" scoped="" ref="0x7f0781d216c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0781d21850"/>
        <function-ref name="get" scoped="" ref="0x7f0781d219e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0781d21b70"/>
        <function-ref name="set" scoped="" ref="0x7f0781d21d00"/>
        <function-ref name="clr" scoped="" ref="0x7f0781d20020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7f0781d277a0" loc="44:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7f0781d277a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0781d27b20"/>
        <function-ref name="isInput" scoped="" ref="0x7f0781d27cb0"/>
        <function-ref name="toggle" scoped="" ref="0x7f0781d27e40"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0781d26020"/>
        <function-ref name="get" scoped="" ref="0x7f0781d261b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0781d26340"/>
        <function-ref name="set" scoped="" ref="0x7f0781d264d0"/>
        <function-ref name="clr" scoped="" ref="0x7f0781d26660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7f0781d24c10" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7f0781d24c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0781d23020"/>
        <function-ref name="isInput" scoped="" ref="0x7f0781d231b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f0781d23340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0781d234d0"/>
        <function-ref name="get" scoped="" ref="0x7f0781d23660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0781d237f0"/>
        <function-ref name="set" scoped="" ref="0x7f0781d23980"/>
        <function-ref name="clr" scoped="" ref="0x7f0781d23b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7f0781d202b0" loc="50:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7f0781d202b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0781d20630"/>
        <function-ref name="isInput" scoped="" ref="0x7f0781d207c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f0781d20950"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0781d20ae0"/>
        <function-ref name="get" scoped="" ref="0x7f0781d20c70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0781d20e00"/>
        <function-ref name="set" scoped="" ref="0x7f0781d1e020"/>
        <function-ref name="clr" scoped="" ref="0x7f0781d1e1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7f0781d268f0" loc="45:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7f0781d268f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0781d26c70"/>
        <function-ref name="isInput" scoped="" ref="0x7f0781d26e00"/>
        <function-ref name="toggle" scoped="" ref="0x7f0781d25020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0781d251b0"/>
        <function-ref name="get" scoped="" ref="0x7f0781d25340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0781d254d0"/>
        <function-ref name="set" scoped="" ref="0x7f0781d25660"/>
        <function-ref name="clr" scoped="" ref="0x7f0781d257f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7f0781d23da0" loc="48:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7f0781d23da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0781d22180"/>
        <function-ref name="isInput" scoped="" ref="0x7f0781d22310"/>
        <function-ref name="toggle" scoped="" ref="0x7f0781d224a0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0781d22630"/>
        <function-ref name="get" scoped="" ref="0x7f0781d227c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0781d22950"/>
        <function-ref name="set" scoped="" ref="0x7f0781d22ae0"/>
        <function-ref name="clr" scoped="" ref="0x7f0781d22c70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7f0781d1e440" loc="51:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7f0781d1e440"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0781d1e7c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f0781d1e950"/>
        <function-ref name="toggle" scoped="" ref="0x7f0781d1eae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0781d1ec70"/>
        <function-ref name="get" scoped="" ref="0x7f0781d1ee00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0781d1d020"/>
        <function-ref name="set" scoped="" ref="0x7f0781d1d1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f0781d1d340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f0780fa1c90" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f0780fa1c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0780f9f0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f0780f9f230"/>
        <function-ref name="toggle" scoped="" ref="0x7f0780f9f3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0780f9f550"/>
        <function-ref name="get" scoped="" ref="0x7f0780f9f6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0780f9f870"/>
        <function-ref name="set" scoped="" ref="0x7f0780f9fa00"/>
        <function-ref name="clr" scoped="" ref="0x7f0780f9fb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f0780f9de20" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f0780f9de20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0780f9c1c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f0780f9c350"/>
        <function-ref name="toggle" scoped="" ref="0x7f0780f9c4e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0780f9c670"/>
        <function-ref name="get" scoped="" ref="0x7f0780f9c800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0780f9c990"/>
        <function-ref name="set" scoped="" ref="0x7f0780f9cb20"/>
        <function-ref name="clr" scoped="" ref="0x7f0780f9ccb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f0780f990a0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f0780f990a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0780f99420"/>
        <function-ref name="isInput" scoped="" ref="0x7f0780f995b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f0780f99740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0780f998d0"/>
        <function-ref name="get" scoped="" ref="0x7f0780f99a60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0780f99bf0"/>
        <function-ref name="set" scoped="" ref="0x7f0780f99d80"/>
        <function-ref name="clr" scoped="" ref="0x7f0780f98020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f0780f963f0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f0780f963f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0780f96770"/>
        <function-ref name="isInput" scoped="" ref="0x7f0780f96900"/>
        <function-ref name="toggle" scoped="" ref="0x7f0780f96a90"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0780f96c20"/>
        <function-ref name="get" scoped="" ref="0x7f0780f96db0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0780f95020"/>
        <function-ref name="set" scoped="" ref="0x7f0780f951b0"/>
        <function-ref name="clr" scoped="" ref="0x7f0780f95340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f0780f936d0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f0780f936d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0780f93a50"/>
        <function-ref name="isInput" scoped="" ref="0x7f0780f93be0"/>
        <function-ref name="toggle" scoped="" ref="0x7f0780f93d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0780f92020"/>
        <function-ref name="get" scoped="" ref="0x7f0780f921b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0780f92340"/>
        <function-ref name="set" scoped="" ref="0x7f0780f924d0"/>
        <function-ref name="clr" scoped="" ref="0x7f0780f92660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f0780f909b0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f0780f909b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0780f90d30"/>
        <function-ref name="isInput" scoped="" ref="0x7f0780f8f020"/>
        <function-ref name="toggle" scoped="" ref="0x7f0780f8f1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0780f8f340"/>
        <function-ref name="get" scoped="" ref="0x7f0780f8f4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0780f8f660"/>
        <function-ref name="set" scoped="" ref="0x7f0780f8f7f0"/>
        <function-ref name="clr" scoped="" ref="0x7f0780f8f980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f0780f8de20" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f0780f8de20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0780f8c1c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f0780f8c350"/>
        <function-ref name="toggle" scoped="" ref="0x7f0780f8c4e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0780f8c670"/>
        <function-ref name="get" scoped="" ref="0x7f0780f8c800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0780f8c990"/>
        <function-ref name="set" scoped="" ref="0x7f0780f8cb20"/>
        <function-ref name="clr" scoped="" ref="0x7f0780f8ccb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f0780f890a0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f0780f890a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0780f89420"/>
        <function-ref name="isInput" scoped="" ref="0x7f0780f895b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f0780f89740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0780f898d0"/>
        <function-ref name="get" scoped="" ref="0x7f0780f89a60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0780f89bf0"/>
        <function-ref name="set" scoped="" ref="0x7f0780f89d80"/>
        <function-ref name="clr" scoped="" ref="0x7f0780f88020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7f0781d16da0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7f0781d16da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0781d15180"/>
        <function-ref name="isInput" scoped="" ref="0x7f0781d15310"/>
        <function-ref name="toggle" scoped="" ref="0x7f0781d154a0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0781d15630"/>
        <function-ref name="get" scoped="" ref="0x7f0781d157c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0781d15950"/>
        <function-ref name="set" scoped="" ref="0x7f0781d15ae0"/>
        <function-ref name="clr" scoped="" ref="0x7f0781d15c70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7f0781d11440" loc="49:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7f0781d11440"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0781d117c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f0781d11950"/>
        <function-ref name="toggle" scoped="" ref="0x7f0781d11ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0781d11c70"/>
        <function-ref name="get" scoped="" ref="0x7f0781d11e00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0781d10020"/>
        <function-ref name="set" scoped="" ref="0x7f0781d101b0"/>
        <function-ref name="clr" scoped="" ref="0x7f0781d10340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7f0781d18a20" loc="44:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7f0781d18a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0781d18da0"/>
        <function-ref name="isInput" scoped="" ref="0x7f0781d17020"/>
        <function-ref name="toggle" scoped="" ref="0x7f0781d171b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0781d17340"/>
        <function-ref name="get" scoped="" ref="0x7f0781d174d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0781d17660"/>
        <function-ref name="set" scoped="" ref="0x7f0781d177f0"/>
        <function-ref name="clr" scoped="" ref="0x7f0781d17980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7f0781d14020" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7f0781d14020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0781d143a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f0781d14530"/>
        <function-ref name="toggle" scoped="" ref="0x7f0781d146c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0781d14850"/>
        <function-ref name="get" scoped="" ref="0x7f0781d149e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0781d14b70"/>
        <function-ref name="set" scoped="" ref="0x7f0781d14d00"/>
        <function-ref name="clr" scoped="" ref="0x7f0781d12020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7f0781d105d0" loc="50:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7f0781d105d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0781d10950"/>
        <function-ref name="isInput" scoped="" ref="0x7f0781d10ae0"/>
        <function-ref name="toggle" scoped="" ref="0x7f0781d10c70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0781d10e00"/>
        <function-ref name="get" scoped="" ref="0x7f0781d0f020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0781d0f1b0"/>
        <function-ref name="set" scoped="" ref="0x7f0781d0f340"/>
        <function-ref name="clr" scoped="" ref="0x7f0781d0f4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7f0781d17c10" loc="45:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7f0781d17c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0781d16020"/>
        <function-ref name="isInput" scoped="" ref="0x7f0781d161b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f0781d16340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0781d164d0"/>
        <function-ref name="get" scoped="" ref="0x7f0781d16660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0781d167f0"/>
        <function-ref name="set" scoped="" ref="0x7f0781d16980"/>
        <function-ref name="clr" scoped="" ref="0x7f0781d16b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7f0781d122b0" loc="48:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7f0781d122b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0781d12630"/>
        <function-ref name="isInput" scoped="" ref="0x7f0781d127c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f0781d12950"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0781d12ae0"/>
        <function-ref name="get" scoped="" ref="0x7f0781d12c70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0781d12e00"/>
        <function-ref name="set" scoped="" ref="0x7f0781d11020"/>
        <function-ref name="clr" scoped="" ref="0x7f0781d111b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7f0781d0f760" loc="51:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7f0781d0f760"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0781d0fae0"/>
        <function-ref name="isInput" scoped="" ref="0x7f0781d0fc70"/>
        <function-ref name="toggle" scoped="" ref="0x7f0781d0fe00"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0781d0e020"/>
        <function-ref name="get" scoped="" ref="0x7f0781d0e1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0781d0e340"/>
        <function-ref name="set" scoped="" ref="0x7f0781d0e4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f0781d0e660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f0780f36c90" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f0780f36c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0780f350a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f0780f35230"/>
        <function-ref name="toggle" scoped="" ref="0x7f0780f353c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0780f35550"/>
        <function-ref name="get" scoped="" ref="0x7f0780f356e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0780f35870"/>
        <function-ref name="set" scoped="" ref="0x7f0780f35a00"/>
        <function-ref name="clr" scoped="" ref="0x7f0780f35b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f0780f33e20" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f0780f33e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0780f311c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f0780f31350"/>
        <function-ref name="toggle" scoped="" ref="0x7f0780f314e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0780f31670"/>
        <function-ref name="get" scoped="" ref="0x7f0780f31800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0780f31990"/>
        <function-ref name="set" scoped="" ref="0x7f0780f31b20"/>
        <function-ref name="clr" scoped="" ref="0x7f0780f31cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f0780f2e0a0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f0780f2e0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0780f2e420"/>
        <function-ref name="isInput" scoped="" ref="0x7f0780f2e5b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f0780f2e740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0780f2e8d0"/>
        <function-ref name="get" scoped="" ref="0x7f0780f2ea60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0780f2ebf0"/>
        <function-ref name="set" scoped="" ref="0x7f0780f2ed80"/>
        <function-ref name="clr" scoped="" ref="0x7f0780f2d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f0780f2b3f0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f0780f2b3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0780f2b770"/>
        <function-ref name="isInput" scoped="" ref="0x7f0780f2b900"/>
        <function-ref name="toggle" scoped="" ref="0x7f0780f2ba90"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0780f2bc20"/>
        <function-ref name="get" scoped="" ref="0x7f0780f2bdb0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0780f2a020"/>
        <function-ref name="set" scoped="" ref="0x7f0780f2a1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f0780f2a340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f0780f286d0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f0780f286d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0780f28a50"/>
        <function-ref name="isInput" scoped="" ref="0x7f0780f28be0"/>
        <function-ref name="toggle" scoped="" ref="0x7f0780f28d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0780f27020"/>
        <function-ref name="get" scoped="" ref="0x7f0780f271b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0780f27340"/>
        <function-ref name="set" scoped="" ref="0x7f0780f274d0"/>
        <function-ref name="clr" scoped="" ref="0x7f0780f27660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f0780f259b0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f0780f259b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0780f25d30"/>
        <function-ref name="isInput" scoped="" ref="0x7f0780f24020"/>
        <function-ref name="toggle" scoped="" ref="0x7f0780f241b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0780f24340"/>
        <function-ref name="get" scoped="" ref="0x7f0780f244d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0780f24660"/>
        <function-ref name="set" scoped="" ref="0x7f0780f247f0"/>
        <function-ref name="clr" scoped="" ref="0x7f0780f24980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f0780f22e20" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f0780f22e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0780f211c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f0780f21350"/>
        <function-ref name="toggle" scoped="" ref="0x7f0780f214e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0780f21670"/>
        <function-ref name="get" scoped="" ref="0x7f0780f21800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0780f21990"/>
        <function-ref name="set" scoped="" ref="0x7f0780f21b20"/>
        <function-ref name="clr" scoped="" ref="0x7f0780f21cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f0780f1e0a0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f0780f1e0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0780f1e420"/>
        <function-ref name="isInput" scoped="" ref="0x7f0780f1e5b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f0780f1e740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0780f1e8d0"/>
        <function-ref name="get" scoped="" ref="0x7f0780f1ea60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0780f1ebf0"/>
        <function-ref name="set" scoped="" ref="0x7f0780f1ed80"/>
        <function-ref name="clr" scoped="" ref="0x7f0780f1d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7f0781d05020" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7f0781d05020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0781d053a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f0781d05530"/>
        <function-ref name="toggle" scoped="" ref="0x7f0781d056c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0781d05850"/>
        <function-ref name="get" scoped="" ref="0x7f0781d059e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0781d05b70"/>
        <function-ref name="set" scoped="" ref="0x7f0781d05d00"/>
        <function-ref name="clr" scoped="" ref="0x7f0781d04020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7f0781d025d0" loc="49:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7f0781d025d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0781d02950"/>
        <function-ref name="isInput" scoped="" ref="0x7f0781d02ae0"/>
        <function-ref name="toggle" scoped="" ref="0x7f0781d02c70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0781d02e00"/>
        <function-ref name="get" scoped="" ref="0x7f0781d01020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0781d011b0"/>
        <function-ref name="set" scoped="" ref="0x7f0781d01340"/>
        <function-ref name="clr" scoped="" ref="0x7f0781d014d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7f0781d09d30" loc="44:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7f0781d09d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0781d070e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f0781d07270"/>
        <function-ref name="toggle" scoped="" ref="0x7f0781d07400"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0781d07590"/>
        <function-ref name="get" scoped="" ref="0x7f0781d07720"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0781d078b0"/>
        <function-ref name="set" scoped="" ref="0x7f0781d07a40"/>
        <function-ref name="clr" scoped="" ref="0x7f0781d07bd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7f0781d042b0" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7f0781d042b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0781d04630"/>
        <function-ref name="isInput" scoped="" ref="0x7f0781d047c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f0781d04950"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0781d04ae0"/>
        <function-ref name="get" scoped="" ref="0x7f0781d04c70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0781d04e00"/>
        <function-ref name="set" scoped="" ref="0x7f0781d03020"/>
        <function-ref name="clr" scoped="" ref="0x7f0781d031b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7f0781d01760" loc="50:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7f0781d01760"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0781d01ae0"/>
        <function-ref name="isInput" scoped="" ref="0x7f0781d01c70"/>
        <function-ref name="toggle" scoped="" ref="0x7f0781d01e00"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0781d00020"/>
        <function-ref name="get" scoped="" ref="0x7f0781d001b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0781d00340"/>
        <function-ref name="set" scoped="" ref="0x7f0781d004d0"/>
        <function-ref name="clr" scoped="" ref="0x7f0781d00660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7f0781d07e60" loc="45:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7f0781d07e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0781d06210"/>
        <function-ref name="isInput" scoped="" ref="0x7f0781d063a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f0781d06530"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0781d066c0"/>
        <function-ref name="get" scoped="" ref="0x7f0781d06850"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0781d069e0"/>
        <function-ref name="set" scoped="" ref="0x7f0781d06b70"/>
        <function-ref name="clr" scoped="" ref="0x7f0781d06d00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7f0781d03440" loc="48:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7f0781d03440"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0781d037c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f0781d03950"/>
        <function-ref name="toggle" scoped="" ref="0x7f0781d03ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0781d03c70"/>
        <function-ref name="get" scoped="" ref="0x7f0781d03e00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0781d02020"/>
        <function-ref name="set" scoped="" ref="0x7f0781d021b0"/>
        <function-ref name="clr" scoped="" ref="0x7f0781d02340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7f0781d008f0" loc="51:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7f0781d008f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0781d00c70"/>
        <function-ref name="isInput" scoped="" ref="0x7f0781d00e00"/>
        <function-ref name="toggle" scoped="" ref="0x7f0781cff020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0781cff1b0"/>
        <function-ref name="get" scoped="" ref="0x7f0781cff340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0781cff4d0"/>
        <function-ref name="set" scoped="" ref="0x7f0781cff660"/>
        <function-ref name="clr" scoped="" ref="0x7f0781cff7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f0780ecbc90" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f0780ecbc90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0780eca0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f0780eca230"/>
        <function-ref name="toggle" scoped="" ref="0x7f0780eca3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0780eca550"/>
        <function-ref name="get" scoped="" ref="0x7f0780eca6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0780eca870"/>
        <function-ref name="set" scoped="" ref="0x7f0780ecaa00"/>
        <function-ref name="clr" scoped="" ref="0x7f0780ecab90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f0780ec8e20" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f0780ec8e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0780ec61c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f0780ec6350"/>
        <function-ref name="toggle" scoped="" ref="0x7f0780ec64e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0780ec6670"/>
        <function-ref name="get" scoped="" ref="0x7f0780ec6800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0780ec6990"/>
        <function-ref name="set" scoped="" ref="0x7f0780ec6b20"/>
        <function-ref name="clr" scoped="" ref="0x7f0780ec6cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f0780ec30a0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f0780ec30a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0780ec3420"/>
        <function-ref name="isInput" scoped="" ref="0x7f0780ec35b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f0780ec3740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0780ec38d0"/>
        <function-ref name="get" scoped="" ref="0x7f0780ec3a60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0780ec3bf0"/>
        <function-ref name="set" scoped="" ref="0x7f0780ec3d80"/>
        <function-ref name="clr" scoped="" ref="0x7f0780ec2020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f0780ec03f0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f0780ec03f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0780ec0770"/>
        <function-ref name="isInput" scoped="" ref="0x7f0780ec0900"/>
        <function-ref name="toggle" scoped="" ref="0x7f0780ec0a90"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0780ec0c20"/>
        <function-ref name="get" scoped="" ref="0x7f0780ec0db0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0780ebf020"/>
        <function-ref name="set" scoped="" ref="0x7f0780ebf1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f0780ebf340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f0780ebd6d0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f0780ebd6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0780ebda50"/>
        <function-ref name="isInput" scoped="" ref="0x7f0780ebdbe0"/>
        <function-ref name="toggle" scoped="" ref="0x7f0780ebdd70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0780ebc020"/>
        <function-ref name="get" scoped="" ref="0x7f0780ebc1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0780ebc340"/>
        <function-ref name="set" scoped="" ref="0x7f0780ebc4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f0780ebc660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f0780eba9b0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f0780eba9b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0780ebad30"/>
        <function-ref name="isInput" scoped="" ref="0x7f0780eb9020"/>
        <function-ref name="toggle" scoped="" ref="0x7f0780eb91b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0780eb9340"/>
        <function-ref name="get" scoped="" ref="0x7f0780eb94d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0780eb9660"/>
        <function-ref name="set" scoped="" ref="0x7f0780eb97f0"/>
        <function-ref name="clr" scoped="" ref="0x7f0780eb9980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f0780eb7e20" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f0780eb7e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0780eb61c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f0780eb6350"/>
        <function-ref name="toggle" scoped="" ref="0x7f0780eb64e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0780eb6670"/>
        <function-ref name="get" scoped="" ref="0x7f0780eb6800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0780eb6990"/>
        <function-ref name="set" scoped="" ref="0x7f0780eb6b20"/>
        <function-ref name="clr" scoped="" ref="0x7f0780eb6cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f0780eb30a0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f0780eb30a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0780eb3420"/>
        <function-ref name="isInput" scoped="" ref="0x7f0780eb35b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f0780eb3740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0780eb38d0"/>
        <function-ref name="get" scoped="" ref="0x7f0780eb3a60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0780eb3bf0"/>
        <function-ref name="set" scoped="" ref="0x7f0780eb3d80"/>
        <function-ref name="clr" scoped="" ref="0x7f0780eb2020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7f0781cf6440" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7f0781cf6440"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0781cf67c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f0781cf6950"/>
        <function-ref name="toggle" scoped="" ref="0x7f0781cf6ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0781cf6c70"/>
        <function-ref name="get" scoped="" ref="0x7f0781cf6e00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0781cf5020"/>
        <function-ref name="set" scoped="" ref="0x7f0781cf51b0"/>
        <function-ref name="clr" scoped="" ref="0x7f0781cf5340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7f0781cf38f0" loc="49:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7f0781cf38f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0781cf3c70"/>
        <function-ref name="isInput" scoped="" ref="0x7f0781cf3e00"/>
        <function-ref name="toggle" scoped="" ref="0x7f0781cf2020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0781cf21b0"/>
        <function-ref name="get" scoped="" ref="0x7f0781cf2340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0781cf24d0"/>
        <function-ref name="set" scoped="" ref="0x7f0781cf2660"/>
        <function-ref name="clr" scoped="" ref="0x7f0781cf27f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7f0781cf8020" loc="44:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7f0781cf8020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0781cf83a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f0781cf8530"/>
        <function-ref name="toggle" scoped="" ref="0x7f0781cf86c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0781cf8850"/>
        <function-ref name="get" scoped="" ref="0x7f0781cf89e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0781cf8b70"/>
        <function-ref name="set" scoped="" ref="0x7f0781cf8d00"/>
        <function-ref name="clr" scoped="" ref="0x7f0781cf7020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7f0781cf55d0" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7f0781cf55d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0781cf5950"/>
        <function-ref name="isInput" scoped="" ref="0x7f0781cf5ae0"/>
        <function-ref name="toggle" scoped="" ref="0x7f0781cf5c70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0781cf5e00"/>
        <function-ref name="get" scoped="" ref="0x7f0781cf4020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0781cf41b0"/>
        <function-ref name="set" scoped="" ref="0x7f0781cf4340"/>
        <function-ref name="clr" scoped="" ref="0x7f0781cf44d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7f0781cf2a80" loc="50:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7f0781cf2a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0781cf2e00"/>
        <function-ref name="isInput" scoped="" ref="0x7f0781cf1020"/>
        <function-ref name="toggle" scoped="" ref="0x7f0781cf11b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0781cf1340"/>
        <function-ref name="get" scoped="" ref="0x7f0781cf14d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0781cf1660"/>
        <function-ref name="set" scoped="" ref="0x7f0781cf17f0"/>
        <function-ref name="clr" scoped="" ref="0x7f0781cf1980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7f0781cf72b0" loc="45:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7f0781cf72b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0781cf7630"/>
        <function-ref name="isInput" scoped="" ref="0x7f0781cf77c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f0781cf7950"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0781cf7ae0"/>
        <function-ref name="get" scoped="" ref="0x7f0781cf7c70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0781cf7e00"/>
        <function-ref name="set" scoped="" ref="0x7f0781cf6020"/>
        <function-ref name="clr" scoped="" ref="0x7f0781cf61b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7f0781cf4760" loc="48:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7f0781cf4760"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0781cf4ae0"/>
        <function-ref name="isInput" scoped="" ref="0x7f0781cf4c70"/>
        <function-ref name="toggle" scoped="" ref="0x7f0781cf4e00"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0781cf3020"/>
        <function-ref name="get" scoped="" ref="0x7f0781cf31b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0781cf3340"/>
        <function-ref name="set" scoped="" ref="0x7f0781cf34d0"/>
        <function-ref name="clr" scoped="" ref="0x7f0781cf3660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7f0781cf1c10" loc="51:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7f0781cf1c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0781cf0020"/>
        <function-ref name="isInput" scoped="" ref="0x7f0781cf01b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f0781cf0340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0781cf04d0"/>
        <function-ref name="get" scoped="" ref="0x7f0781cf0660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0781cf07f0"/>
        <function-ref name="set" scoped="" ref="0x7f0781cf0980"/>
        <function-ref name="clr" scoped="" ref="0x7f0781cf0b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f0780e5dc90" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f0780e5dc90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0780e5c0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f0780e5c230"/>
        <function-ref name="toggle" scoped="" ref="0x7f0780e5c3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0780e5c550"/>
        <function-ref name="get" scoped="" ref="0x7f0780e5c6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0780e5c870"/>
        <function-ref name="set" scoped="" ref="0x7f0780e5ca00"/>
        <function-ref name="clr" scoped="" ref="0x7f0780e5cb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f0780e5ae20" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f0780e5ae20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0780e591c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f0780e59350"/>
        <function-ref name="toggle" scoped="" ref="0x7f0780e594e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0780e59670"/>
        <function-ref name="get" scoped="" ref="0x7f0780e59800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0780e59990"/>
        <function-ref name="set" scoped="" ref="0x7f0780e59b20"/>
        <function-ref name="clr" scoped="" ref="0x7f0780e59cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f0780e560a0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f0780e560a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0780e56420"/>
        <function-ref name="isInput" scoped="" ref="0x7f0780e565b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f0780e56740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0780e568d0"/>
        <function-ref name="get" scoped="" ref="0x7f0780e56a60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0780e56bf0"/>
        <function-ref name="set" scoped="" ref="0x7f0780e56d80"/>
        <function-ref name="clr" scoped="" ref="0x7f0780e54020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f0780e523f0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f0780e523f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0780e52770"/>
        <function-ref name="isInput" scoped="" ref="0x7f0780e52900"/>
        <function-ref name="toggle" scoped="" ref="0x7f0780e52a90"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0780e52c20"/>
        <function-ref name="get" scoped="" ref="0x7f0780e52db0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0780e51020"/>
        <function-ref name="set" scoped="" ref="0x7f0780e511b0"/>
        <function-ref name="clr" scoped="" ref="0x7f0780e51340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f0780e4f6d0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f0780e4f6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0780e4fa50"/>
        <function-ref name="isInput" scoped="" ref="0x7f0780e4fbe0"/>
        <function-ref name="toggle" scoped="" ref="0x7f0780e4fd70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0780e4e020"/>
        <function-ref name="get" scoped="" ref="0x7f0780e4e1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0780e4e340"/>
        <function-ref name="set" scoped="" ref="0x7f0780e4e4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f0780e4e660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f0780e4c9b0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f0780e4c9b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0780e4cd30"/>
        <function-ref name="isInput" scoped="" ref="0x7f0780e4b020"/>
        <function-ref name="toggle" scoped="" ref="0x7f0780e4b1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0780e4b340"/>
        <function-ref name="get" scoped="" ref="0x7f0780e4b4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0780e4b660"/>
        <function-ref name="set" scoped="" ref="0x7f0780e4b7f0"/>
        <function-ref name="clr" scoped="" ref="0x7f0780e4b980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f0780e49e20" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f0780e49e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0780e481c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f0780e48350"/>
        <function-ref name="toggle" scoped="" ref="0x7f0780e484e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0780e48670"/>
        <function-ref name="get" scoped="" ref="0x7f0780e48800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0780e48990"/>
        <function-ref name="set" scoped="" ref="0x7f0780e48b20"/>
        <function-ref name="clr" scoped="" ref="0x7f0780e48cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f0780e450a0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f0780e450a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0780e45420"/>
        <function-ref name="isInput" scoped="" ref="0x7f0780e455b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f0780e45740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0780e458d0"/>
        <function-ref name="get" scoped="" ref="0x7f0780e45a60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0780e45bf0"/>
        <function-ref name="set" scoped="" ref="0x7f0780e45d80"/>
        <function-ref name="clr" scoped="" ref="0x7f0780e44020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f0781ce8260" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f0781ce8260"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0781ce85e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f0781ce8770"/>
        <function-ref name="toggle" scoped="" ref="0x7f0781ce8900"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0781ce8a90"/>
        <function-ref name="get" scoped="" ref="0x7f0781ce8c20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0781ce8db0"/>
        <function-ref name="set" scoped="" ref="0x7f0781cd1020"/>
        <function-ref name="clr" scoped="" ref="0x7f0781cd11b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f0781cced00" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f0781cced00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0781ccd0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f0781ccd230"/>
        <function-ref name="toggle" scoped="" ref="0x7f0781ccd3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0781ccd550"/>
        <function-ref name="get" scoped="" ref="0x7f0781ccd6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0781ccd870"/>
        <function-ref name="set" scoped="" ref="0x7f0781ccda00"/>
        <function-ref name="clr" scoped="" ref="0x7f0781ccdb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f0781cc86d0" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f0781cc86d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0781cc8a50"/>
        <function-ref name="isInput" scoped="" ref="0x7f0781cc8be0"/>
        <function-ref name="toggle" scoped="" ref="0x7f0781cc8d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0781cc7020"/>
        <function-ref name="get" scoped="" ref="0x7f0781cc71b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0781cc7340"/>
        <function-ref name="set" scoped="" ref="0x7f0781cc74d0"/>
        <function-ref name="clr" scoped="" ref="0x7f0781cc7660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f0781cc2160" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f0781cc2160"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0781cc24e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f0781cc2670"/>
        <function-ref name="toggle" scoped="" ref="0x7f0781cc2800"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0781cc2990"/>
        <function-ref name="get" scoped="" ref="0x7f0781cc2b20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0781cc2cb0"/>
        <function-ref name="set" scoped="" ref="0x7f0781cc2e40"/>
        <function-ref name="clr" scoped="" ref="0x7f0781cc1020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f0781cbec90" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f0781cbec90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0781cbd0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f0781cbd230"/>
        <function-ref name="toggle" scoped="" ref="0x7f0781cbd3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0781cbd550"/>
        <function-ref name="get" scoped="" ref="0x7f0781cbd6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0781cbd870"/>
        <function-ref name="set" scoped="" ref="0x7f0781cbda00"/>
        <function-ref name="clr" scoped="" ref="0x7f0781cbdb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f0781cb86d0" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f0781cb86d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0781cb8a50"/>
        <function-ref name="isInput" scoped="" ref="0x7f0781cb8be0"/>
        <function-ref name="toggle" scoped="" ref="0x7f0781cb8d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0781cb7020"/>
        <function-ref name="get" scoped="" ref="0x7f0781cb71b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0781cb7340"/>
        <function-ref name="set" scoped="" ref="0x7f0781cb74d0"/>
        <function-ref name="clr" scoped="" ref="0x7f0781cb7660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f0781cb2270" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f0781cb2270"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0781cb25f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f0781cb2780"/>
        <function-ref name="toggle" scoped="" ref="0x7f0781cb2910"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0781cb2aa0"/>
        <function-ref name="get" scoped="" ref="0x7f0781cb2c30"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0781cb2dc0"/>
        <function-ref name="set" scoped="" ref="0x7f0781cb1020"/>
        <function-ref name="clr" scoped="" ref="0x7f0781cb11b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f0781caed00" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f0781caed00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0781cad0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f0781cad230"/>
        <function-ref name="toggle" scoped="" ref="0x7f0781cad3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0781cad550"/>
        <function-ref name="get" scoped="" ref="0x7f0781cad6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0781cad870"/>
        <function-ref name="set" scoped="" ref="0x7f0781cada00"/>
        <function-ref name="clr" scoped="" ref="0x7f0781cadb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f0781ca86d0" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f0781ca86d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0781ca8a50"/>
        <function-ref name="isInput" scoped="" ref="0x7f0781ca8be0"/>
        <function-ref name="toggle" scoped="" ref="0x7f0781ca8d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0781ca7020"/>
        <function-ref name="get" scoped="" ref="0x7f0781ca71b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0781ca7340"/>
        <function-ref name="set" scoped="" ref="0x7f0781ca74d0"/>
        <function-ref name="clr" scoped="" ref="0x7f0781ca7660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f0781ca3160" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f0781ca3160"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0781ca34e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f0781ca3670"/>
        <function-ref name="toggle" scoped="" ref="0x7f0781ca3800"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0781ca3990"/>
        <function-ref name="get" scoped="" ref="0x7f0781ca3b20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0781ca3cb0"/>
        <function-ref name="set" scoped="" ref="0x7f0781ca3e40"/>
        <function-ref name="clr" scoped="" ref="0x7f0781ca1020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f0781c9ec90" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f0781c9ec90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0781c9d0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f0781c9d230"/>
        <function-ref name="toggle" scoped="" ref="0x7f0781c9d3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0781c9d550"/>
        <function-ref name="get" scoped="" ref="0x7f0781c9d6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0781c9d870"/>
        <function-ref name="set" scoped="" ref="0x7f0781c9da00"/>
        <function-ref name="clr" scoped="" ref="0x7f0781c9db90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f0781c986d0" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f0781c986d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0781c98a50"/>
        <function-ref name="isInput" scoped="" ref="0x7f0781c98be0"/>
        <function-ref name="toggle" scoped="" ref="0x7f0781c98d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0781c97020"/>
        <function-ref name="get" scoped="" ref="0x7f0781c971b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0781c97340"/>
        <function-ref name="set" scoped="" ref="0x7f0781c974d0"/>
        <function-ref name="clr" scoped="" ref="0x7f0781c97660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f0781c93160" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f0781c93160"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0781c934e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f0781c93670"/>
        <function-ref name="toggle" scoped="" ref="0x7f0781c93800"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0781c93990"/>
        <function-ref name="get" scoped="" ref="0x7f0781c93b20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0781c93cb0"/>
        <function-ref name="set" scoped="" ref="0x7f0781c93e40"/>
        <function-ref name="clr" scoped="" ref="0x7f0781c91020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f0781c8ec90" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f0781c8ec90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0781c8d0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f0781c8d230"/>
        <function-ref name="toggle" scoped="" ref="0x7f0781c8d3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0781c8d550"/>
        <function-ref name="get" scoped="" ref="0x7f0781c8d6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0781c8d870"/>
        <function-ref name="set" scoped="" ref="0x7f0781c8da00"/>
        <function-ref name="clr" scoped="" ref="0x7f0781c8db90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA" ref="0x7f0781c5cc40" loc="7:../tinyos_ws18/tos/chips_ecs/atm1280/HplAtm128GeneralIOFastPortC.nc">
      <component-ref qname="HplAtm128GeneralIOFastPortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA" scoped="" ref="0x7f0781c5cc40"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIOPort"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0781c58020"/>
        <function-ref name="clear" scoped="" ref="0x7f0781c581b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f0781c58340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0781c584d0"/>
        <function-ref name="read" scoped="" ref="0x7f0781c58660"/>
        <function-ref name="write" scoped="" ref="0x7f0781c587f0"/>
        <function-ref name="set" scoped="" ref="0x7f0781c58980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortL" ref="0x7f0781c48870" loc="18:../tinyos_ws18/tos/chips_ecs/atm1280/HplAtm128GeneralIOFastPortC.nc">
      <component-ref qname="HplAtm128GeneralIOFastPortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortL" scoped="" ref="0x7f0781c48870"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIOPort"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0781c48bf0"/>
        <function-ref name="clear" scoped="" ref="0x7f0781c48d80"/>
        <function-ref name="toggle" scoped="" ref="0x7f0781c47020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0781c471b0"/>
        <function-ref name="read" scoped="" ref="0x7f0781c47340"/>
        <function-ref name="write" scoped="" ref="0x7f0781c474d0"/>
        <function-ref name="set" scoped="" ref="0x7f0781c47660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD" ref="0x7f0781c56e80" loc="10:../tinyos_ws18/tos/chips_ecs/atm1280/HplAtm128GeneralIOFastPortC.nc">
      <component-ref qname="HplAtm128GeneralIOFastPortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD" scoped="" ref="0x7f0781c56e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIOPort"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0781c55220"/>
        <function-ref name="clear" scoped="" ref="0x7f0781c553b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f0781c55540"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0781c556d0"/>
        <function-ref name="read" scoped="" ref="0x7f0781c55860"/>
        <function-ref name="write" scoped="" ref="0x7f0781c559f0"/>
        <function-ref name="set" scoped="" ref="0x7f0781c55b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG" ref="0x7f0781c511d0" loc="13:../tinyos_ws18/tos/chips_ecs/atm1280/HplAtm128GeneralIOFastPortC.nc">
      <component-ref qname="HplAtm128GeneralIOFastPortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG" scoped="" ref="0x7f0781c511d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIOPort"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0781c51550"/>
        <function-ref name="clear" scoped="" ref="0x7f0781c516e0"/>
        <function-ref name="toggle" scoped="" ref="0x7f0781c51870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0781c51a00"/>
        <function-ref name="read" scoped="" ref="0x7f0781c51b90"/>
        <function-ref name="write" scoped="" ref="0x7f0781c51d20"/>
        <function-ref name="set" scoped="" ref="0x7f0781c50020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortJ" ref="0x7f0781c4a550" loc="16:../tinyos_ws18/tos/chips_ecs/atm1280/HplAtm128GeneralIOFastPortC.nc">
      <component-ref qname="HplAtm128GeneralIOFastPortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortJ" scoped="" ref="0x7f0781c4a550"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIOPort"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0781c4a8d0"/>
        <function-ref name="clear" scoped="" ref="0x7f0781c4aa60"/>
        <function-ref name="toggle" scoped="" ref="0x7f0781c4abf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0781c4ad80"/>
        <function-ref name="read" scoped="" ref="0x7f0781c49020"/>
        <function-ref name="write" scoped="" ref="0x7f0781c491b0"/>
        <function-ref name="set" scoped="" ref="0x7f0781c49340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB" ref="0x7f0781c58d20" loc="8:../tinyos_ws18/tos/chips_ecs/atm1280/HplAtm128GeneralIOFastPortC.nc">
      <component-ref qname="HplAtm128GeneralIOFastPortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB" scoped="" ref="0x7f0781c58d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIOPort"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0781c570e0"/>
        <function-ref name="clear" scoped="" ref="0x7f0781c57270"/>
        <function-ref name="toggle" scoped="" ref="0x7f0781c57400"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0781c57590"/>
        <function-ref name="read" scoped="" ref="0x7f0781c57720"/>
        <function-ref name="write" scoped="" ref="0x7f0781c578b0"/>
        <function-ref name="set" scoped="" ref="0x7f0781c57a40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE" ref="0x7f0781c54020" loc="11:../tinyos_ws18/tos/chips_ecs/atm1280/HplAtm128GeneralIOFastPortC.nc">
      <component-ref qname="HplAtm128GeneralIOFastPortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE" scoped="" ref="0x7f0781c54020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIOPort"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0781c543a0"/>
        <function-ref name="clear" scoped="" ref="0x7f0781c54530"/>
        <function-ref name="toggle" scoped="" ref="0x7f0781c546c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0781c54850"/>
        <function-ref name="read" scoped="" ref="0x7f0781c549e0"/>
        <function-ref name="write" scoped="" ref="0x7f0781c54b70"/>
        <function-ref name="set" scoped="" ref="0x7f0781c54d00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortH" ref="0x7f0781c503c0" loc="15:../tinyos_ws18/tos/chips_ecs/atm1280/HplAtm128GeneralIOFastPortC.nc">
      <component-ref qname="HplAtm128GeneralIOFastPortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortH" scoped="" ref="0x7f0781c503c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIOPort"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0781c50740"/>
        <function-ref name="clear" scoped="" ref="0x7f0781c508d0"/>
        <function-ref name="toggle" scoped="" ref="0x7f0781c50a60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0781c50bf0"/>
        <function-ref name="read" scoped="" ref="0x7f0781c50d80"/>
        <function-ref name="write" scoped="" ref="0x7f0781c4a020"/>
        <function-ref name="set" scoped="" ref="0x7f0781c4a1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortK" ref="0x7f0781c496e0" loc="17:../tinyos_ws18/tos/chips_ecs/atm1280/HplAtm128GeneralIOFastPortC.nc">
      <component-ref qname="HplAtm128GeneralIOFastPortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortK" scoped="" ref="0x7f0781c496e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIOPort"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0781c49a60"/>
        <function-ref name="clear" scoped="" ref="0x7f0781c49bf0"/>
        <function-ref name="toggle" scoped="" ref="0x7f0781c49d80"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0781c48020"/>
        <function-ref name="read" scoped="" ref="0x7f0781c481b0"/>
        <function-ref name="write" scoped="" ref="0x7f0781c48340"/>
        <function-ref name="set" scoped="" ref="0x7f0781c484d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC" ref="0x7f0781c57de0" loc="9:../tinyos_ws18/tos/chips_ecs/atm1280/HplAtm128GeneralIOFastPortC.nc">
      <component-ref qname="HplAtm128GeneralIOFastPortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC" scoped="" ref="0x7f0781c57de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIOPort"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0781c56180"/>
        <function-ref name="clear" scoped="" ref="0x7f0781c56310"/>
        <function-ref name="toggle" scoped="" ref="0x7f0781c564a0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0781c56630"/>
        <function-ref name="read" scoped="" ref="0x7f0781c567c0"/>
        <function-ref name="write" scoped="" ref="0x7f0781c56950"/>
        <function-ref name="set" scoped="" ref="0x7f0781c56ae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF" ref="0x7f0781c53100" loc="12:../tinyos_ws18/tos/chips_ecs/atm1280/HplAtm128GeneralIOFastPortC.nc">
      <component-ref qname="HplAtm128GeneralIOFastPortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF" scoped="" ref="0x7f0781c53100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIOPort"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0781c53480"/>
        <function-ref name="clear" scoped="" ref="0x7f0781c53610"/>
        <function-ref name="toggle" scoped="" ref="0x7f0781c537a0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0781c53930"/>
        <function-ref name="read" scoped="" ref="0x7f0781c53ac0"/>
        <function-ref name="write" scoped="" ref="0x7f0781c53c50"/>
        <function-ref name="set" scoped="" ref="0x7f0781c53de0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIOPort" ref="0x7f0781c44c90" loc="7:../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
      <component-ref qname="HplAtm128GeneralIOFastPortC.PortAP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="GeneralIOPort" scoped="" ref="0x7f0781c44c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIOPort"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0781c430a0"/>
        <function-ref name="clear" scoped="" ref="0x7f0781c43230"/>
        <function-ref name="toggle" scoped="" ref="0x7f0781c433c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0781c43550"/>
        <function-ref name="read" scoped="" ref="0x7f0781c436e0"/>
        <function-ref name="write" scoped="" ref="0x7f0781c43870"/>
        <function-ref name="set" scoped="" ref="0x7f0781c43a00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIOPort" ref="0x7f0781c2a390" loc="7:../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
      <component-ref qname="HplAtm128GeneralIOFastPortC.PortBP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="GeneralIOPort" scoped="" ref="0x7f0781c2a390"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIOPort"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0781c2a710"/>
        <function-ref name="clear" scoped="" ref="0x7f0781c2a8a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f0781c2aa30"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0781c2abc0"/>
        <function-ref name="read" scoped="" ref="0x7f0781c2ad50"/>
        <function-ref name="write" scoped="" ref="0x7f0781c29020"/>
        <function-ref name="set" scoped="" ref="0x7f0781c291b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIOPort" ref="0x7f0781c26910" loc="7:../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
      <component-ref qname="HplAtm128GeneralIOFastPortC.PortCP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="GeneralIOPort" scoped="" ref="0x7f0781c26910"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIOPort"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0781c26c90"/>
        <function-ref name="clear" scoped="" ref="0x7f0781c26e20"/>
        <function-ref name="toggle" scoped="" ref="0x7f0781c25020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0781c251b0"/>
        <function-ref name="read" scoped="" ref="0x7f0781c25340"/>
        <function-ref name="write" scoped="" ref="0x7f0781c254d0"/>
        <function-ref name="set" scoped="" ref="0x7f0781c25660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIOPort" ref="0x7f0781c21cd0" loc="7:../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
      <component-ref qname="HplAtm128GeneralIOFastPortC.PortDP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="GeneralIOPort" scoped="" ref="0x7f0781c21cd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIOPort"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0781c200a0"/>
        <function-ref name="clear" scoped="" ref="0x7f0781c20230"/>
        <function-ref name="toggle" scoped="" ref="0x7f0781c203c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0781c20550"/>
        <function-ref name="read" scoped="" ref="0x7f0781c206e0"/>
        <function-ref name="write" scoped="" ref="0x7f0781c20870"/>
        <function-ref name="set" scoped="" ref="0x7f0781c20a00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIOPort" ref="0x7f0781c1c390" loc="7:../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
      <component-ref qname="HplAtm128GeneralIOFastPortC.PortEP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="GeneralIOPort" scoped="" ref="0x7f0781c1c390"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIOPort"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0781c1c710"/>
        <function-ref name="clear" scoped="" ref="0x7f0781c1c8a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f0781c1ca30"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0781c1cbc0"/>
        <function-ref name="read" scoped="" ref="0x7f0781c1cd50"/>
        <function-ref name="write" scoped="" ref="0x7f0781c1a020"/>
        <function-ref name="set" scoped="" ref="0x7f0781c1a1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIOPort" ref="0x7f0781c17910" loc="7:../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
      <component-ref qname="HplAtm128GeneralIOFastPortC.PortFP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="GeneralIOPort" scoped="" ref="0x7f0781c17910"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIOPort"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0781c17c90"/>
        <function-ref name="clear" scoped="" ref="0x7f0781c17e20"/>
        <function-ref name="toggle" scoped="" ref="0x7f0781c16020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0781c161b0"/>
        <function-ref name="read" scoped="" ref="0x7f0781c16340"/>
        <function-ref name="write" scoped="" ref="0x7f0781c164d0"/>
        <function-ref name="set" scoped="" ref="0x7f0781c16660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIOPort" ref="0x7f0781c12cd0" loc="7:../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
      <component-ref qname="HplAtm128GeneralIOFastPortC.PortGP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="GeneralIOPort" scoped="" ref="0x7f0781c12cd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIOPort"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0781c110a0"/>
        <function-ref name="clear" scoped="" ref="0x7f0781c11230"/>
        <function-ref name="toggle" scoped="" ref="0x7f0781c113c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0781c11550"/>
        <function-ref name="read" scoped="" ref="0x7f0781c116e0"/>
        <function-ref name="write" scoped="" ref="0x7f0781c11870"/>
        <function-ref name="set" scoped="" ref="0x7f0781c11a00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIOPort" ref="0x7f0781c0ec90" loc="7:../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
      <component-ref qname="HplAtm128GeneralIOFastPortC.PortHP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="GeneralIOPort" scoped="" ref="0x7f0781c0ec90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIOPort"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0781c0c0a0"/>
        <function-ref name="clear" scoped="" ref="0x7f0781c0c230"/>
        <function-ref name="toggle" scoped="" ref="0x7f0781c0c3c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0781c0c550"/>
        <function-ref name="read" scoped="" ref="0x7f0781c0c6e0"/>
        <function-ref name="write" scoped="" ref="0x7f0781c0c870"/>
        <function-ref name="set" scoped="" ref="0x7f0781c0ca00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIOPort" ref="0x7f0781c09c90" loc="7:../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
      <component-ref qname="HplAtm128GeneralIOFastPortC.PortJP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="GeneralIOPort" scoped="" ref="0x7f0781c09c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIOPort"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0781c080a0"/>
        <function-ref name="clear" scoped="" ref="0x7f0781c08230"/>
        <function-ref name="toggle" scoped="" ref="0x7f0781c083c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0781c08550"/>
        <function-ref name="read" scoped="" ref="0x7f0781c086e0"/>
        <function-ref name="write" scoped="" ref="0x7f0781c08870"/>
        <function-ref name="set" scoped="" ref="0x7f0781c08a00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIOPort" ref="0x7f0781c04c90" loc="7:../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
      <component-ref qname="HplAtm128GeneralIOFastPortC.PortKP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="GeneralIOPort" scoped="" ref="0x7f0781c04c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIOPort"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0781c030a0"/>
        <function-ref name="clear" scoped="" ref="0x7f0781c03230"/>
        <function-ref name="toggle" scoped="" ref="0x7f0781c033c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0781c03550"/>
        <function-ref name="read" scoped="" ref="0x7f0781c036e0"/>
        <function-ref name="write" scoped="" ref="0x7f0781c03870"/>
        <function-ref name="set" scoped="" ref="0x7f0781c03a00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIOPort" ref="0x7f0781c00c90" loc="7:../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
      <component-ref qname="HplAtm128GeneralIOFastPortC.PortLP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="GeneralIOPort" scoped="" ref="0x7f0781c00c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIOPort"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0781bff0a0"/>
        <function-ref name="clear" scoped="" ref="0x7f0781bff230"/>
        <function-ref name="toggle" scoped="" ref="0x7f0781bff3c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0781bff550"/>
        <function-ref name="read" scoped="" ref="0x7f0781bff6e0"/>
        <function-ref name="write" scoped="" ref="0x7f0781bff870"/>
        <function-ref name="set" scoped="" ref="0x7f0781bffa00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BusyWait" ref="0x7f0781bf32e0" loc="40:../tinyos_ws18/tos/platforms/bigAVR6_1280/BusyWaitMicroC.nc">
      <component-ref qname="BusyWaitMicroC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BusyWait" scoped="" ref="0x7f0781bf32e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f07825825c0"/>
            <typename><typedef-ref name="TMicro" ref="0x7f0782582930"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f0782f56610"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x7f0781bf2110"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f0781be6330" loc="9:../tinyos_ws18/tos/chips_ecs/enc28j60/Enc28j60C.nc">
      <component-ref qname="Enc28j60C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7f0781be6330"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f0781be66b0"/>
        <function-ref name="stopDone" scoped="" ref="0x7f0781be6840"/>
        <function-ref name="start" scoped="" ref="0x7f0781be69d0"/>
        <function-ref name="stop" scoped="" ref="0x7f0781be6b60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Enc28j60Control" ref="0x7f0781bb1ba0" loc="10:../tinyos_ws18/tos/chips_ecs/enc28j60/Enc28j60C.nc">
      <component-ref qname="Enc28j60C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Enc28j60Control" scoped="" ref="0x7f0781bb1ba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Enc28j60Control"/>
      </instance>
      <interface-functions>
        <function-ref name="linkChange" scoped="" ref="0x7f0781be4020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Mac" ref="0x7f0781ebf6f0" loc="8:../tinyos_ws18/tos/chips_ecs/enc28j60/Enc28j60C.nc">
      <component-ref qname="Enc28j60C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Mac" scoped="" ref="0x7f0781ebf6f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Mac"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f0781ebfa70"/>
        <function-ref name="received" scoped="" ref="0x7f0781ebfc00"/>
        <function-ref name="sendDone" scoped="" ref="0x7f0781ebfd90"/>
        <function-ref name="getMac" scoped="" ref="0x7f0781be6020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="intPin" ref="0x7f0781badcf0" loc="13:../tinyos_ws18/tos/chips_ecs/enc28j60/Enc28j60P.nc">
      <component-ref qname="Enc28j60P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="intPin" scoped="" ref="0x7f0781badcf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0781bac0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f0781bac230"/>
        <function-ref name="toggle" scoped="" ref="0x7f0781bac3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0781bac550"/>
        <function-ref name="get" scoped="" ref="0x7f0781bac6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0781bac870"/>
        <function-ref name="set" scoped="" ref="0x7f0781baca00"/>
        <function-ref name="clr" scoped="" ref="0x7f0781bacb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f0781ba9cf0" loc="17:../tinyos_ws18/tos/chips_ecs/enc28j60/Enc28j60P.nc">
      <component-ref qname="Enc28j60P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7f0781ba9cf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f0781ba40a0"/>
        <function-ref name="stopDone" scoped="" ref="0x7f0781ba4230"/>
        <function-ref name="start" scoped="" ref="0x7f0781ba43c0"/>
        <function-ref name="stop" scoped="" ref="0x7f0781ba4550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Enc28j60Control" ref="0x7f0781ba4880" loc="18:../tinyos_ws18/tos/chips_ecs/enc28j60/Enc28j60P.nc">
      <component-ref qname="Enc28j60P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Enc28j60Control" scoped="" ref="0x7f0781ba4880"/></type-interface>
      <instance>
        <interfacedef-ref qname="Enc28j60Control"/>
      </instance>
      <interface-functions>
        <function-ref name="linkChange" scoped="" ref="0x7f0781ba4c00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiByte" ref="0x7f0781ba3430" loc="15:../tinyos_ws18/tos/chips_ecs/enc28j60/Enc28j60P.nc">
      <component-ref qname="Enc28j60P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiByte" scoped="" ref="0x7f0781ba3430"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7f0781ba37b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Mac" ref="0x7f0781be4b00" loc="10:../tinyos_ws18/tos/chips_ecs/enc28j60/Enc28j60P.nc">
      <component-ref qname="Enc28j60P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Mac" scoped="" ref="0x7f0781be4b00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Mac"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f0781be4e80"/>
        <function-ref name="received" scoped="" ref="0x7f0781baf030"/>
        <function-ref name="sendDone" scoped="" ref="0x7f0781baf1c0"/>
        <function-ref name="getMac" scoped="" ref="0x7f0781baf350"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ssETH" ref="0x7f0781baf6c0" loc="11:../tinyos_ws18/tos/chips_ecs/enc28j60/Enc28j60P.nc">
      <component-ref qname="Enc28j60P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ssETH" scoped="" ref="0x7f0781baf6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0781bafa40"/>
        <function-ref name="isInput" scoped="" ref="0x7f0781bafbd0"/>
        <function-ref name="toggle" scoped="" ref="0x7f0781bafd60"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0781bae020"/>
        <function-ref name="get" scoped="" ref="0x7f0781bae1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0781bae340"/>
        <function-ref name="set" scoped="" ref="0x7f0781bae4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f0781bae660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="rstETH" ref="0x7f0781bae9d0" loc="12:../tinyos_ws18/tos/chips_ecs/enc28j60/Enc28j60P.nc">
      <component-ref qname="Enc28j60P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="rstETH" scoped="" ref="0x7f0781bae9d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0781baed50"/>
        <function-ref name="isInput" scoped="" ref="0x7f0781bad020"/>
        <function-ref name="toggle" scoped="" ref="0x7f0781bad1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0781bad340"/>
        <function-ref name="get" scoped="" ref="0x7f0781bad4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0781bad660"/>
        <function-ref name="set" scoped="" ref="0x7f0781bad7f0"/>
        <function-ref name="clr" scoped="" ref="0x7f0781bad980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="intETH" ref="0x7f0781ba5620" loc="14:../tinyos_ws18/tos/chips_ecs/enc28j60/Enc28j60P.nc">
      <component-ref qname="Enc28j60P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="intETH" scoped="" ref="0x7f0781ba5620"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f0781ba59a0"/>
        <function-ref name="fired" scoped="" ref="0x7f0781ba5b30"/>
        <function-ref name="disable" scoped="" ref="0x7f0781ba5cc0"/>
        <function-ref name="edge" scoped="" ref="0x7f0781ba5e50"/>
        <function-ref name="enable" scoped="" ref="0x7f0781baa020"/>
        <function-ref name="getValue" scoped="" ref="0x7f0781baa1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="checkInterruptflag" ref="0x7f0781b6d5d0" loc="179:../tinyos_ws18/tos/chips_ecs/enc28j60/Enc28j60P.nc">
      <component-ref qname="Enc28j60P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="checkInterruptflag" scoped="" ref="0x7f0781b6d5d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f0781b6d950"/>
        <function-ref name="runTask" scoped="" ref="0x7f0781b6dae0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x7f0781ba9020" loc="16:../tinyos_ws18/tos/chips_ecs/enc28j60/Enc28j60P.nc">
      <component-ref qname="Enc28j60P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f0781ba9020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f0781ba93a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f0781ba9530"/>
        <function-ref name="request" scoped="" ref="0x7f0781ba96c0"/>
        <function-ref name="granted" scoped="" ref="0x7f0781ba9850"/>
        <function-ref name="isOwner" scoped="" ref="0x7f0781ba99e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x7f0781b2ce60" loc="87:../tinyos_ws18/tos/chips_ecs/atm1280/spi/Atm1280SpiC.nc">
      <component-ref qname="Atm1280SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiPacket" scoped="" ref="0x7f0781b2ce60"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f0781b33210"/>
        <function-ref name="sendDone" scoped="" ref="0x7f0781b333a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x7f0781b38b00" loc="85:../tinyos_ws18/tos/chips_ecs/atm1280/spi/Atm1280SpiC.nc">
      <component-ref qname="Atm1280SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiByte" scoped="" ref="0x7f0781b38b00"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7f0781b38e80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f0781b3e300" loc="83:../tinyos_ws18/tos/chips_ecs/atm1280/spi/Atm1280SpiC.nc">
      <component-ref qname="Atm1280SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f0781b3e300"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f0781b3e680"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x7f0781b34400" loc="86:../tinyos_ws18/tos/chips_ecs/atm1280/spi/Atm1280SpiC.nc">
      <component-ref qname="Atm1280SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FastSpiByte" scoped="" ref="0x7f0781b34400"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x7f0781b34780"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x7f0781b34910"/>
        <function-ref name="splitRead" scoped="" ref="0x7f0781b34aa0"/>
        <function-ref name="write" scoped="" ref="0x7f0781b34c30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f0781b33bd0" loc="88:../tinyos_ws18/tos/chips_ecs/atm1280/spi/Atm1280SpiC.nc">
      <component-ref qname="Atm1280SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f0781b33bd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f0781b32020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f0781b321b0"/>
        <function-ref name="request" scoped="" ref="0x7f0781b32340"/>
        <function-ref name="granted" scoped="" ref="0x7f0781b324d0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f0781b32660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiControl" ref="0x7f0781b384a0" loc="84:../tinyos_ws18/tos/chips_ecs/atm1280/spi/Atm1280SpiC.nc">
      <component-ref qname="Atm1280SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiControl" scoped="" ref="0x7f0781b384a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setClock" scoped="" ref="0x7f0781b38820"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerState" ref="0x7f0781b07510" loc="105:../tinyos_ws18/tos/chips_ecs/atm1280/spi/Atm1280SpiP.nc">
      <component-ref qname="Atm1280SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x7f0781b07510"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x7f0781b07890"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="zeroTask" ref="0x7f0781ae2de0" loc="277:../tinyos_ws18/tos/chips_ecs/atm1280/spi/Atm1280SpiP.nc">
      <component-ref qname="Atm1280SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="zeroTask" scoped="" ref="0x7f0781ae2de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f0781ae1180"/>
        <function-ref name="runTask" scoped="" ref="0x7f0781ae1310"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x7f0781b285f0" loc="98:../tinyos_ws18/tos/chips_ecs/atm1280/spi/Atm1280SpiP.nc">
      <component-ref qname="Atm1280SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiPacket" scoped="" ref="0x7f0781b285f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f0781b28970"/>
        <function-ref name="sendDone" scoped="" ref="0x7f0781b28b00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceArbiter" ref="0x7f0781b09740" loc="103:../tinyos_ws18/tos/chips_ecs/atm1280/spi/Atm1280SpiP.nc">
      <component-ref qname="Atm1280SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceArbiter" scoped="" ref="0x7f0781b09740"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f0781b09ac0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f0781b09c50"/>
        <function-ref name="request" scoped="" ref="0x7f0781b09de0"/>
        <function-ref name="granted" scoped="" ref="0x7f0781b08020"/>
        <function-ref name="isOwner" scoped="" ref="0x7f0781b081b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x7f0781b29340" loc="96:../tinyos_ws18/tos/chips_ecs/atm1280/spi/Atm1280SpiP.nc">
      <component-ref qname="Atm1280SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiByte" scoped="" ref="0x7f0781b29340"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7f0781b296c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f0781b2a670" loc="94:../tinyos_ws18/tos/chips_ecs/atm1280/spi/Atm1280SpiP.nc">
      <component-ref qname="Atm1280SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f0781b2a670"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f0781b2a9f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Spi" ref="0x7f0781b0a340" loc="102:../tinyos_ws18/tos/chips_ecs/atm1280/spi/Atm1280SpiP.nc">
      <component-ref qname="Atm1280SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Spi" scoped="" ref="0x7f0781b0a340"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Spi"/>
      </instance>
      <interface-functions>
        <function-ref name="initSlave" scoped="" ref="0x7f0781b0a6c0"/>
        <function-ref name="sleep" scoped="" ref="0x7f0781b23ca0"/>
        <function-ref name="isSpiEnabled" scoped="" ref="0x7f0781b0a9e0"/>
        <function-ref name="dataReady" scoped="" ref="0x7f0781b23e30"/>
        <function-ref name="initMaster" scoped="" ref="0x7f0781b0ad00"/>
        <function-ref name="setMasterBit" scoped="" ref="0x7f0781b24020"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x7f0781b241b0"/>
        <function-ref name="read" scoped="" ref="0x7f0781b24340"/>
        <function-ref name="setMasterDoubleSpeed" scoped="" ref="0x7f0781b244d0"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x7f0781b24660"/>
        <function-ref name="setClock" scoped="" ref="0x7f0781b247f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f0781b24980"/>
        <function-ref name="setClockPolarity" scoped="" ref="0x7f0781b24b10"/>
        <function-ref name="isMasterDoubleSpeed" scoped="" ref="0x7f0781b24da0"/>
        <function-ref name="setDataOrder" scoped="" ref="0x7f0781b23020"/>
        <function-ref name="write" scoped="" ref="0x7f0781b231b0"/>
        <function-ref name="enableSpi" scoped="" ref="0x7f0781b23340"/>
        <function-ref name="isMasterBitSet" scoped="" ref="0x7f0781b234d0"/>
        <function-ref name="getClockPhase" scoped="" ref="0x7f0781b23660"/>
        <function-ref name="getClock" scoped="" ref="0x7f0781b237f0"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x7f0781b23980"/>
        <function-ref name="getClockPolarity" scoped="" ref="0x7f0781b0a850"/>
        <function-ref name="setClockPhase" scoped="" ref="0x7f0781b0ab70"/>
        <function-ref name="isOrderLsbFirst" scoped="" ref="0x7f0781b23b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x7f0781b29980" loc="97:../tinyos_ws18/tos/chips_ecs/atm1280/spi/Atm1280SpiP.nc">
      <component-ref qname="Atm1280SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FastSpiByte" scoped="" ref="0x7f0781b29980"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x7f0781b29d00"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x7f0781b28020"/>
        <function-ref name="splitRead" scoped="" ref="0x7f0781b281b0"/>
        <function-ref name="write" scoped="" ref="0x7f0781b28340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f0781b26320" loc="99:../tinyos_ws18/tos/chips_ecs/atm1280/spi/Atm1280SpiP.nc">
      <component-ref qname="Atm1280SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f0781b26320"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f0781b266a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f0781b26830"/>
        <function-ref name="request" scoped="" ref="0x7f0781b269c0"/>
        <function-ref name="granted" scoped="" ref="0x7f0781b26b50"/>
        <function-ref name="isOwner" scoped="" ref="0x7f0781b26ce0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7f0781b05cd0" loc="104:../tinyos_ws18/tos/chips_ecs/atm1280/spi/Atm1280SpiP.nc">
      <component-ref qname="Atm1280SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f0781b05cd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f0781b070a0"/>
        <function-ref name="userId" scoped="" ref="0x7f0781b07230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiControl" ref="0x7f0781b2acb0" loc="95:../tinyos_ws18/tos/chips_ecs/atm1280/spi/Atm1280SpiP.nc">
      <component-ref qname="Atm1280SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiControl" scoped="" ref="0x7f0781b2acb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setClock" scoped="" ref="0x7f0781b290a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiBus" ref="0x7f0781ab5100" loc="76:../tinyos_ws18/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <component-ref qname="HplAtm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiBus" scoped="" ref="0x7f0781ab5100"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Spi"/>
      </instance>
      <interface-functions>
        <function-ref name="initSlave" scoped="" ref="0x7f0781ab5480"/>
        <function-ref name="sleep" scoped="" ref="0x7f0781ab3980"/>
        <function-ref name="isSpiEnabled" scoped="" ref="0x7f0781ab57a0"/>
        <function-ref name="dataReady" scoped="" ref="0x7f0781ab3b10"/>
        <function-ref name="initMaster" scoped="" ref="0x7f0781ab5ac0"/>
        <function-ref name="setMasterBit" scoped="" ref="0x7f0781ab5c50"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x7f0781ab5de0"/>
        <function-ref name="read" scoped="" ref="0x7f0781ab4020"/>
        <function-ref name="setMasterDoubleSpeed" scoped="" ref="0x7f0781ab41b0"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x7f0781ab4340"/>
        <function-ref name="setClock" scoped="" ref="0x7f0781ab44d0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f0781ab4660"/>
        <function-ref name="setClockPolarity" scoped="" ref="0x7f0781ab47f0"/>
        <function-ref name="isMasterDoubleSpeed" scoped="" ref="0x7f0781ab4a80"/>
        <function-ref name="setDataOrder" scoped="" ref="0x7f0781ab4c10"/>
        <function-ref name="write" scoped="" ref="0x7f0781ab4da0"/>
        <function-ref name="enableSpi" scoped="" ref="0x7f0781ab3020"/>
        <function-ref name="isMasterBitSet" scoped="" ref="0x7f0781ab31b0"/>
        <function-ref name="getClockPhase" scoped="" ref="0x7f0781ab3340"/>
        <function-ref name="getClock" scoped="" ref="0x7f0781ab34d0"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x7f0781ab3660"/>
        <function-ref name="getClockPolarity" scoped="" ref="0x7f0781ab5610"/>
        <function-ref name="setClockPhase" scoped="" ref="0x7f0781ab5930"/>
        <function-ref name="isOrderLsbFirst" scoped="" ref="0x7f0781ab37f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MISO" ref="0x7f0781aa77f0" loc="81:../tinyos_ws18/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MISO" scoped="" ref="0x7f0781aa77f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0781aa7b70"/>
        <function-ref name="isInput" scoped="" ref="0x7f0781aa7d00"/>
        <function-ref name="toggle" scoped="" ref="0x7f0781aa6020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0781aa61b0"/>
        <function-ref name="get" scoped="" ref="0x7f0781aa6340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0781aa64d0"/>
        <function-ref name="set" scoped="" ref="0x7f0781aa6660"/>
        <function-ref name="clr" scoped="" ref="0x7f0781aa67f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SCK" ref="0x7f0781aaa330" loc="79:../tinyos_ws18/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SCK" scoped="" ref="0x7f0781aaa330"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0781aaa6b0"/>
        <function-ref name="isInput" scoped="" ref="0x7f0781aaa840"/>
        <function-ref name="toggle" scoped="" ref="0x7f0781aaa9d0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0781aaab60"/>
        <function-ref name="get" scoped="" ref="0x7f0781aaacf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0781aaae80"/>
        <function-ref name="set" scoped="" ref="0x7f0781aa8030"/>
        <function-ref name="clr" scoped="" ref="0x7f0781aa81c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SS" ref="0x7f0781aab020" loc="78:../tinyos_ws18/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SS" scoped="" ref="0x7f0781aab020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0781aab3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f0781aab530"/>
        <function-ref name="toggle" scoped="" ref="0x7f0781aab6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0781aab850"/>
        <function-ref name="get" scoped="" ref="0x7f0781aab9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0781aabb70"/>
        <function-ref name="set" scoped="" ref="0x7f0781aabd00"/>
        <function-ref name="clr" scoped="" ref="0x7f0781aaa020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0x7f0781aa9770" loc="75:../tinyos_ws18/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x7f0781aa9770"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f0781aa9af0"/>
        <function-ref name="stop" scoped="" ref="0x7f0781aa9c80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Mcu" ref="0x7f0781aa6b30" loc="82:../tinyos_ws18/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Mcu" scoped="" ref="0x7f0781aa6b30"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x7f0781aa5020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SPI" ref="0x7f0781aaf060" loc="74:../tinyos_ws18/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SPI" scoped="" ref="0x7f0781aaf060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Spi"/>
      </instance>
      <interface-functions>
        <function-ref name="initSlave" scoped="" ref="0x7f0781aaf3e0"/>
        <function-ref name="sleep" scoped="" ref="0x7f0781aad980"/>
        <function-ref name="isSpiEnabled" scoped="" ref="0x7f0781aaf700"/>
        <function-ref name="dataReady" scoped="" ref="0x7f0781aadb10"/>
        <function-ref name="initMaster" scoped="" ref="0x7f0781aafa20"/>
        <function-ref name="setMasterBit" scoped="" ref="0x7f0781aafbb0"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x7f0781aafd40"/>
        <function-ref name="read" scoped="" ref="0x7f0781aae020"/>
        <function-ref name="setMasterDoubleSpeed" scoped="" ref="0x7f0781aae1b0"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x7f0781aae340"/>
        <function-ref name="setClock" scoped="" ref="0x7f0781aae4d0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f0781aae660"/>
        <function-ref name="setClockPolarity" scoped="" ref="0x7f0781aae7f0"/>
        <function-ref name="isMasterDoubleSpeed" scoped="" ref="0x7f0781aaea80"/>
        <function-ref name="setDataOrder" scoped="" ref="0x7f0781aaec10"/>
        <function-ref name="write" scoped="" ref="0x7f0781aaeda0"/>
        <function-ref name="enableSpi" scoped="" ref="0x7f0781aad020"/>
        <function-ref name="isMasterBitSet" scoped="" ref="0x7f0781aad1b0"/>
        <function-ref name="getClockPhase" scoped="" ref="0x7f0781aad340"/>
        <function-ref name="getClock" scoped="" ref="0x7f0781aad4d0"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x7f0781aad660"/>
        <function-ref name="getClockPolarity" scoped="" ref="0x7f0781aaf570"/>
        <function-ref name="setClockPhase" scoped="" ref="0x7f0781aaf890"/>
        <function-ref name="isOrderLsbFirst" scoped="" ref="0x7f0781aad7f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MOSI" ref="0x7f0781aa84e0" loc="80:../tinyos_ws18/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MOSI" scoped="" ref="0x7f0781aa84e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0781aa8860"/>
        <function-ref name="isInput" scoped="" ref="0x7f0781aa89f0"/>
        <function-ref name="toggle" scoped="" ref="0x7f0781aa8b80"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0781aa8d10"/>
        <function-ref name="get" scoped="" ref="0x7f0781aa7020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0781aa71b0"/>
        <function-ref name="set" scoped="" ref="0x7f0781aa7340"/>
        <function-ref name="clr" scoped="" ref="0x7f0781aa74d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f07819fb3a0" loc="86:../tinyos_ws18/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm1280SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x7f07819fb3a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f07819fb740"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f07819fb8d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f07819fa570" loc="89:../tinyos_ws18/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm1280SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f07819fa570"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f07819fa910"/>
        <function-ref name="configure" scoped="" ref="0x7f07819faaa0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f07819fd520" loc="85:../tinyos_ws18/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm1280SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f07819fd520"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f07819fd8c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f07819fda50"/>
        <function-ref name="request" scoped="" ref="0x7f07819fdbe0"/>
        <function-ref name="granted" scoped="" ref="0x7f07819fdd70"/>
        <function-ref name="isOwner" scoped="" ref="0x7f07819fb020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f07819fbb20" loc="87:../tinyos_ws18/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm1280SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f07819fbb20"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f07819fa020"/>
        <function-ref name="userId" scoped="" ref="0x7f07819fa1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f0780d214c0" loc="44:../tinyos_ws18/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Atm1280SpiC.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f0780d214c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f0780d21840"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x7f0780d21ad0" loc="45:../tinyos_ws18/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Atm1280SpiC.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FcfsQueue" scoped="" ref="0x7f0780d21ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f0780d21e50"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f0780d20020"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f0780d201b0"/>
        <function-ref name="dequeue" scoped="" ref="0x7f0780d20340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f0780d1e850" loc="52:../tinyos_ws18/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm1280SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x7f0780d1e850"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f0780d1ebf0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f0780d1ed80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f0780d1d910" loc="56:../tinyos_ws18/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm1280SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f0780d1d910"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f0780d1dcb0"/>
        <function-ref name="configure" scoped="" ref="0x7f0780d1de40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7f0780d1b120" loc="57:../tinyos_ws18/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm1280SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x7f0780d1b120"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f0780d1b4a0"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f0780d1b630"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f0780d1b7c0"/>
        <function-ref name="dequeue" scoped="" ref="0x7f0780d1b950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f0780d1f9d0" loc="51:../tinyos_ws18/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm1280SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f0780d1f9d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f0780d1fd70"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f0780d1e020"/>
        <function-ref name="request" scoped="" ref="0x7f0780d1e1b0"/>
        <function-ref name="granted" scoped="" ref="0x7f0780d1e340"/>
        <function-ref name="isOwner" scoped="" ref="0x7f0780d1e4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f0780d1d020" loc="53:../tinyos_ws18/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm1280SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f0780d1d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f0780d1d3a0"/>
        <function-ref name="userId" scoped="" ref="0x7f0780d1d530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x7f0780d1bc20" loc="68:../tinyos_ws18/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm1280SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x7f0780d1bc20"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f0780d1a020"/>
        <function-ref name="runTask" scoped="" ref="0x7f0780d1a1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int6" ref="0x7f07819ebb70" loc="51:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int6" scoped="" ref="0x7f07819ebb70"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f07819ea020"/>
        <function-ref name="fired" scoped="" ref="0x7f07819ea1b0"/>
        <function-ref name="disable" scoped="" ref="0x7f07819ea340"/>
        <function-ref name="edge" scoped="" ref="0x7f07819ea4d0"/>
        <function-ref name="enable" scoped="" ref="0x7f07819ea660"/>
        <function-ref name="getValue" scoped="" ref="0x7f07819ea7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int1" ref="0x7f07819f0b70" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int1" scoped="" ref="0x7f07819f0b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f07819ef020"/>
        <function-ref name="fired" scoped="" ref="0x7f07819ef1b0"/>
        <function-ref name="disable" scoped="" ref="0x7f07819ef340"/>
        <function-ref name="edge" scoped="" ref="0x7f07819ef4d0"/>
        <function-ref name="enable" scoped="" ref="0x7f07819ef660"/>
        <function-ref name="getValue" scoped="" ref="0x7f07819ef7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int4" ref="0x7f07819edb70" loc="49:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int4" scoped="" ref="0x7f07819edb70"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f07819ec020"/>
        <function-ref name="fired" scoped="" ref="0x7f07819ec1b0"/>
        <function-ref name="disable" scoped="" ref="0x7f07819ec340"/>
        <function-ref name="edge" scoped="" ref="0x7f07819ec4d0"/>
        <function-ref name="enable" scoped="" ref="0x7f07819ec660"/>
        <function-ref name="getValue" scoped="" ref="0x7f07819ec7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int7" ref="0x7f07819eab70" loc="52:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int7" scoped="" ref="0x7f07819eab70"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f07819e9020"/>
        <function-ref name="fired" scoped="" ref="0x7f07819e91b0"/>
        <function-ref name="disable" scoped="" ref="0x7f07819e9340"/>
        <function-ref name="edge" scoped="" ref="0x7f07819e94d0"/>
        <function-ref name="enable" scoped="" ref="0x7f07819e9660"/>
        <function-ref name="getValue" scoped="" ref="0x7f07819e97f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int2" ref="0x7f07819efb70" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int2" scoped="" ref="0x7f07819efb70"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f07819ee020"/>
        <function-ref name="fired" scoped="" ref="0x7f07819ee1b0"/>
        <function-ref name="disable" scoped="" ref="0x7f07819ee340"/>
        <function-ref name="edge" scoped="" ref="0x7f07819ee4d0"/>
        <function-ref name="enable" scoped="" ref="0x7f07819ee660"/>
        <function-ref name="getValue" scoped="" ref="0x7f07819ee7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int5" ref="0x7f07819ecb70" loc="50:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int5" scoped="" ref="0x7f07819ecb70"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f07819eb020"/>
        <function-ref name="fired" scoped="" ref="0x7f07819eb1b0"/>
        <function-ref name="disable" scoped="" ref="0x7f07819eb340"/>
        <function-ref name="edge" scoped="" ref="0x7f07819eb4d0"/>
        <function-ref name="enable" scoped="" ref="0x7f07819eb660"/>
        <function-ref name="getValue" scoped="" ref="0x7f07819eb7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int0" ref="0x7f07819f3b20" loc="45:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int0" scoped="" ref="0x7f07819f3b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f07819f0020"/>
        <function-ref name="fired" scoped="" ref="0x7f07819f01b0"/>
        <function-ref name="disable" scoped="" ref="0x7f07819f0340"/>
        <function-ref name="edge" scoped="" ref="0x7f07819f04d0"/>
        <function-ref name="enable" scoped="" ref="0x7f07819f0660"/>
        <function-ref name="getValue" scoped="" ref="0x7f07819f07f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int3" ref="0x7f07819eeb70" loc="48:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int3" scoped="" ref="0x7f07819eeb70"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f07819ed020"/>
        <function-ref name="fired" scoped="" ref="0x7f07819ed1b0"/>
        <function-ref name="disable" scoped="" ref="0x7f07819ed340"/>
        <function-ref name="edge" scoped="" ref="0x7f07819ed4d0"/>
        <function-ref name="enable" scoped="" ref="0x7f07819ed660"/>
        <function-ref name="getValue" scoped="" ref="0x7f07819ed7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig6" ref="0x7f07819e1830" loc="49:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig6" scoped="" ref="0x7f07819e1830"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f07819e1bb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig1" ref="0x7f07819e5230" loc="44:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig1" scoped="" ref="0x7f07819e5230"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f07819e55b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig4" ref="0x7f07819e48d0" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig4" scoped="" ref="0x7f07819e48d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f07819e4c50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig7" ref="0x7f07819e0020" loc="50:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig7" scoped="" ref="0x7f07819e0020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f07819e03a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig2" ref="0x7f07819e59b0" loc="45:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig2" scoped="" ref="0x7f07819e59b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f07819e5d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig5" ref="0x7f07819e10b0" loc="48:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig5" scoped="" ref="0x7f07819e10b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f07819e1430"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig0" ref="0x7f07819e3a00" loc="43:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig0" scoped="" ref="0x7f07819e3a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f07819e3d80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig3" ref="0x7f07819e4150" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig3" scoped="" ref="0x7f07819e4150"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f07819e44d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x7f07819c4060" loc="44:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x7f07819c4060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f07819c43e0"/>
        <function-ref name="fired" scoped="" ref="0x7f07819c4570"/>
        <function-ref name="disable" scoped="" ref="0x7f07819c4700"/>
        <function-ref name="edge" scoped="" ref="0x7f07819c4890"/>
        <function-ref name="enable" scoped="" ref="0x7f07819c4a20"/>
        <function-ref name="getValue" scoped="" ref="0x7f07819c4bb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x7f07819c4e80" loc="45:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x7f07819c4e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f07819af220"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x7f07819adda0" loc="44:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x7f07819adda0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f07819ab180"/>
        <function-ref name="fired" scoped="" ref="0x7f07819ab310"/>
        <function-ref name="disable" scoped="" ref="0x7f07819ab4a0"/>
        <function-ref name="edge" scoped="" ref="0x7f07819ab630"/>
        <function-ref name="enable" scoped="" ref="0x7f07819ab7c0"/>
        <function-ref name="getValue" scoped="" ref="0x7f07819ab950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x7f07819abc20" loc="45:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x7f07819abc20"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f07819aa020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x7f07819a8c90" loc="44:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x7f07819a8c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f07819a70a0"/>
        <function-ref name="fired" scoped="" ref="0x7f07819a7230"/>
        <function-ref name="disable" scoped="" ref="0x7f07819a73c0"/>
        <function-ref name="edge" scoped="" ref="0x7f07819a7550"/>
        <function-ref name="enable" scoped="" ref="0x7f07819a76e0"/>
        <function-ref name="getValue" scoped="" ref="0x7f07819a7870"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x7f07819a7b40" loc="45:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x7f07819a7b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f07819a6020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x7f07819a4c90" loc="44:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x7f07819a4c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f07819a30a0"/>
        <function-ref name="fired" scoped="" ref="0x7f07819a3230"/>
        <function-ref name="disable" scoped="" ref="0x7f07819a33c0"/>
        <function-ref name="edge" scoped="" ref="0x7f07819a3550"/>
        <function-ref name="enable" scoped="" ref="0x7f07819a36e0"/>
        <function-ref name="getValue" scoped="" ref="0x7f07819a3870"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x7f07819a3b40" loc="45:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x7f07819a3b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f07819a2020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x7f078199fc90" loc="44:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x7f078199fc90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f078199e0a0"/>
        <function-ref name="fired" scoped="" ref="0x7f078199e230"/>
        <function-ref name="disable" scoped="" ref="0x7f078199e3c0"/>
        <function-ref name="edge" scoped="" ref="0x7f078199e550"/>
        <function-ref name="enable" scoped="" ref="0x7f078199e6e0"/>
        <function-ref name="getValue" scoped="" ref="0x7f078199e870"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x7f078199eb40" loc="45:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x7f078199eb40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f078199d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x7f078199bc90" loc="44:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x7f078199bc90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f078199a0a0"/>
        <function-ref name="fired" scoped="" ref="0x7f078199a230"/>
        <function-ref name="disable" scoped="" ref="0x7f078199a3c0"/>
        <function-ref name="edge" scoped="" ref="0x7f078199a550"/>
        <function-ref name="enable" scoped="" ref="0x7f078199a6e0"/>
        <function-ref name="getValue" scoped="" ref="0x7f078199a870"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x7f078199ab40" loc="45:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x7f078199ab40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f0781999020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x7f0781997c90" loc="44:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x7f0781997c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f07819950a0"/>
        <function-ref name="fired" scoped="" ref="0x7f0781995230"/>
        <function-ref name="disable" scoped="" ref="0x7f07819953c0"/>
        <function-ref name="edge" scoped="" ref="0x7f0781995550"/>
        <function-ref name="enable" scoped="" ref="0x7f07819956e0"/>
        <function-ref name="getValue" scoped="" ref="0x7f0781995870"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x7f0781995b40" loc="45:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x7f0781995b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f0781994020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x7f0781992c90" loc="44:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x7f0781992c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f07819910a0"/>
        <function-ref name="fired" scoped="" ref="0x7f0781991230"/>
        <function-ref name="disable" scoped="" ref="0x7f07819913c0"/>
        <function-ref name="edge" scoped="" ref="0x7f0781991550"/>
        <function-ref name="enable" scoped="" ref="0x7f07819916e0"/>
        <function-ref name="getValue" scoped="" ref="0x7f0781991870"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x7f0781991b40" loc="45:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x7f0781991b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f0781990020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UdpSend" ref="0x7f07819801f0" loc="11:../tinyos_ws18/tos/lib_ecs/udp/UdpC.nc">
      <component-ref qname="DatabaseC.UdpC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UdpSend" scoped="" ref="0x7f07819801f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="UdpSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f0781980570"/>
        <function-ref name="sendDone" scoped="" ref="0x7f0781980700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UdpReceive" ref="0x7f0781980990" loc="12:../tinyos_ws18/tos/lib_ecs/udp/UdpC.nc">
      <component-ref qname="DatabaseC.UdpC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UdpReceive" scoped="" ref="0x7f0781980990"/></type-interface>
      <instance>
        <interfacedef-ref qname="UdpReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="received" scoped="" ref="0x7f0781980d10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketSender" ref="0x7f078197c710" loc="11:UdpTransceiverC.nc">
      <component-ref qname="UdpTransceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketSender" scoped="" ref="0x7f078197c710"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x7f078263a3a0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x7f078263a3a0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="PacketSender"/>
        <arguments>
          <type-tag size="I:12" alignment="I:1"><struct-ref ref="0x7f07823162c0"/>
            <typename><typedef-ref name="udp_queue_item_t" ref="0x7f07823168f0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f078197b390"/>
        <function-ref name="sendDone" scoped="" ref="0x7f078197b8a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UdpReceive" ref="0x7f0781979330" loc="12:UdpTransceiverC.nc">
      <component-ref qname="UdpTransceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UdpReceive" scoped="" ref="0x7f0781979330"/></type-interface>
      <instance>
        <interfacedef-ref qname="UdpReceive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
          <typename><typedef-ref name="uint16_t" ref="0x7f0782f56610"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="received" scoped="" ref="0x7f07819796b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IpSend" ref="0x7f07819789d0" loc="11:../tinyos_ws18/tos/lib_ecs/ip/IpC.nc">
      <component-ref qname="UdpTransceiverC.IpC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IpSend" scoped="" ref="0x7f07819789d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="IpSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f0781978d50"/>
        <function-ref name="sendDone" scoped="" ref="0x7f0781977020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IpReceive" ref="0x7f07819772b0" loc="12:../tinyos_ws18/tos/lib_ecs/ip/IpC.nc">
      <component-ref qname="UdpTransceiverC.IpC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IpReceive" scoped="" ref="0x7f07819772b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="IpReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="received" scoped="" ref="0x7f0781977630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IpSend" ref="0x7f0780cae0c0" loc="11:../tinyos_ws18/tos/lib_ecs/ip/IpP.nc">
      <component-ref qname="UdpTransceiverC.IpC.IpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IpSend" scoped="" ref="0x7f0780cae0c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="IpSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f0780cae440"/>
        <function-ref name="sendDone" scoped="" ref="0x7f0780cae5d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IpQueue" ref="0x7f0780cae860" loc="12:../tinyos_ws18/tos/lib_ecs/ip/IpP.nc">
      <component-ref qname="UdpTransceiverC.IpC.IpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IpQueue" scoped="" ref="0x7f0780cae860"/></type-interface>
      <instance>
        <interfacedef-ref qname="IpQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f0780caebe0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f0780caed70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketSender" ref="0x7f0781976b70" loc="11:UdpTransceiverP.nc">
      <component-ref qname="UdpTransceiverP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketSender" scoped="" ref="0x7f0781976b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketSender"/>
        <arguments>
          <type-tag size="I:12" alignment="I:1"><struct-ref ref="0x7f07823162c0"/>
            <typename><typedef-ref name="udp_queue_item_t" ref="0x7f07823168f0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f0781973790"/>
        <function-ref name="sendDone" scoped="" ref="0x7f0781973ca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IpSend" ref="0x7f0781971d80" loc="13:UdpTransceiverP.nc">
      <component-ref qname="UdpTransceiverP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IpSend" scoped="" ref="0x7f0781971d80"/></type-interface>
      <instance>
        <interfacedef-ref qname="IpSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f0781970180"/>
        <function-ref name="sendDone" scoped="" ref="0x7f0781970310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IpPacket" ref="0x7f078196f4a0" loc="16:UdpTransceiverP.nc">
      <component-ref qname="UdpTransceiverP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IpPacket" scoped="" ref="0x7f078196f4a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="IpPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="getPacket" scoped="" ref="0x7f078196f820"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UdpReceive" ref="0x7f0781971730" loc="12:UdpTransceiverP.nc">
      <component-ref qname="UdpTransceiverP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UdpReceive" scoped="" ref="0x7f0781971730"/></type-interface>
      <instance>
        <interfacedef-ref qname="UdpReceive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
          <typename><typedef-ref name="uint16_t" ref="0x7f0782f56610"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="received" scoped="" ref="0x7f0781971ab0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IcmpSend" ref="0x7f0781970c70" loc="15:UdpTransceiverP.nc">
      <component-ref qname="UdpTransceiverP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IcmpSend" scoped="" ref="0x7f0781970c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="IcmpSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f078196f020"/>
        <function-ref name="sendDone" scoped="" ref="0x7f078196f1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IpReceive" ref="0x7f0781970600" loc="14:UdpTransceiverP.nc">
      <component-ref qname="UdpTransceiverP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IpReceive" scoped="" ref="0x7f0781970600"/></type-interface>
      <instance>
        <interfacedef-ref qname="IpReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="received" scoped="" ref="0x7f0781970980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IcmpReceive" ref="0x7f0781974630" loc="12:../tinyos_ws18/tos/lib_ecs/icmp/IcmpC.nc">
      <component-ref qname="UdpTransceiverC.IcmpC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IcmpReceive" scoped="" ref="0x7f0781974630"/></type-interface>
      <instance>
        <interfacedef-ref qname="IcmpReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="received" scoped="" ref="0x7f07819749b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IcmpSend" ref="0x7f0781975e60" loc="11:../tinyos_ws18/tos/lib_ecs/icmp/IcmpC.nc">
      <component-ref qname="UdpTransceiverC.IcmpC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IcmpSend" scoped="" ref="0x7f0781975e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="IcmpSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f0781974210"/>
        <function-ref name="sendDone" scoped="" ref="0x7f07819743a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IcmpQueue" ref="0x7f0780ca5440" loc="12:../tinyos_ws18/tos/lib_ecs/icmp/IcmpP.nc">
      <component-ref qname="UdpTransceiverC.IcmpC.IcmpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IcmpQueue" scoped="" ref="0x7f0780ca5440"/></type-interface>
      <instance>
        <interfacedef-ref qname="IcmpQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f0780ca57c0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f0780ca5950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IcmpSend" ref="0x7f0780ca6b10" loc="11:../tinyos_ws18/tos/lib_ecs/icmp/IcmpP.nc">
      <component-ref qname="UdpTransceiverC.IcmpC.IcmpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IcmpSend" scoped="" ref="0x7f0780ca6b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="IcmpSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f0780ca5020"/>
        <function-ref name="sendDone" scoped="" ref="0x7f0780ca51b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UdpSend" ref="0x7f0780cb5c50" loc="11:../tinyos_ws18/tos/lib_ecs/udp/UdpP.nc">
      <component-ref qname="DatabaseC.UdpC.UdpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UdpSend" scoped="" ref="0x7f0780cb5c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="UdpSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f0780cb4020"/>
        <function-ref name="sendDone" scoped="" ref="0x7f0780cb41b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UdpQueue" ref="0x7f0780cb4440" loc="12:../tinyos_ws18/tos/lib_ecs/udp/UdpP.nc">
      <component-ref qname="DatabaseC.UdpC.UdpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UdpQueue" scoped="" ref="0x7f0780cb4440"/></type-interface>
      <instance>
        <interfacedef-ref qname="UdpQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f0780cb47c0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f0780cb4950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UdpQueue" ref="0x7f07819491d0" loc="11:../tinyos_ws18/tos/lib_ecs/udp/UdpQueueC.nc">
      <component-ref qname="UdpQueueC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UdpQueue" scoped="" ref="0x7f07819491d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="UdpQueue"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f0781949550"/>
        <function-ref name="sendDone" scoped="" ref="0x7f07819496e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketSender" ref="0x7f0781944620" loc="10:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueueC.nc">
      <component-ref qname="UdpQueueC.PacketQueueC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketSender" scoped="" ref="0x7f0781944620"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x7f078263a3a0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x7f078263a3a0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="PacketSender"/>
        <arguments>
          <type-tag size="I:12" alignment="I:1"><struct-ref ref="0x7f07823162c0"/>
            <typename><typedef-ref name="udp_queue_item_t" ref="0x7f07823168f0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f0781943390"/>
        <function-ref name="sendDone" scoped="" ref="0x7f07819438a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketQueue" ref="0x7f0781947790" loc="9:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueueC.nc">
      <component-ref qname="UdpQueueC.PacketQueueC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketQueue" scoped="" ref="0x7f0781947790"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketQueue"/>
        <arguments>
          <type-tag size="I:12" alignment="I:1"><struct-ref ref="0x7f07823162c0"/>
            <typename><typedef-ref name="udp_queue_item_t" ref="0x7f07823168f0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f07819458c0"/>
        <function-ref name="getBuffer" scoped="" ref="0x7f07819453b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f0781945d90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketSender" ref="0x7f0780c98dd0" loc="13:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueueP.nc">
      <component-ref qname="UdpQueueC.PacketQueueC.PacketQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketSender" scoped="" ref="0x7f0780c98dd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketSender"/>
        <arguments>
          <type-tag size="I:12" alignment="I:1"><struct-ref ref="0x7f07823162c0"/>
            <typename><typedef-ref name="udp_queue_item_t" ref="0x7f07823168f0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f0780c97a80"/>
        <function-ref name="sendDone" scoped="" ref="0x7f0780c95020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketQueue" ref="0x7f0780c9a0b0" loc="12:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueueP.nc">
      <component-ref qname="UdpQueueC.PacketQueueC.PacketQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketQueue" scoped="" ref="0x7f0780c9a0b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketQueue"/>
        <arguments>
          <type-tag size="I:12" alignment="I:1"><struct-ref ref="0x7f07823162c0"/>
            <typename><typedef-ref name="udp_queue_item_t" ref="0x7f07823168f0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f0780c98220"/>
        <function-ref name="getBuffer" scoped="" ref="0x7f0780c9aca0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f0780c986f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendNext" ref="0x7f0780c954e0" loc="26:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueueP.nc">
      <component-ref qname="UdpQueueC.PacketQueueC.PacketQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="sendNext" scoped="" ref="0x7f0780c954e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f0780c95860"/>
        <function-ref name="runTask" scoped="" ref="0x7f0780c959f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketQueue" ref="0x7f078193ebb0" loc="13:../tinyos_ws18/tos/lib_ecs/udp/UdpQueueP.nc">
      <component-ref qname="UdpQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketQueue" scoped="" ref="0x7f078193ebb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketQueue"/>
        <arguments>
          <type-tag size="I:12" alignment="I:1"><struct-ref ref="0x7f07823162c0"/>
            <typename><typedef-ref name="udp_queue_item_t" ref="0x7f07823168f0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f078193dcf0"/>
        <function-ref name="getBuffer" scoped="" ref="0x7f078193d7e0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f078193c220"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UdpQueue" ref="0x7f078193e1d0" loc="12:../tinyos_ws18/tos/lib_ecs/udp/UdpQueueP.nc">
      <component-ref qname="UdpQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UdpQueue" scoped="" ref="0x7f078193e1d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="UdpQueue"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f078193e550"/>
        <function-ref name="sendDone" scoped="" ref="0x7f078193e6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f07819290c0" loc="14:FMClick/FMClickC.nc">
      <component-ref qname="FMClickC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f07819290c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f0781929440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FMClick" ref="0x7f07819296e0" loc="15:FMClick/FMClickC.nc">
      <component-ref qname="FMClickC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FMClick" scoped="" ref="0x7f07819296e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="FMClick"/>
      </instance>
      <interface-functions>
        <function-ref name="tune" scoped="" ref="0x7f07819287f0"/>
        <function-ref name="initDone" scoped="" ref="0x7f0781929bf0"/>
        <function-ref name="setVolume" scoped="" ref="0x7f0781929d80"/>
        <function-ref name="rdsReceived" scoped="" ref="0x7f0781928020"/>
        <function-ref name="receiveRDS" scoped="" ref="0x7f07819281b0"/>
        <function-ref name="tuneComplete" scoped="" ref="0x7f0781928340"/>
        <function-ref name="getChannel" scoped="" ref="0x7f07819284d0"/>
        <function-ref name="seekComplete" scoped="" ref="0x7f0781928660"/>
        <function-ref name="seek" scoped="" ref="0x7f0781929a60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="seek" ref="0x7f07818f4020" loc="187:FMClick/FMClickP.nc">
      <component-ref qname="FMClickP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="seek" scoped="" ref="0x7f07818f4020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f07818f44a0"/>
        <function-ref name="runTask" scoped="" ref="0x7f07818f4630"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="writeI2C" ref="0x7f07818ee2a0" loc="192:FMClick/FMClickP.nc">
      <component-ref qname="FMClickP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="writeI2C" scoped="" ref="0x7f07818ee2a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f07818ee620"/>
        <function-ref name="runTask" scoped="" ref="0x7f07818ee7b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SDIOPin" ref="0x7f0781909020" loc="30:FMClick/FMClickP.nc">
      <component-ref qname="FMClickP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SDIOPin" scoped="" ref="0x7f0781909020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f07819093a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f0781909530"/>
        <function-ref name="toggle" scoped="" ref="0x7f07819096c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0781909850"/>
        <function-ref name="get" scoped="" ref="0x7f07819099e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0781909b70"/>
        <function-ref name="set" scoped="" ref="0x7f0781909d00"/>
        <function-ref name="clr" scoped="" ref="0x7f0781908020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="INTPin" ref="0x7f0781908350" loc="31:FMClick/FMClickP.nc">
      <component-ref qname="FMClickP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="INTPin" scoped="" ref="0x7f0781908350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f07819086d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f0781908860"/>
        <function-ref name="toggle" scoped="" ref="0x7f07819089f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0781908b80"/>
        <function-ref name="get" scoped="" ref="0x7f0781908d10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0781907020"/>
        <function-ref name="set" scoped="" ref="0x7f07819071b0"/>
        <function-ref name="clr" scoped="" ref="0x7f0781907340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Int" ref="0x7f0781923020" loc="25:FMClick/FMClickP.nc">
      <component-ref qname="FMClickP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int" scoped="" ref="0x7f0781923020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f07819233a0"/>
        <function-ref name="fired" scoped="" ref="0x7f0781923530"/>
        <function-ref name="disable" scoped="" ref="0x7f07819236c0"/>
        <function-ref name="edge" scoped="" ref="0x7f0781923850"/>
        <function-ref name="enable" scoped="" ref="0x7f07819239e0"/>
        <function-ref name="getValue" scoped="" ref="0x7f0781923b70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="I2C" ref="0x7f0781913b50" loc="27:FMClick/FMClickP.nc">
      <component-ref qname="FMClickP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2C" scoped="" ref="0x7f0781913b50"/></type-interface>
      <instance>
        <interfacedef-ref qname="I2CPacket"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7f078191f770"/>
            <typename><typedef-ref name="TI2CBasicAddr" ref="0x7f078191fa30"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f07819217d0"/>
        <function-ref name="writeDone" scoped="" ref="0x7f0781912ca0"/>
        <function-ref name="write" scoped="" ref="0x7f0781920400"/>
        <function-ref name="readDone" scoped="" ref="0x7f0781912090"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="registerWriteback" ref="0x7f07818ec2b0" loc="193:FMClick/FMClickP.nc">
      <component-ref qname="FMClickP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="registerWriteback" scoped="" ref="0x7f07818ec2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f07818ec630"/>
        <function-ref name="runTask" scoped="" ref="0x7f07818ec7c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="readRegisters" ref="0x7f07818f1510" loc="189:FMClick/FMClickP.nc">
      <component-ref qname="FMClickP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="readRegisters" scoped="" ref="0x7f07818f1510"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f07818f1890"/>
        <function-ref name="runTask" scoped="" ref="0x7f07818f1a20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="init" ref="0x7f07818f6120" loc="185:FMClick/FMClickP.nc">
      <component-ref qname="FMClickP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="init" scoped="" ref="0x7f07818f6120"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f07818f64a0"/>
        <function-ref name="runTask" scoped="" ref="0x7f07818f6630"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="decodeRDS" ref="0x7f07818f2020" loc="188:FMClick/FMClickP.nc">
      <component-ref qname="FMClickP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="decodeRDS" scoped="" ref="0x7f07818f2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f07818f23a0"/>
        <function-ref name="runTask" scoped="" ref="0x7f07818f2530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="writeRegisters" ref="0x7f07818ef2b0" loc="191:FMClick/FMClickP.nc">
      <component-ref qname="FMClickP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="writeRegisters" scoped="" ref="0x7f07818ef2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f07818ef630"/>
        <function-ref name="runTask" scoped="" ref="0x7f07818ef7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f0781927440" loc="20:FMClick/FMClickP.nc">
      <component-ref qname="FMClickP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f0781927440"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f07819277c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="I2CResource" ref="0x7f0781922020" loc="26:FMClick/FMClickP.nc">
      <component-ref qname="FMClickP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CResource" scoped="" ref="0x7f0781922020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f07819223a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f0781922530"/>
        <function-ref name="request" scoped="" ref="0x7f07819226c0"/>
        <function-ref name="granted" scoped="" ref="0x7f0781922850"/>
        <function-ref name="isOwner" scoped="" ref="0x7f07819229e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSTPin" ref="0x7f078190bdf0" loc="29:FMClick/FMClickP.nc">
      <component-ref qname="FMClickP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSTPin" scoped="" ref="0x7f078190bdf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f078190a1c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f078190a350"/>
        <function-ref name="toggle" scoped="" ref="0x7f078190a4e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f078190a670"/>
        <function-ref name="get" scoped="" ref="0x7f078190a800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f078190a990"/>
        <function-ref name="set" scoped="" ref="0x7f078190ab20"/>
        <function-ref name="clr" scoped="" ref="0x7f078190acb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FMClick" ref="0x7f0781927a60" loc="21:FMClick/FMClickP.nc">
      <component-ref qname="FMClickP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FMClick" scoped="" ref="0x7f0781927a60"/></type-interface>
      <instance>
        <interfacedef-ref qname="FMClick"/>
      </instance>
      <interface-functions>
        <function-ref name="tune" scoped="" ref="0x7f0781924b10"/>
        <function-ref name="initDone" scoped="" ref="0x7f0781924020"/>
        <function-ref name="setVolume" scoped="" ref="0x7f07819241b0"/>
        <function-ref name="rdsReceived" scoped="" ref="0x7f0781924340"/>
        <function-ref name="receiveRDS" scoped="" ref="0x7f07819244d0"/>
        <function-ref name="tuneComplete" scoped="" ref="0x7f0781924660"/>
        <function-ref name="getChannel" scoped="" ref="0x7f07819247f0"/>
        <function-ref name="seekComplete" scoped="" ref="0x7f0781924980"/>
        <function-ref name="seek" scoped="" ref="0x7f0781927de0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Glcd" ref="0x7f07819075c0" loc="32:FMClick/FMClickP.nc">
      <component-ref qname="FMClickP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Glcd" scoped="" ref="0x7f07819075c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Glcd"/>
      </instance>
      <interface-functions>
        <function-ref name="fill" scoped="" ref="0x7f0781906660"/>
        <function-ref name="drawRect" scoped="" ref="0x7f0781907ad0"/>
        <function-ref name="drawLine" scoped="" ref="0x7f0781907c60"/>
        <function-ref name="setPixel" scoped="" ref="0x7f0781907df0"/>
        <function-ref name="invertPixel" scoped="" ref="0x7f0781906020"/>
        <function-ref name="clearPixel" scoped="" ref="0x7f07819061b0"/>
        <function-ref name="drawEllipse" scoped="" ref="0x7f0781906340"/>
        <function-ref name="drawTextPgm" scoped="" ref="0x7f0781907940"/>
        <function-ref name="drawText" scoped="" ref="0x7f07819064d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="readI2C" ref="0x7f07818f03c0" loc="190:FMClick/FMClickP.nc">
      <component-ref qname="FMClickP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="readI2C" scoped="" ref="0x7f07818f03c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f07818f0740"/>
        <function-ref name="runTask" scoped="" ref="0x7f07818f08d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f0781910a80" loc="28:FMClick/FMClickP.nc">
      <component-ref qname="FMClickP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f0781910a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f07825841a0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f0782584510"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f078190b020"/>
        <function-ref name="fired" scoped="" ref="0x7f078190e510"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f078190d300"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f078190ee10"/>
        <function-ref name="getdt" scoped="" ref="0x7f078190b920"/>
        <function-ref name="gett0" scoped="" ref="0x7f078190b4a0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f078190e990"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f078190f6b0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f078190d910"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f078190fb80"/>
        <function-ref name="stop" scoped="" ref="0x7f078190e090"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="tune" ref="0x7f07818f5020" loc="186:FMClick/FMClickP.nc">
      <component-ref qname="FMClickP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="tune" scoped="" ref="0x7f07818f5020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f07818f53a0"/>
        <function-ref name="runTask" scoped="" ref="0x7f07818f5530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f0781813af0" loc="44:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
      <component-ref qname="FMClickC.I2C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f0781813af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f0781813e70"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f0781630030"/>
        <function-ref name="request" scoped="" ref="0x7f07816301c0"/>
        <function-ref name="granted" scoped="" ref="0x7f0781630350"/>
        <function-ref name="isOwner" scoped="" ref="0x7f07816304e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CPacket" ref="0x7f0781630890" loc="45:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
      <component-ref qname="FMClickC.I2C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CPacket" scoped="" ref="0x7f0781630890"/></type-interface>
      <instance>
        <interfacedef-ref qname="I2CPacket"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7f078191f770"/>
            <typename><typedef-ref name="TI2CBasicAddr" ref="0x7f078191fa30"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f078162f500"/>
        <function-ref name="writeDone" scoped="" ref="0x7f078162c9b0"/>
        <function-ref name="write" scoped="" ref="0x7f078162e150"/>
        <function-ref name="readDone" scoped="" ref="0x7f078162ed60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f07818089b0" loc="45:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <component-ref qname="Atm128I2CMasterP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f07818089b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f0781808d30"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f0781804020"/>
        <function-ref name="request" scoped="" ref="0x7f07818041b0"/>
        <function-ref name="granted" scoped="" ref="0x7f0781804340"/>
        <function-ref name="isOwner" scoped="" ref="0x7f07818044d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CPacket" ref="0x7f0781802020" loc="46:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <component-ref qname="Atm128I2CMasterP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CPacket" scoped="" ref="0x7f0781802020"/></type-interface>
      <instance>
        <interfacedef-ref qname="I2CPacket"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7f078191f770"/>
            <typename><typedef-ref name="TI2CBasicAddr" ref="0x7f078191fa30"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f0781802c50"/>
        <function-ref name="writeDone" scoped="" ref="0x7f07817ff150"/>
        <function-ref name="write" scoped="" ref="0x7f07818018c0"/>
        <function-ref name="readDone" scoped="" ref="0x7f0781800510"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f0781794bf0" loc="92:../tinyos_ws18/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x7f0781794bf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f0781793020"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f07817931b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f0781792930" loc="96:../tinyos_ws18/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f0781792930"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f0781792cd0"/>
        <function-ref name="configure" scoped="" ref="0x7f0781792e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7f0781793400" loc="93:../tinyos_ws18/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f0781793400"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f0781793780"/>
        <function-ref name="requested" scoped="" ref="0x7f0781793910"/>
        <function-ref name="granted" scoped="" ref="0x7f0781793aa0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f0781793c30"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f0781793dc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f0781795e60" loc="91:../tinyos_ws18/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f0781795e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f0781794230"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f07817943c0"/>
        <function-ref name="request" scoped="" ref="0x7f0781794550"/>
        <function-ref name="granted" scoped="" ref="0x7f07817946e0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f0781794870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f0781792060" loc="94:../tinyos_ws18/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f0781792060"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f07817923e0"/>
        <function-ref name="userId" scoped="" ref="0x7f0781792570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f0780c72620" loc="44:../tinyos_ws18/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f0780c72620"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f0780c729a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x7f0780c72c30" loc="45:../tinyos_ws18/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FcfsQueue" scoped="" ref="0x7f0780c72c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f0780c71020"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f0780c711b0"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f0780c71340"/>
        <function-ref name="dequeue" scoped="" ref="0x7f0780c714d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f0780c6fbd0" loc="55:../tinyos_ws18/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x7f0780c6fbd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f0780c6e020"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f0780c6e1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f0780c6d950" loc="60:../tinyos_ws18/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f0780c6d950"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f0780c6dcf0"/>
        <function-ref name="configure" scoped="" ref="0x7f0780c6de80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7f0780c6b130" loc="61:../tinyos_ws18/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x7f0780c6b130"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f0780c6b4b0"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f0780c6b640"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f0780c6b7d0"/>
        <function-ref name="dequeue" scoped="" ref="0x7f0780c6b960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7f0780c6e400" loc="56:../tinyos_ws18/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f0780c6e400"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f0780c6e780"/>
        <function-ref name="requested" scoped="" ref="0x7f0780c6e910"/>
        <function-ref name="granted" scoped="" ref="0x7f0780c6eaa0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f0780c6ec30"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f0780c6edc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f0780c6bbb0" loc="62:../tinyos_ws18/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7f0780c6bbb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f0780c6a020"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f0780c6a1b0"/>
        <function-ref name="led1On" scoped="" ref="0x7f0780c6a340"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f0780c6a4d0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f0780c6a660"/>
        <function-ref name="get" scoped="" ref="0x7f0780c6a7f0"/>
        <function-ref name="led1Off" scoped="" ref="0x7f0780c6a980"/>
        <function-ref name="led0On" scoped="" ref="0x7f0780c69020"/>
        <function-ref name="set" scoped="" ref="0x7f0780c6aca0"/>
        <function-ref name="led2On" scoped="" ref="0x7f0780c6ab10"/>
        <function-ref name="led2Off" scoped="" ref="0x7f0780c6ae30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f0780c70e40" loc="54:../tinyos_ws18/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f0780c70e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f0780c6f210"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f0780c6f3a0"/>
        <function-ref name="request" scoped="" ref="0x7f0780c6f530"/>
        <function-ref name="granted" scoped="" ref="0x7f0780c6f6c0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f0780c6f850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f0780c6d060" loc="57:../tinyos_ws18/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f0780c6d060"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f0780c6d3e0"/>
        <function-ref name="userId" scoped="" ref="0x7f0780c6d570"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x7f0780c692f0" loc="75:../tinyos_ws18/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x7f0780c692f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f0780c69670"/>
        <function-ref name="runTask" scoped="" ref="0x7f0780c69800"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x7f078178dcb0" loc="62:../tinyos_ws18/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128I2CMasterP.Power"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PowerDownCleanup" scoped="" ref="0x7f078178dcb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x7f07817810a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x7f07817812f0" loc="63:../tinyos_ws18/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128I2CMasterP.Power"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f07817812f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f0781781670"/>
        <function-ref name="requested" scoped="" ref="0x7f0781781800"/>
        <function-ref name="granted" scoped="" ref="0x7f0781781990"/>
        <function-ref name="isOwner" scoped="" ref="0x7f0781781b20"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f0781781cb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AsyncStdControl" ref="0x7f078178d550" loc="60:../tinyos_ws18/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128I2CMasterP.Power"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x7f078178d550"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f078178d8d0"/>
        <function-ref name="stop" scoped="" ref="0x7f078178da60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7f0781780020" loc="64:../tinyos_ws18/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128I2CMasterP.Power"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f0781780020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f07817803a0"/>
        <function-ref name="userId" scoped="" ref="0x7f0781780530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128I2C" ref="0x7f078173c8e0" loc="45:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc">
      <component-ref qname="Atm128I2CMasterP.I2C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128I2C" scoped="" ref="0x7f078173c8e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="stop" scoped="" ref="0x7f078173cc60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x7f0781741c40" loc="44:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc">
      <component-ref qname="Atm128I2CMasterP.I2C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x7f0781741c40"/></type-interface>
      <instance>
        <interfacedef-ref qname="I2CPacket"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7f078191f770"/>
            <typename><typedef-ref name="TI2CBasicAddr" ref="0x7f078191fa30"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f07817408a0"/>
        <function-ref name="writeDone" scoped="" ref="0x7f078173ed20"/>
        <function-ref name="write" scoped="" ref="0x7f078173f4d0"/>
        <function-ref name="readDone" scoped="" ref="0x7f078173e110"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f078173b020" loc="46:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc">
      <component-ref qname="Atm128I2CMasterP.I2C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7f078173b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f078173b3a0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f078173b530"/>
        <function-ref name="led1On" scoped="" ref="0x7f078173b6c0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f078173b850"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f078173b9e0"/>
        <function-ref name="get" scoped="" ref="0x7f078173bb70"/>
        <function-ref name="led1Off" scoped="" ref="0x7f078173bd00"/>
        <function-ref name="led2On" scoped="" ref="0x7f078173a4d0"/>
        <function-ref name="set" scoped="" ref="0x7f078173a1b0"/>
        <function-ref name="led2Off" scoped="" ref="0x7f078173a020"/>
        <function-ref name="led0On" scoped="" ref="0x7f078173a340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f0781747020" loc="41:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc">
      <component-ref qname="Atm128I2CMasterP.I2C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f0781747020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f07817473c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f0781747550"/>
        <function-ref name="request" scoped="" ref="0x7f07817476e0"/>
        <function-ref name="granted" scoped="" ref="0x7f0781747870"/>
        <function-ref name="isOwner" scoped="" ref="0x7f0781747a00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CPacket" ref="0x7f0781746020" loc="42:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc">
      <component-ref qname="Atm128I2CMasterP.I2C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CPacket" scoped="" ref="0x7f0781746020"/></type-interface>
      <instance>
        <interfacedef-ref qname="I2CPacket"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7f078191f770"/>
            <typename><typedef-ref name="TI2CBasicAddr" ref="0x7f078191fa30"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f0781746c70"/>
        <function-ref name="writeDone" scoped="" ref="0x7f0781742170"/>
        <function-ref name="write" scoped="" ref="0x7f07817458c0"/>
        <function-ref name="readDone" scoped="" ref="0x7f0781744510"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubResource" ref="0x7f0781742e40" loc="43:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc">
      <component-ref qname="Atm128I2CMasterP.I2C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubResource" scoped="" ref="0x7f0781742e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f0781741210"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f07817413a0"/>
        <function-ref name="request" scoped="" ref="0x7f0781741530"/>
        <function-ref name="granted" scoped="" ref="0x7f07817416c0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f0781741850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128I2C" ref="0x7f07816c88e0" loc="79:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
      <component-ref qname="Atm128I2CMasterP.Master"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128I2C" scoped="" ref="0x7f07816c88e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="stop" scoped="" ref="0x7f07816c8c60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="I2C" ref="0x7f07816c7020" loc="81:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
      <component-ref qname="Atm128I2CMasterP.Master"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2C" scoped="" ref="0x7f07816c7020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128I2CBus"/>
      </instance>
      <interface-functions>
        <function-ref name="readCurrent" scoped="" ref="0x7f07816c73a0"/>
        <function-ref name="sendCommand" scoped="" ref="0x7f07816c7530"/>
        <function-ref name="setStart" scoped="" ref="0x7f07816c76c0"/>
        <function-ref name="status" scoped="" ref="0x7f07816c7850"/>
        <function-ref name="hasAcks" scoped="" ref="0x7f07816c79e0"/>
        <function-ref name="isEnabled" scoped="" ref="0x7f07816c7b70"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x7f07816c7d00"/>
        <function-ref name="read" scoped="" ref="0x7f07816c6020"/>
        <function-ref name="init" scoped="" ref="0x7f07816c61b0"/>
        <function-ref name="enableAck" scoped="" ref="0x7f07816c6340"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x7f07816c64d0"/>
        <function-ref name="hasStart" scoped="" ref="0x7f07816c6660"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f07816c67f0"/>
        <function-ref name="commandComplete" scoped="" ref="0x7f07816c6a80"/>
        <function-ref name="enable" scoped="" ref="0x7f07816c6c10"/>
        <function-ref name="write" scoped="" ref="0x7f07816c6da0"/>
        <function-ref name="isRealInterruptPending" scoped="" ref="0x7f07816c5020"/>
        <function-ref name="off" scoped="" ref="0x7f07816c51b0"/>
        <function-ref name="setStop" scoped="" ref="0x7f07816c5340"/>
        <function-ref name="setInterruptPending" scoped="" ref="0x7f07816c54d0"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x7f07816c5660"/>
        <function-ref name="hasStop" scoped="" ref="0x7f07816c57f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ReadDebugLeds" ref="0x7f07816c5ac0" loc="82:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
      <component-ref qname="Atm128I2CMasterP.Master"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReadDebugLeds" scoped="" ref="0x7f07816c5ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f07816c5e40"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f07816c3020"/>
        <function-ref name="led1On" scoped="" ref="0x7f07816c31b0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f07816c3340"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f07816c34d0"/>
        <function-ref name="get" scoped="" ref="0x7f07816c3660"/>
        <function-ref name="led1Off" scoped="" ref="0x7f07816c37f0"/>
        <function-ref name="led2On" scoped="" ref="0x7f07816c3e30"/>
        <function-ref name="set" scoped="" ref="0x7f07816c3b10"/>
        <function-ref name="led2Off" scoped="" ref="0x7f07816c3980"/>
        <function-ref name="led0On" scoped="" ref="0x7f07816c3ca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="WriteDebugLeds" ref="0x7f07816c2160" loc="83:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
      <component-ref qname="Atm128I2CMasterP.Master"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="WriteDebugLeds" scoped="" ref="0x7f07816c2160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f07816c24e0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f07816c2670"/>
        <function-ref name="led1On" scoped="" ref="0x7f07816c2800"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f07816c2990"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f07816c2b20"/>
        <function-ref name="get" scoped="" ref="0x7f07816c2cb0"/>
        <function-ref name="led1Off" scoped="" ref="0x7f07816c2e40"/>
        <function-ref name="led2On" scoped="" ref="0x7f07816c14d0"/>
        <function-ref name="set" scoped="" ref="0x7f07816c11b0"/>
        <function-ref name="led2Off" scoped="" ref="0x7f07816c1020"/>
        <function-ref name="led0On" scoped="" ref="0x7f07816c1340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopTask" ref="0x7f07816c17a0" loc="210:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
      <component-ref qname="Atm128I2CMasterP.Master"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="stopTask" scoped="" ref="0x7f07816c17a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f07816c1b20"/>
        <function-ref name="runTask" scoped="" ref="0x7f07816c1cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0x7f07816cd340" loc="77:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
      <component-ref qname="Atm128I2CMasterP.Master"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x7f07816cd340"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f07816cd6c0"/>
        <function-ref name="stop" scoped="" ref="0x7f07816cd850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CPacket" ref="0x7f07816cdc00" loc="78:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
      <component-ref qname="Atm128I2CMasterP.Master"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CPacket" scoped="" ref="0x7f07816cdc00"/></type-interface>
      <instance>
        <interfacedef-ref qname="I2CPacket"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7f078191f770"/>
            <typename><typedef-ref name="TI2CBasicAddr" ref="0x7f078191fa30"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f07816cb8a0"/>
        <function-ref name="writeDone" scoped="" ref="0x7f07816c9d20"/>
        <function-ref name="write" scoped="" ref="0x7f07816ca4d0"/>
        <function-ref name="readDone" scoped="" ref="0x7f07816c9110"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2C" ref="0x7f07816bb0e0" loc="47:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBusC.nc">
      <component-ref qname="HplAtm128I2CBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2C" scoped="" ref="0x7f07816bb0e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128I2CBus"/>
      </instance>
      <interface-functions>
        <function-ref name="readCurrent" scoped="" ref="0x7f07816bb460"/>
        <function-ref name="sendCommand" scoped="" ref="0x7f07816bb5f0"/>
        <function-ref name="setStart" scoped="" ref="0x7f07816bb780"/>
        <function-ref name="status" scoped="" ref="0x7f07816bb910"/>
        <function-ref name="hasAcks" scoped="" ref="0x7f07816bbaa0"/>
        <function-ref name="isEnabled" scoped="" ref="0x7f07816bbc30"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x7f07816bbdc0"/>
        <function-ref name="read" scoped="" ref="0x7f07816ba020"/>
        <function-ref name="init" scoped="" ref="0x7f07816ba1b0"/>
        <function-ref name="enableAck" scoped="" ref="0x7f07816ba340"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x7f07816ba4d0"/>
        <function-ref name="hasStart" scoped="" ref="0x7f07816ba660"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f07816ba7f0"/>
        <function-ref name="commandComplete" scoped="" ref="0x7f07816baa80"/>
        <function-ref name="enable" scoped="" ref="0x7f07816bac10"/>
        <function-ref name="write" scoped="" ref="0x7f07816bada0"/>
        <function-ref name="isRealInterruptPending" scoped="" ref="0x7f07816b9020"/>
        <function-ref name="off" scoped="" ref="0x7f07816b91b0"/>
        <function-ref name="setStop" scoped="" ref="0x7f07816b9340"/>
        <function-ref name="setInterruptPending" scoped="" ref="0x7f07816b94d0"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x7f07816b9660"/>
        <function-ref name="hasStop" scoped="" ref="0x7f07816b97f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2C" ref="0x7f07816b8a70" loc="50:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBusP.nc">
      <component-ref qname="HplAtm128I2CBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2C" scoped="" ref="0x7f07816b8a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128I2CBus"/>
      </instance>
      <interface-functions>
        <function-ref name="readCurrent" scoped="" ref="0x7f07816b8df0"/>
        <function-ref name="sendCommand" scoped="" ref="0x7f07816b5020"/>
        <function-ref name="setStart" scoped="" ref="0x7f07816b51b0"/>
        <function-ref name="status" scoped="" ref="0x7f07816b5340"/>
        <function-ref name="hasAcks" scoped="" ref="0x7f07816b54d0"/>
        <function-ref name="isEnabled" scoped="" ref="0x7f07816b5660"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x7f07816b57f0"/>
        <function-ref name="read" scoped="" ref="0x7f07816b5980"/>
        <function-ref name="init" scoped="" ref="0x7f07816b5b10"/>
        <function-ref name="enableAck" scoped="" ref="0x7f07816b5ca0"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x7f07816b5e30"/>
        <function-ref name="hasStart" scoped="" ref="0x7f07816b4020"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f07816b41b0"/>
        <function-ref name="commandComplete" scoped="" ref="0x7f07816b4440"/>
        <function-ref name="enable" scoped="" ref="0x7f07816b45d0"/>
        <function-ref name="write" scoped="" ref="0x7f07816b4760"/>
        <function-ref name="isRealInterruptPending" scoped="" ref="0x7f07816b48f0"/>
        <function-ref name="off" scoped="" ref="0x7f07816b4a80"/>
        <function-ref name="setStop" scoped="" ref="0x7f07816b4c10"/>
        <function-ref name="setInterruptPending" scoped="" ref="0x7f07816b4da0"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x7f07816b3020"/>
        <function-ref name="hasStop" scoped="" ref="0x7f07816b31b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="I2CClk" ref="0x7f07816b3540" loc="53:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBusP.nc">
      <component-ref qname="HplAtm128I2CBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CClk" scoped="" ref="0x7f07816b3540"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f07816b38c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f07816b3a50"/>
        <function-ref name="toggle" scoped="" ref="0x7f07816b3be0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f07816b3d70"/>
        <function-ref name="get" scoped="" ref="0x7f07816b2020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f07816b21b0"/>
        <function-ref name="set" scoped="" ref="0x7f07816b2340"/>
        <function-ref name="clr" scoped="" ref="0x7f07816b24d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="I2CData" ref="0x7f07816b2810" loc="54:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBusP.nc">
      <component-ref qname="HplAtm128I2CBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CData" scoped="" ref="0x7f07816b2810"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f07816b2b90"/>
        <function-ref name="isInput" scoped="" ref="0x7f07816b2d20"/>
        <function-ref name="toggle" scoped="" ref="0x7f07816b1020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f07816b11b0"/>
        <function-ref name="get" scoped="" ref="0x7f07816b1340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f07816b14d0"/>
        <function-ref name="set" scoped="" ref="0x7f07816b1660"/>
        <function-ref name="clr" scoped="" ref="0x7f07816b17f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x7f078167b4a0" loc="46:../tinyos_ws18/tos/system/LedsC.nc">
      <component-ref qname="LedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7f078167b4a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f078167b820"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f078167b9b0"/>
        <function-ref name="led1On" scoped="" ref="0x7f078167bb40"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f078167bcd0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f078167be60"/>
        <function-ref name="get" scoped="" ref="0x7f0781678020"/>
        <function-ref name="led1Off" scoped="" ref="0x7f07816781b0"/>
        <function-ref name="led2Off" scoped="" ref="0x7f07816787f0"/>
        <function-ref name="set" scoped="" ref="0x7f0781678340"/>
        <function-ref name="led0On" scoped="" ref="0x7f07816784d0"/>
        <function-ref name="led2On" scoped="" ref="0x7f0781678660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led0" ref="0x7f0781673550" loc="50:../tinyos_ws18/tos/platforms/bigAVR6/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led0" scoped="" ref="0x7f0781673550"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f07816738d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f0781673a60"/>
        <function-ref name="toggle" scoped="" ref="0x7f0781673bf0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0781673d80"/>
        <function-ref name="get" scoped="" ref="0x7f0781672020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f07816721b0"/>
        <function-ref name="set" scoped="" ref="0x7f0781672340"/>
        <function-ref name="clr" scoped="" ref="0x7f07816724d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f07816777c0" loc="46:../tinyos_ws18/tos/platforms/bigAVR6/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f07816777c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f0781677b40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led1" ref="0x7f07816727f0" loc="51:../tinyos_ws18/tos/platforms/bigAVR6/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led1" scoped="" ref="0x7f07816727f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0781672b70"/>
        <function-ref name="isInput" scoped="" ref="0x7f0781672d00"/>
        <function-ref name="toggle" scoped="" ref="0x7f0781671020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f07816711b0"/>
        <function-ref name="get" scoped="" ref="0x7f0781671340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f07816714d0"/>
        <function-ref name="set" scoped="" ref="0x7f0781671660"/>
        <function-ref name="clr" scoped="" ref="0x7f07816717f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x7f0781677dc0" loc="47:../tinyos_ws18/tos/platforms/bigAVR6/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7f0781677dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f0781674180"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f0781674310"/>
        <function-ref name="led1On" scoped="" ref="0x7f07816744a0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f0781674630"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f07816747c0"/>
        <function-ref name="get" scoped="" ref="0x7f0781674950"/>
        <function-ref name="led1Off" scoped="" ref="0x7f0781674ae0"/>
        <function-ref name="led2Off" scoped="" ref="0x7f07816731b0"/>
        <function-ref name="set" scoped="" ref="0x7f0781674c70"/>
        <function-ref name="led0On" scoped="" ref="0x7f0781674e00"/>
        <function-ref name="led2On" scoped="" ref="0x7f0781673020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led2" ref="0x7f0781671b10" loc="52:../tinyos_ws18/tos/platforms/bigAVR6/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led2" scoped="" ref="0x7f0781671b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0781670020"/>
        <function-ref name="isInput" scoped="" ref="0x7f07816701b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f0781670340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f07816704d0"/>
        <function-ref name="get" scoped="" ref="0x7f0781670660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f07816707f0"/>
        <function-ref name="set" scoped="" ref="0x7f0781670980"/>
        <function-ref name="clr" scoped="" ref="0x7f0781670b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led0" ref="0x7f07816551d0" loc="44:../tinyos_ws18/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led0" scoped="" ref="0x7f07816551d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0781655550"/>
        <function-ref name="isInput" scoped="" ref="0x7f07816556e0"/>
        <function-ref name="toggle" scoped="" ref="0x7f0781655870"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0781655a00"/>
        <function-ref name="get" scoped="" ref="0x7f0781655b90"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0781655d20"/>
        <function-ref name="set" scoped="" ref="0x7f0781654020"/>
        <function-ref name="clr" scoped="" ref="0x7f07816541b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led1" ref="0x7f0781654510" loc="45:../tinyos_ws18/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led1" scoped="" ref="0x7f0781654510"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0781654890"/>
        <function-ref name="isInput" scoped="" ref="0x7f0781654a20"/>
        <function-ref name="toggle" scoped="" ref="0x7f0781654bb0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0781654d40"/>
        <function-ref name="get" scoped="" ref="0x7f0781653020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f07816531b0"/>
        <function-ref name="set" scoped="" ref="0x7f0781653340"/>
        <function-ref name="clr" scoped="" ref="0x7f07816534d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Init" ref="0x7f0781652ab0" loc="48:../tinyos_ws18/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f0781652ab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f0781652e30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led2" ref="0x7f0781653830" loc="46:../tinyos_ws18/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led2" scoped="" ref="0x7f0781653830"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0781653bb0"/>
        <function-ref name="isInput" scoped="" ref="0x7f0781653d40"/>
        <function-ref name="toggle" scoped="" ref="0x7f0781652020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f07816521b0"/>
        <function-ref name="get" scoped="" ref="0x7f0781652340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f07816524d0"/>
        <function-ref name="set" scoped="" ref="0x7f0781652660"/>
        <function-ref name="clr" scoped="" ref="0x7f07816527f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f0781649340" loc="46:../tinyos_ws18/tos/system/NoLedsC.nc">
      <component-ref qname="NoLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f0781649340"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f07816496c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x7f0781649980" loc="47:../tinyos_ws18/tos/system/NoLedsC.nc">
      <component-ref qname="NoLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7f0781649980"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f0781649d00"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f0781648020"/>
        <function-ref name="led1On" scoped="" ref="0x7f07816481b0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f0781648340"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f07816484d0"/>
        <function-ref name="get" scoped="" ref="0x7f0781648660"/>
        <function-ref name="led1Off" scoped="" ref="0x7f07816487f0"/>
        <function-ref name="led2Off" scoped="" ref="0x7f0781648e30"/>
        <function-ref name="set" scoped="" ref="0x7f0781648980"/>
        <function-ref name="led0On" scoped="" ref="0x7f0781648b10"/>
        <function-ref name="led2On" scoped="" ref="0x7f0781648ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f078162ab80" loc="45:../tinyos_ws18/tos/system/TimerMilliC.nc">
      <component-ref qname="FMClickC.Timer"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f078162ab80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f07825841a0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f0782584510"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f0781625110"/>
        <function-ref name="fired" scoped="" ref="0x7f07816285f0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f07816274a0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f0781627020"/>
        <function-ref name="getdt" scoped="" ref="0x7f0781625a10"/>
        <function-ref name="gett0" scoped="" ref="0x7f0781625590"/>
        <function-ref name="isRunning" scoped="" ref="0x7f0781628a70"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f0781629790"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f0781627ab0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f0781629c60"/>
        <function-ref name="stop" scoped="" ref="0x7f0781628170"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG0" ref="0x7f07815e6cb0" loc="103:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG0" scoped="" ref="0x7f07815e6cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f07815e5610"/>
        <function-ref name="isInput" scoped="" ref="0x7f07815e57a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f07815e5930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f07815e5ac0"/>
        <function-ref name="get" scoped="" ref="0x7f07815e5c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f07815e5de0"/>
        <function-ref name="set" scoped="" ref="0x7f07815e4020"/>
        <function-ref name="clr" scoped="" ref="0x7f07815e41b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD1" ref="0x7f0781602350" loc="77:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD1" scoped="" ref="0x7f0781602350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f07816026d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f0781602860"/>
        <function-ref name="toggle" scoped="" ref="0x7f07816029f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0781602b80"/>
        <function-ref name="get" scoped="" ref="0x7f0781602d10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0781601020"/>
        <function-ref name="set" scoped="" ref="0x7f07816011b0"/>
        <function-ref name="clr" scoped="" ref="0x7f0781601340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE3" ref="0x7f07815f6350" loc="88:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE3" scoped="" ref="0x7f07815f6350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f07815f66d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f07815f6860"/>
        <function-ref name="toggle" scoped="" ref="0x7f07815f69f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f07815f6b80"/>
        <function-ref name="get" scoped="" ref="0x7f07815f6d10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f07815f5020"/>
        <function-ref name="set" scoped="" ref="0x7f07815f51b0"/>
        <function-ref name="clr" scoped="" ref="0x7f07815f5340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF3" ref="0x7f07815eccb0" loc="97:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF3" scoped="" ref="0x7f07815eccb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f07815eb0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f07815eb230"/>
        <function-ref name="toggle" scoped="" ref="0x7f07815eb3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f07815eb550"/>
        <function-ref name="get" scoped="" ref="0x7f07815eb6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f07815eb870"/>
        <function-ref name="set" scoped="" ref="0x7f07815eba00"/>
        <function-ref name="clr" scoped="" ref="0x7f07815ebb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG5" ref="0x7f07815df060" loc="108:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG5" scoped="" ref="0x7f07815df060"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f07815df3e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f07815df570"/>
        <function-ref name="toggle" scoped="" ref="0x7f07815df700"/>
        <function-ref name="isOutput" scoped="" ref="0x7f07815df890"/>
        <function-ref name="get" scoped="" ref="0x7f07815dfa20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f07815dfbb0"/>
        <function-ref name="set" scoped="" ref="0x7f07815dfd40"/>
        <function-ref name="clr" scoped="" ref="0x7f07815de020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortH2" ref="0x7f07815dc990" loc="112:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortH2" scoped="" ref="0x7f07815dc990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f07815dcd10"/>
        <function-ref name="isInput" scoped="" ref="0x7f07815db020"/>
        <function-ref name="toggle" scoped="" ref="0x7f07815db1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f07815db340"/>
        <function-ref name="get" scoped="" ref="0x7f07815db4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f07815db660"/>
        <function-ref name="set" scoped="" ref="0x7f07815db7f0"/>
        <function-ref name="clr" scoped="" ref="0x7f07815db980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortH7" ref="0x7f07815d5990" loc="117:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortH7" scoped="" ref="0x7f07815d5990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f07815d5d10"/>
        <function-ref name="isInput" scoped="" ref="0x7f07815d4020"/>
        <function-ref name="toggle" scoped="" ref="0x7f07815d41b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f07815d4340"/>
        <function-ref name="get" scoped="" ref="0x7f07815d44d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f07815d4660"/>
        <function-ref name="set" scoped="" ref="0x7f07815d47f0"/>
        <function-ref name="clr" scoped="" ref="0x7f07815d4980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortJ6" ref="0x7f07815cc020" loc="125:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortJ6" scoped="" ref="0x7f07815cc020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f07815cc3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f07815cc530"/>
        <function-ref name="toggle" scoped="" ref="0x7f07815cc6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f07815cc850"/>
        <function-ref name="get" scoped="" ref="0x7f07815cc9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f07815ccb70"/>
        <function-ref name="set" scoped="" ref="0x7f07815ccd00"/>
        <function-ref name="clr" scoped="" ref="0x7f07815cb020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortK0" ref="0x7f07815ca670" loc="128:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortK0" scoped="" ref="0x7f07815ca670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f07815ca9f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f07815cab80"/>
        <function-ref name="toggle" scoped="" ref="0x7f07815cad10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f07815c9020"/>
        <function-ref name="get" scoped="" ref="0x7f07815c91b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f07815c9340"/>
        <function-ref name="set" scoped="" ref="0x7f07815c94d0"/>
        <function-ref name="clr" scoped="" ref="0x7f07815c9660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortL2" ref="0x7f07815be670" loc="139:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortL2" scoped="" ref="0x7f07815be670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f07815be9f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f07815beb80"/>
        <function-ref name="toggle" scoped="" ref="0x7f07815bed10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f07815bd020"/>
        <function-ref name="get" scoped="" ref="0x7f07815bd1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f07815bd340"/>
        <function-ref name="set" scoped="" ref="0x7f07815bd4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f07815bd660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA6" ref="0x7f078161a350" loc="55:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA6" scoped="" ref="0x7f078161a350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f078161a6d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f078161a860"/>
        <function-ref name="toggle" scoped="" ref="0x7f078161a9f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f078161ab80"/>
        <function-ref name="get" scoped="" ref="0x7f078161ad10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0781619020"/>
        <function-ref name="set" scoped="" ref="0x7f07816191b0"/>
        <function-ref name="clr" scoped="" ref="0x7f0781619340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF1" ref="0x7f07815ee670" loc="95:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF1" scoped="" ref="0x7f07815ee670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f07815ee9f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f07815eeb80"/>
        <function-ref name="toggle" scoped="" ref="0x7f07815eed10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f07815ed020"/>
        <function-ref name="get" scoped="" ref="0x7f07815ed1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f07815ed340"/>
        <function-ref name="set" scoped="" ref="0x7f07815ed4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f07815ed660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB0" ref="0x7f0781618990" loc="58:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB0" scoped="" ref="0x7f0781618990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0781618d10"/>
        <function-ref name="isInput" scoped="" ref="0x7f0781617020"/>
        <function-ref name="toggle" scoped="" ref="0x7f07816171b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0781617340"/>
        <function-ref name="get" scoped="" ref="0x7f07816174d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0781617660"/>
        <function-ref name="set" scoped="" ref="0x7f07816177f0"/>
        <function-ref name="clr" scoped="" ref="0x7f0781617980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC2" ref="0x7f078160b990" loc="69:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC2" scoped="" ref="0x7f078160b990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f078160bd10"/>
        <function-ref name="isInput" scoped="" ref="0x7f078160a020"/>
        <function-ref name="toggle" scoped="" ref="0x7f078160a1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f078160a340"/>
        <function-ref name="get" scoped="" ref="0x7f078160a4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f078160a660"/>
        <function-ref name="set" scoped="" ref="0x7f078160a7f0"/>
        <function-ref name="clr" scoped="" ref="0x7f078160a980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD4" ref="0x7f07815ffcb0" loc="80:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD4" scoped="" ref="0x7f07815ffcb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f07815fe0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f07815fe230"/>
        <function-ref name="toggle" scoped="" ref="0x7f07815fe3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f07815fe550"/>
        <function-ref name="get" scoped="" ref="0x7f07815fe6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f07815fe870"/>
        <function-ref name="set" scoped="" ref="0x7f07815fea00"/>
        <function-ref name="clr" scoped="" ref="0x7f07815feb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE6" ref="0x7f07815f2cb0" loc="91:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE6" scoped="" ref="0x7f07815f2cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f07815f10a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f07815f1230"/>
        <function-ref name="toggle" scoped="" ref="0x7f07815f13c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f07815f1550"/>
        <function-ref name="get" scoped="" ref="0x7f07815f16e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f07815f1870"/>
        <function-ref name="set" scoped="" ref="0x7f07815f1a00"/>
        <function-ref name="clr" scoped="" ref="0x7f07815f1b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA1" ref="0x7f07816204e0" loc="50:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA1" scoped="" ref="0x7f07816204e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0781620860"/>
        <function-ref name="isInput" scoped="" ref="0x7f07816209f0"/>
        <function-ref name="toggle" scoped="" ref="0x7f0781620b80"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0781620d10"/>
        <function-ref name="get" scoped="" ref="0x7f078161f020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f078161f1b0"/>
        <function-ref name="set" scoped="" ref="0x7f078161f340"/>
        <function-ref name="clr" scoped="" ref="0x7f078161f4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB3" ref="0x7f0781614350" loc="61:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB3" scoped="" ref="0x7f0781614350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f07816146d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f0781614860"/>
        <function-ref name="toggle" scoped="" ref="0x7f07816149f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0781614b80"/>
        <function-ref name="get" scoped="" ref="0x7f0781614d10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0781613020"/>
        <function-ref name="set" scoped="" ref="0x7f07816131b0"/>
        <function-ref name="clr" scoped="" ref="0x7f0781613340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC5" ref="0x7f0781607350" loc="72:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC5" scoped="" ref="0x7f0781607350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f07816076d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f0781607860"/>
        <function-ref name="toggle" scoped="" ref="0x7f07816079f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0781607b80"/>
        <function-ref name="get" scoped="" ref="0x7f0781607d10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0781606020"/>
        <function-ref name="set" scoped="" ref="0x7f07816061b0"/>
        <function-ref name="clr" scoped="" ref="0x7f0781606340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD7" ref="0x7f07815fb670" loc="83:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD7" scoped="" ref="0x7f07815fb670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f07815fb9f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f07815fbb80"/>
        <function-ref name="toggle" scoped="" ref="0x7f07815fbd10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f07815fa020"/>
        <function-ref name="get" scoped="" ref="0x7f07815fa1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f07815fa340"/>
        <function-ref name="set" scoped="" ref="0x7f07815fa4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f07815fa660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF6" ref="0x7f07815e8670" loc="100:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF6" scoped="" ref="0x7f07815e8670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f07815e89f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f07815e8b80"/>
        <function-ref name="toggle" scoped="" ref="0x7f07815e8d10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f07815e7020"/>
        <function-ref name="get" scoped="" ref="0x7f07815e71b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f07815e7340"/>
        <function-ref name="set" scoped="" ref="0x7f07815e74d0"/>
        <function-ref name="clr" scoped="" ref="0x7f07815e7660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG3" ref="0x7f07815e2b20" loc="106:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG3" scoped="" ref="0x7f07815e2b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f07815e1020"/>
        <function-ref name="isInput" scoped="" ref="0x7f07815e11b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f07815e1340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f07815e14d0"/>
        <function-ref name="get" scoped="" ref="0x7f07815e1660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f07815e17f0"/>
        <function-ref name="set" scoped="" ref="0x7f07815e1980"/>
        <function-ref name="clr" scoped="" ref="0x7f07815e1b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortH0" ref="0x7f07815de350" loc="110:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortH0" scoped="" ref="0x7f07815de350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f07815de6d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f07815de860"/>
        <function-ref name="toggle" scoped="" ref="0x7f07815de9f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f07815deb80"/>
        <function-ref name="get" scoped="" ref="0x7f07815ded10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f07815dd020"/>
        <function-ref name="set" scoped="" ref="0x7f07815dd1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f07815dd340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE1" ref="0x7f07815f9cb0" loc="86:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE1" scoped="" ref="0x7f07815f9cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f07815f80a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f07815f8230"/>
        <function-ref name="toggle" scoped="" ref="0x7f07815f83c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f07815f8550"/>
        <function-ref name="get" scoped="" ref="0x7f07815f86e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f07815f8870"/>
        <function-ref name="set" scoped="" ref="0x7f07815f8a00"/>
        <function-ref name="clr" scoped="" ref="0x7f07815f8b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortH5" ref="0x7f07815d8350" loc="115:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortH5" scoped="" ref="0x7f07815d8350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f07815d86d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f07815d8860"/>
        <function-ref name="toggle" scoped="" ref="0x7f07815d89f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f07815d8b80"/>
        <function-ref name="get" scoped="" ref="0x7f07815d8d10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f07815d7020"/>
        <function-ref name="set" scoped="" ref="0x7f07815d71b0"/>
        <function-ref name="clr" scoped="" ref="0x7f07815d7340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortJ1" ref="0x7f07815d2020" loc="120:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortJ1" scoped="" ref="0x7f07815d2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f07815d23a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f07815d2530"/>
        <function-ref name="toggle" scoped="" ref="0x7f07815d26c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f07815d2850"/>
        <function-ref name="get" scoped="" ref="0x7f07815d29e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f07815d2b70"/>
        <function-ref name="set" scoped="" ref="0x7f07815d2d00"/>
        <function-ref name="clr" scoped="" ref="0x7f07815d1020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortJ4" ref="0x7f07815cf990" loc="123:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortJ4" scoped="" ref="0x7f07815cf990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f07815cfd10"/>
        <function-ref name="isInput" scoped="" ref="0x7f07815ce020"/>
        <function-ref name="toggle" scoped="" ref="0x7f07815ce1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f07815ce340"/>
        <function-ref name="get" scoped="" ref="0x7f07815ce4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f07815ce660"/>
        <function-ref name="set" scoped="" ref="0x7f07815ce7f0"/>
        <function-ref name="clr" scoped="" ref="0x7f07815ce980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortK3" ref="0x7f07815c6020" loc="131:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortK3" scoped="" ref="0x7f07815c6020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f07815c63a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f07815c6530"/>
        <function-ref name="toggle" scoped="" ref="0x7f07815c66c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f07815c6850"/>
        <function-ref name="get" scoped="" ref="0x7f07815c69e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f07815c6b70"/>
        <function-ref name="set" scoped="" ref="0x7f07815c6d00"/>
        <function-ref name="clr" scoped="" ref="0x7f07815c5020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortK6" ref="0x7f07815c3990" loc="134:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortK6" scoped="" ref="0x7f07815c3990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f07815c3d10"/>
        <function-ref name="isInput" scoped="" ref="0x7f07815c2020"/>
        <function-ref name="toggle" scoped="" ref="0x7f07815c21b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f07815c2340"/>
        <function-ref name="get" scoped="" ref="0x7f07815c24d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f07815c2660"/>
        <function-ref name="set" scoped="" ref="0x7f07815c27f0"/>
        <function-ref name="clr" scoped="" ref="0x7f07815c2980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortL0" ref="0x7f07815c0020" loc="137:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortL0" scoped="" ref="0x7f07815c0020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f07815c03a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f07815c0530"/>
        <function-ref name="toggle" scoped="" ref="0x7f07815c06c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f07815c0850"/>
        <function-ref name="get" scoped="" ref="0x7f07815c09e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f07815c0b70"/>
        <function-ref name="set" scoped="" ref="0x7f07815c0d00"/>
        <function-ref name="clr" scoped="" ref="0x7f07815bf020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortL5" ref="0x7f07815b9020" loc="142:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortL5" scoped="" ref="0x7f07815b9020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f07815b93a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f07815b9530"/>
        <function-ref name="toggle" scoped="" ref="0x7f07815b96c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f07815b9850"/>
        <function-ref name="get" scoped="" ref="0x7f07815b99e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f07815b9b70"/>
        <function-ref name="set" scoped="" ref="0x7f07815b9d00"/>
        <function-ref name="clr" scoped="" ref="0x7f07815b8020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA4" ref="0x7f078161de40" loc="53:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA4" scoped="" ref="0x7f078161de40"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f078161c1e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f078161c370"/>
        <function-ref name="toggle" scoped="" ref="0x7f078161c500"/>
        <function-ref name="isOutput" scoped="" ref="0x7f078161c690"/>
        <function-ref name="get" scoped="" ref="0x7f078161c820"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f078161c9b0"/>
        <function-ref name="set" scoped="" ref="0x7f078161cb40"/>
        <function-ref name="clr" scoped="" ref="0x7f078161ccd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB6" ref="0x7f0781611cb0" loc="64:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB6" scoped="" ref="0x7f0781611cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f078160f0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f078160f230"/>
        <function-ref name="toggle" scoped="" ref="0x7f078160f3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f078160f550"/>
        <function-ref name="get" scoped="" ref="0x7f078160f6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f078160f870"/>
        <function-ref name="set" scoped="" ref="0x7f078160fa00"/>
        <function-ref name="clr" scoped="" ref="0x7f078160fb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG1" ref="0x7f07815e44e0" loc="104:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG1" scoped="" ref="0x7f07815e44e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f07815e4860"/>
        <function-ref name="isInput" scoped="" ref="0x7f07815e49f0"/>
        <function-ref name="toggle" scoped="" ref="0x7f07815e4b80"/>
        <function-ref name="isOutput" scoped="" ref="0x7f07815e4d10"/>
        <function-ref name="get" scoped="" ref="0x7f07815e3020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f07815e31b0"/>
        <function-ref name="set" scoped="" ref="0x7f07815e3340"/>
        <function-ref name="clr" scoped="" ref="0x7f07815e34d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC0" ref="0x7f078160d350" loc="67:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC0" scoped="" ref="0x7f078160d350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f078160d6d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f078160d860"/>
        <function-ref name="toggle" scoped="" ref="0x7f078160d9f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f078160db80"/>
        <function-ref name="get" scoped="" ref="0x7f078160dd10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f078160c020"/>
        <function-ref name="set" scoped="" ref="0x7f078160c1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f078160c340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD2" ref="0x7f0781601670" loc="78:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD2" scoped="" ref="0x7f0781601670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f07816019f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f0781601b80"/>
        <function-ref name="toggle" scoped="" ref="0x7f0781601d10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0781600020"/>
        <function-ref name="get" scoped="" ref="0x7f07816001b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0781600340"/>
        <function-ref name="set" scoped="" ref="0x7f07816004d0"/>
        <function-ref name="clr" scoped="" ref="0x7f0781600660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE4" ref="0x7f07815f5670" loc="89:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE4" scoped="" ref="0x7f07815f5670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f07815f59f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f07815f5b80"/>
        <function-ref name="toggle" scoped="" ref="0x7f07815f5d10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f07815f4020"/>
        <function-ref name="get" scoped="" ref="0x7f07815f41b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f07815f4340"/>
        <function-ref name="set" scoped="" ref="0x7f07815f44d0"/>
        <function-ref name="clr" scoped="" ref="0x7f07815f4660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF4" ref="0x7f07815ea020" loc="98:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF4" scoped="" ref="0x7f07815ea020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f07815ea3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f07815ea530"/>
        <function-ref name="toggle" scoped="" ref="0x7f07815ea6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f07815ea850"/>
        <function-ref name="get" scoped="" ref="0x7f07815ea9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f07815eab70"/>
        <function-ref name="set" scoped="" ref="0x7f07815ead00"/>
        <function-ref name="clr" scoped="" ref="0x7f07815e9020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortH3" ref="0x7f07815dbcb0" loc="113:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortH3" scoped="" ref="0x7f07815dbcb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f07815da0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f07815da230"/>
        <function-ref name="toggle" scoped="" ref="0x7f07815da3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f07815da550"/>
        <function-ref name="get" scoped="" ref="0x7f07815da6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f07815da870"/>
        <function-ref name="set" scoped="" ref="0x7f07815daa00"/>
        <function-ref name="clr" scoped="" ref="0x7f07815dab90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortJ7" ref="0x7f07815cb350" loc="126:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortJ7" scoped="" ref="0x7f07815cb350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f07815cb6d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f07815cb860"/>
        <function-ref name="toggle" scoped="" ref="0x7f07815cb9f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f07815cbb80"/>
        <function-ref name="get" scoped="" ref="0x7f07815cbd10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f07815ca020"/>
        <function-ref name="set" scoped="" ref="0x7f07815ca1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f07815ca340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortK1" ref="0x7f07815c9990" loc="129:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortK1" scoped="" ref="0x7f07815c9990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f07815c9d10"/>
        <function-ref name="isInput" scoped="" ref="0x7f07815c8020"/>
        <function-ref name="toggle" scoped="" ref="0x7f07815c81b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f07815c8340"/>
        <function-ref name="get" scoped="" ref="0x7f07815c84d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f07815c8660"/>
        <function-ref name="set" scoped="" ref="0x7f07815c87f0"/>
        <function-ref name="clr" scoped="" ref="0x7f07815c8980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortL3" ref="0x7f07815bd990" loc="140:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortL3" scoped="" ref="0x7f07815bd990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f07815bdd10"/>
        <function-ref name="isInput" scoped="" ref="0x7f07815bc020"/>
        <function-ref name="toggle" scoped="" ref="0x7f07815bc1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f07815bc340"/>
        <function-ref name="get" scoped="" ref="0x7f07815bc4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f07815bc660"/>
        <function-ref name="set" scoped="" ref="0x7f07815bc7f0"/>
        <function-ref name="clr" scoped="" ref="0x7f07815bc980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortJ2" ref="0x7f07815d1350" loc="121:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortJ2" scoped="" ref="0x7f07815d1350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f07815d16d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f07815d1860"/>
        <function-ref name="toggle" scoped="" ref="0x7f07815d19f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f07815d1b80"/>
        <function-ref name="get" scoped="" ref="0x7f07815d1d10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f07815d0020"/>
        <function-ref name="set" scoped="" ref="0x7f07815d01b0"/>
        <function-ref name="clr" scoped="" ref="0x7f07815d0340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA7" ref="0x7f0781619670" loc="56:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA7" scoped="" ref="0x7f0781619670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f07816199f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f0781619b80"/>
        <function-ref name="toggle" scoped="" ref="0x7f0781619d10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0781618020"/>
        <function-ref name="get" scoped="" ref="0x7f07816181b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0781618340"/>
        <function-ref name="set" scoped="" ref="0x7f07816184d0"/>
        <function-ref name="clr" scoped="" ref="0x7f0781618660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortK4" ref="0x7f07815c5350" loc="132:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortK4" scoped="" ref="0x7f07815c5350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f07815c56d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f07815c5860"/>
        <function-ref name="toggle" scoped="" ref="0x7f07815c59f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f07815c5b80"/>
        <function-ref name="get" scoped="" ref="0x7f07815c5d10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f07815c4020"/>
        <function-ref name="set" scoped="" ref="0x7f07815c41b0"/>
        <function-ref name="clr" scoped="" ref="0x7f07815c4340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortL6" ref="0x7f07815b8350" loc="143:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortL6" scoped="" ref="0x7f07815b8350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f07815b86d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f07815b8860"/>
        <function-ref name="toggle" scoped="" ref="0x7f07815b89f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f07815b8b80"/>
        <function-ref name="get" scoped="" ref="0x7f07815b8d10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f07815b7020"/>
        <function-ref name="set" scoped="" ref="0x7f07815b71b0"/>
        <function-ref name="clr" scoped="" ref="0x7f07815b7340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB1" ref="0x7f0781617cb0" loc="59:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB1" scoped="" ref="0x7f0781617cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f07816160a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f0781616230"/>
        <function-ref name="toggle" scoped="" ref="0x7f07816163c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0781616550"/>
        <function-ref name="get" scoped="" ref="0x7f07816166e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0781616870"/>
        <function-ref name="set" scoped="" ref="0x7f0781616a00"/>
        <function-ref name="clr" scoped="" ref="0x7f0781616b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC3" ref="0x7f078160acb0" loc="70:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC3" scoped="" ref="0x7f078160acb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f07816090a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f0781609230"/>
        <function-ref name="toggle" scoped="" ref="0x7f07816093c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0781609550"/>
        <function-ref name="get" scoped="" ref="0x7f07816096e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0781609870"/>
        <function-ref name="set" scoped="" ref="0x7f0781609a00"/>
        <function-ref name="clr" scoped="" ref="0x7f0781609b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD5" ref="0x7f07815fd020" loc="81:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD5" scoped="" ref="0x7f07815fd020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f07815fd3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f07815fd530"/>
        <function-ref name="toggle" scoped="" ref="0x7f07815fd6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f07815fd850"/>
        <function-ref name="get" scoped="" ref="0x7f07815fd9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f07815fdb70"/>
        <function-ref name="set" scoped="" ref="0x7f07815fdd00"/>
        <function-ref name="clr" scoped="" ref="0x7f07815fc020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE7" ref="0x7f07815f0020" loc="92:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE7" scoped="" ref="0x7f07815f0020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f07815f03a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f07815f0530"/>
        <function-ref name="toggle" scoped="" ref="0x7f07815f06c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f07815f0850"/>
        <function-ref name="get" scoped="" ref="0x7f07815f09e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f07815f0b70"/>
        <function-ref name="set" scoped="" ref="0x7f07815f0d00"/>
        <function-ref name="clr" scoped="" ref="0x7f07815ef020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA2" ref="0x7f078161f800" loc="51:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA2" scoped="" ref="0x7f078161f800"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f078161fb80"/>
        <function-ref name="isInput" scoped="" ref="0x7f078161fd10"/>
        <function-ref name="toggle" scoped="" ref="0x7f078161e020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f078161e1b0"/>
        <function-ref name="get" scoped="" ref="0x7f078161e340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f078161e4d0"/>
        <function-ref name="set" scoped="" ref="0x7f078161e660"/>
        <function-ref name="clr" scoped="" ref="0x7f078161e7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB4" ref="0x7f0781613670" loc="62:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB4" scoped="" ref="0x7f0781613670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0781613af0"/>
        <function-ref name="isInput" scoped="" ref="0x7f0781613c80"/>
        <function-ref name="toggle" scoped="" ref="0x7f0781613e10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0781612020"/>
        <function-ref name="get" scoped="" ref="0x7f07816121b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0781612340"/>
        <function-ref name="set" scoped="" ref="0x7f07816124d0"/>
        <function-ref name="clr" scoped="" ref="0x7f0781612660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC6" ref="0x7f0781606670" loc="73:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC6" scoped="" ref="0x7f0781606670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f07816069f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f0781606b80"/>
        <function-ref name="toggle" scoped="" ref="0x7f0781606d10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0781605020"/>
        <function-ref name="get" scoped="" ref="0x7f07816051b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0781605340"/>
        <function-ref name="set" scoped="" ref="0x7f07816054d0"/>
        <function-ref name="clr" scoped="" ref="0x7f0781605660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF7" ref="0x7f07815e7990" loc="101:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF7" scoped="" ref="0x7f07815e7990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f07815e7d10"/>
        <function-ref name="isInput" scoped="" ref="0x7f07815e6020"/>
        <function-ref name="toggle" scoped="" ref="0x7f07815e61b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f07815e6340"/>
        <function-ref name="get" scoped="" ref="0x7f07815e64d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f07815e6660"/>
        <function-ref name="set" scoped="" ref="0x7f07815e67f0"/>
        <function-ref name="clr" scoped="" ref="0x7f07815e6980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortH1" ref="0x7f07815dd670" loc="111:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortH1" scoped="" ref="0x7f07815dd670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f07815dd9f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f07815ddb80"/>
        <function-ref name="toggle" scoped="" ref="0x7f07815ddd10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f07815dc020"/>
        <function-ref name="get" scoped="" ref="0x7f07815dc1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f07815dc340"/>
        <function-ref name="set" scoped="" ref="0x7f07815dc4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f07815dc660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD0" ref="0x7f0781604cb0" loc="76:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD0" scoped="" ref="0x7f0781604cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0781603410"/>
        <function-ref name="isInput" scoped="" ref="0x7f07816035a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f0781603730"/>
        <function-ref name="isOutput" scoped="" ref="0x7f07816038c0"/>
        <function-ref name="get" scoped="" ref="0x7f0781603a50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0781603be0"/>
        <function-ref name="set" scoped="" ref="0x7f0781603d70"/>
        <function-ref name="clr" scoped="" ref="0x7f0781602020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE2" ref="0x7f07815f7020" loc="87:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE2" scoped="" ref="0x7f07815f7020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f07815f73a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f07815f7530"/>
        <function-ref name="toggle" scoped="" ref="0x7f07815f76c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f07815f7850"/>
        <function-ref name="get" scoped="" ref="0x7f07815f79e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f07815f7b70"/>
        <function-ref name="set" scoped="" ref="0x7f07815f7d00"/>
        <function-ref name="clr" scoped="" ref="0x7f07815f6020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF2" ref="0x7f07815ed990" loc="96:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF2" scoped="" ref="0x7f07815ed990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f07815edd10"/>
        <function-ref name="isInput" scoped="" ref="0x7f07815ec020"/>
        <function-ref name="toggle" scoped="" ref="0x7f07815ec1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f07815ec340"/>
        <function-ref name="get" scoped="" ref="0x7f07815ec4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f07815ec660"/>
        <function-ref name="set" scoped="" ref="0x7f07815ec7f0"/>
        <function-ref name="clr" scoped="" ref="0x7f07815ec980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG4" ref="0x7f07815e1e40" loc="107:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG4" scoped="" ref="0x7f07815e1e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f07815e01e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f07815e0370"/>
        <function-ref name="toggle" scoped="" ref="0x7f07815e0500"/>
        <function-ref name="isOutput" scoped="" ref="0x7f07815e0690"/>
        <function-ref name="get" scoped="" ref="0x7f07815e0820"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f07815e09b0"/>
        <function-ref name="set" scoped="" ref="0x7f07815e0b40"/>
        <function-ref name="clr" scoped="" ref="0x7f07815e0cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortH6" ref="0x7f07815d7670" loc="116:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortH6" scoped="" ref="0x7f07815d7670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f07815d79f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f07815d7b80"/>
        <function-ref name="toggle" scoped="" ref="0x7f07815d7d10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f07815d5020"/>
        <function-ref name="get" scoped="" ref="0x7f07815d51b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f07815d5340"/>
        <function-ref name="set" scoped="" ref="0x7f07815d54d0"/>
        <function-ref name="clr" scoped="" ref="0x7f07815d5660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortJ5" ref="0x7f07815cecb0" loc="124:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortJ5" scoped="" ref="0x7f07815cecb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f07815cd0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f07815cd230"/>
        <function-ref name="toggle" scoped="" ref="0x7f07815cd3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f07815cd550"/>
        <function-ref name="get" scoped="" ref="0x7f07815cd6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f07815cd870"/>
        <function-ref name="set" scoped="" ref="0x7f07815cda00"/>
        <function-ref name="clr" scoped="" ref="0x7f07815cdb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortK7" ref="0x7f07815c2cb0" loc="135:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortK7" scoped="" ref="0x7f07815c2cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f07815c10a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f07815c1230"/>
        <function-ref name="toggle" scoped="" ref="0x7f07815c13c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f07815c1550"/>
        <function-ref name="get" scoped="" ref="0x7f07815c16e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f07815c1870"/>
        <function-ref name="set" scoped="" ref="0x7f07815c1a00"/>
        <function-ref name="clr" scoped="" ref="0x7f07815c1b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortL1" ref="0x7f07815bf350" loc="138:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortL1" scoped="" ref="0x7f07815bf350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f07815bf6d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f07815bf860"/>
        <function-ref name="toggle" scoped="" ref="0x7f07815bf9f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f07815bfb80"/>
        <function-ref name="get" scoped="" ref="0x7f07815bfd10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f07815be020"/>
        <function-ref name="set" scoped="" ref="0x7f07815be1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f07815be340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA5" ref="0x7f078161b060" loc="54:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA5" scoped="" ref="0x7f078161b060"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f078161b3e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f078161b570"/>
        <function-ref name="toggle" scoped="" ref="0x7f078161b700"/>
        <function-ref name="isOutput" scoped="" ref="0x7f078161b890"/>
        <function-ref name="get" scoped="" ref="0x7f078161ba20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f078161bbb0"/>
        <function-ref name="set" scoped="" ref="0x7f078161bd40"/>
        <function-ref name="clr" scoped="" ref="0x7f078161a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB7" ref="0x7f078160e020" loc="65:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB7" scoped="" ref="0x7f078160e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f078160e3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f078160e530"/>
        <function-ref name="toggle" scoped="" ref="0x7f078160e6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f078160e850"/>
        <function-ref name="get" scoped="" ref="0x7f078160e9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f078160eb70"/>
        <function-ref name="set" scoped="" ref="0x7f078160ed00"/>
        <function-ref name="clr" scoped="" ref="0x7f078160d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF0" ref="0x7f07815ef350" loc="94:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF0" scoped="" ref="0x7f07815ef350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f07815ef6d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f07815ef860"/>
        <function-ref name="toggle" scoped="" ref="0x7f07815ef9f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f07815efb80"/>
        <function-ref name="get" scoped="" ref="0x7f07815efd10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f07815ee020"/>
        <function-ref name="set" scoped="" ref="0x7f07815ee1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f07815ee340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC1" ref="0x7f078160c670" loc="68:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC1" scoped="" ref="0x7f078160c670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f078160c9f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f078160cb80"/>
        <function-ref name="toggle" scoped="" ref="0x7f078160cd10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f078160b020"/>
        <function-ref name="get" scoped="" ref="0x7f078160b1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f078160b340"/>
        <function-ref name="set" scoped="" ref="0x7f078160b4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f078160b660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD3" ref="0x7f0781600990" loc="79:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD3" scoped="" ref="0x7f0781600990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0781600d10"/>
        <function-ref name="isInput" scoped="" ref="0x7f07815ff020"/>
        <function-ref name="toggle" scoped="" ref="0x7f07815ff1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f07815ff340"/>
        <function-ref name="get" scoped="" ref="0x7f07815ff4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f07815ff660"/>
        <function-ref name="set" scoped="" ref="0x7f07815ff7f0"/>
        <function-ref name="clr" scoped="" ref="0x7f07815ff980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE5" ref="0x7f07815f4990" loc="90:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE5" scoped="" ref="0x7f07815f4990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f07815f4d10"/>
        <function-ref name="isInput" scoped="" ref="0x7f07815f2020"/>
        <function-ref name="toggle" scoped="" ref="0x7f07815f21b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f07815f2340"/>
        <function-ref name="get" scoped="" ref="0x7f07815f24d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f07815f2660"/>
        <function-ref name="set" scoped="" ref="0x7f07815f27f0"/>
        <function-ref name="clr" scoped="" ref="0x7f07815f2980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF5" ref="0x7f07815e9350" loc="99:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF5" scoped="" ref="0x7f07815e9350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f07815e96d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f07815e9860"/>
        <function-ref name="toggle" scoped="" ref="0x7f07815e99f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f07815e9b80"/>
        <function-ref name="get" scoped="" ref="0x7f07815e9d10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f07815e8020"/>
        <function-ref name="set" scoped="" ref="0x7f07815e81b0"/>
        <function-ref name="clr" scoped="" ref="0x7f07815e8340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA0" ref="0x7f07816211e0" loc="49:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA0" scoped="" ref="0x7f07816211e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0781621560"/>
        <function-ref name="isInput" scoped="" ref="0x7f07816216f0"/>
        <function-ref name="toggle" scoped="" ref="0x7f0781621880"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0781621a10"/>
        <function-ref name="get" scoped="" ref="0x7f0781621ba0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0781621d30"/>
        <function-ref name="set" scoped="" ref="0x7f0781620020"/>
        <function-ref name="clr" scoped="" ref="0x7f07816201b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB2" ref="0x7f0781615020" loc="60:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB2" scoped="" ref="0x7f0781615020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f07816153a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f0781615530"/>
        <function-ref name="toggle" scoped="" ref="0x7f07816156c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0781615850"/>
        <function-ref name="get" scoped="" ref="0x7f07816159e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0781615b70"/>
        <function-ref name="set" scoped="" ref="0x7f0781615d00"/>
        <function-ref name="clr" scoped="" ref="0x7f0781614020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC4" ref="0x7f0781608020" loc="71:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC4" scoped="" ref="0x7f0781608020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f07816083a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f0781608530"/>
        <function-ref name="toggle" scoped="" ref="0x7f07816086c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0781608850"/>
        <function-ref name="get" scoped="" ref="0x7f07816089e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0781608b70"/>
        <function-ref name="set" scoped="" ref="0x7f0781608d00"/>
        <function-ref name="clr" scoped="" ref="0x7f0781607020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD6" ref="0x7f07815fc350" loc="82:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD6" scoped="" ref="0x7f07815fc350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f07815fc6d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f07815fc860"/>
        <function-ref name="toggle" scoped="" ref="0x7f07815fc9f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f07815fcb80"/>
        <function-ref name="get" scoped="" ref="0x7f07815fcd10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f07815fb020"/>
        <function-ref name="set" scoped="" ref="0x7f07815fb1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f07815fb340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG2" ref="0x7f07815e3800" loc="105:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG2" scoped="" ref="0x7f07815e3800"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f07815e3b80"/>
        <function-ref name="isInput" scoped="" ref="0x7f07815e3d10"/>
        <function-ref name="toggle" scoped="" ref="0x7f07815e2020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f07815e21b0"/>
        <function-ref name="get" scoped="" ref="0x7f07815e2340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f07815e24d0"/>
        <function-ref name="set" scoped="" ref="0x7f07815e2660"/>
        <function-ref name="clr" scoped="" ref="0x7f07815e27f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortH4" ref="0x7f07815d9020" loc="114:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortH4" scoped="" ref="0x7f07815d9020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f07815d93a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f07815d9530"/>
        <function-ref name="toggle" scoped="" ref="0x7f07815d96c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f07815d9850"/>
        <function-ref name="get" scoped="" ref="0x7f07815d99e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f07815d9b70"/>
        <function-ref name="set" scoped="" ref="0x7f07815d9d00"/>
        <function-ref name="clr" scoped="" ref="0x7f07815d8020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortJ0" ref="0x7f07815d4cb0" loc="119:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortJ0" scoped="" ref="0x7f07815d4cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f07815d30a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f07815d3230"/>
        <function-ref name="toggle" scoped="" ref="0x7f07815d33c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f07815d3550"/>
        <function-ref name="get" scoped="" ref="0x7f07815d36e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f07815d3870"/>
        <function-ref name="set" scoped="" ref="0x7f07815d3a00"/>
        <function-ref name="clr" scoped="" ref="0x7f07815d3b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE0" ref="0x7f07815fa990" loc="85:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE0" scoped="" ref="0x7f07815fa990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f07815fad10"/>
        <function-ref name="isInput" scoped="" ref="0x7f07815f9020"/>
        <function-ref name="toggle" scoped="" ref="0x7f07815f91b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f07815f9340"/>
        <function-ref name="get" scoped="" ref="0x7f07815f94d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f07815f9660"/>
        <function-ref name="set" scoped="" ref="0x7f07815f97f0"/>
        <function-ref name="clr" scoped="" ref="0x7f07815f9980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortJ3" ref="0x7f07815d0670" loc="122:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortJ3" scoped="" ref="0x7f07815d0670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f07815d09f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f07815d0b80"/>
        <function-ref name="toggle" scoped="" ref="0x7f07815d0d10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f07815cf020"/>
        <function-ref name="get" scoped="" ref="0x7f07815cf1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f07815cf340"/>
        <function-ref name="set" scoped="" ref="0x7f07815cf4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f07815cf660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortK2" ref="0x7f07815c8cb0" loc="130:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortK2" scoped="" ref="0x7f07815c8cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f07815c70a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f07815c7230"/>
        <function-ref name="toggle" scoped="" ref="0x7f07815c73c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f07815c7550"/>
        <function-ref name="get" scoped="" ref="0x7f07815c76e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f07815c7870"/>
        <function-ref name="set" scoped="" ref="0x7f07815c7a00"/>
        <function-ref name="clr" scoped="" ref="0x7f07815c7b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortK5" ref="0x7f07815c4670" loc="133:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortK5" scoped="" ref="0x7f07815c4670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f07815c49f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f07815c4b80"/>
        <function-ref name="toggle" scoped="" ref="0x7f07815c4d10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f07815c3020"/>
        <function-ref name="get" scoped="" ref="0x7f07815c31b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f07815c3340"/>
        <function-ref name="set" scoped="" ref="0x7f07815c34d0"/>
        <function-ref name="clr" scoped="" ref="0x7f07815c3660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortL4" ref="0x7f07815bccb0" loc="141:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortL4" scoped="" ref="0x7f07815bccb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f07815bb0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f07815bb230"/>
        <function-ref name="toggle" scoped="" ref="0x7f07815bb3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f07815bb550"/>
        <function-ref name="get" scoped="" ref="0x7f07815bb6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f07815bb870"/>
        <function-ref name="set" scoped="" ref="0x7f07815bba00"/>
        <function-ref name="clr" scoped="" ref="0x7f07815bbb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortL7" ref="0x7f07815b7670" loc="144:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortL7" scoped="" ref="0x7f07815b7670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f07815b79f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f07815b7b80"/>
        <function-ref name="toggle" scoped="" ref="0x7f07815b7d10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f07815b6020"/>
        <function-ref name="get" scoped="" ref="0x7f07815b61b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f07815b6340"/>
        <function-ref name="set" scoped="" ref="0x7f07815b64d0"/>
        <function-ref name="clr" scoped="" ref="0x7f07815b6660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC7" ref="0x7f0781605990" loc="74:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC7" scoped="" ref="0x7f0781605990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0781605d10"/>
        <function-ref name="isInput" scoped="" ref="0x7f0781604020"/>
        <function-ref name="toggle" scoped="" ref="0x7f07816041b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0781604340"/>
        <function-ref name="get" scoped="" ref="0x7f07816044d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0781604660"/>
        <function-ref name="set" scoped="" ref="0x7f07816047f0"/>
        <function-ref name="clr" scoped="" ref="0x7f0781604980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA3" ref="0x7f078161eb20" loc="52:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA3" scoped="" ref="0x7f078161eb20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f078161d020"/>
        <function-ref name="isInput" scoped="" ref="0x7f078161d1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f078161d340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f078161d4d0"/>
        <function-ref name="get" scoped="" ref="0x7f078161d660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f078161d7f0"/>
        <function-ref name="set" scoped="" ref="0x7f078161d980"/>
        <function-ref name="clr" scoped="" ref="0x7f078161db10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB5" ref="0x7f0781612990" loc="63:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB5" scoped="" ref="0x7f0781612990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0781612d10"/>
        <function-ref name="isInput" scoped="" ref="0x7f0781611020"/>
        <function-ref name="toggle" scoped="" ref="0x7f07816111b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0781611340"/>
        <function-ref name="get" scoped="" ref="0x7f07816114d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0781611660"/>
        <function-ref name="set" scoped="" ref="0x7f07816117f0"/>
        <function-ref name="clr" scoped="" ref="0x7f0781611980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7f07815b1a80" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7f07815b1a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f07815b1e00"/>
        <function-ref name="isInput" scoped="" ref="0x7f07815b0020"/>
        <function-ref name="toggle" scoped="" ref="0x7f07815b01b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f07815b0340"/>
        <function-ref name="get" scoped="" ref="0x7f07815b04d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f07815b0660"/>
        <function-ref name="set" scoped="" ref="0x7f07815b07f0"/>
        <function-ref name="clr" scoped="" ref="0x7f07815b0980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7f07815ac020" loc="49:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7f07815ac020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f07815ac3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f07815ac530"/>
        <function-ref name="toggle" scoped="" ref="0x7f07815ac6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f07815ac850"/>
        <function-ref name="get" scoped="" ref="0x7f07815ac9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f07815acb70"/>
        <function-ref name="set" scoped="" ref="0x7f07815acd00"/>
        <function-ref name="clr" scoped="" ref="0x7f07815ab020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7f07815b37a0" loc="44:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7f07815b37a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f07815b3b20"/>
        <function-ref name="isInput" scoped="" ref="0x7f07815b3cb0"/>
        <function-ref name="toggle" scoped="" ref="0x7f07815b3e40"/>
        <function-ref name="isOutput" scoped="" ref="0x7f07815b2020"/>
        <function-ref name="get" scoped="" ref="0x7f07815b21b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f07815b2340"/>
        <function-ref name="set" scoped="" ref="0x7f07815b24d0"/>
        <function-ref name="clr" scoped="" ref="0x7f07815b2660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7f07815b0c10" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7f07815b0c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f07815ae020"/>
        <function-ref name="isInput" scoped="" ref="0x7f07815ae1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f07815ae340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f07815ae4d0"/>
        <function-ref name="get" scoped="" ref="0x7f07815ae660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f07815ae7f0"/>
        <function-ref name="set" scoped="" ref="0x7f07815ae980"/>
        <function-ref name="clr" scoped="" ref="0x7f07815aeb10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7f07815ab2b0" loc="50:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7f07815ab2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f07815ab630"/>
        <function-ref name="isInput" scoped="" ref="0x7f07815ab7c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f07815ab950"/>
        <function-ref name="isOutput" scoped="" ref="0x7f07815abae0"/>
        <function-ref name="get" scoped="" ref="0x7f07815abc70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f07815abe00"/>
        <function-ref name="set" scoped="" ref="0x7f07815aa020"/>
        <function-ref name="clr" scoped="" ref="0x7f07815aa1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7f07815b28f0" loc="45:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7f07815b28f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f07815b2c70"/>
        <function-ref name="isInput" scoped="" ref="0x7f07815b2e00"/>
        <function-ref name="toggle" scoped="" ref="0x7f07815b1020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f07815b11b0"/>
        <function-ref name="get" scoped="" ref="0x7f07815b1340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f07815b14d0"/>
        <function-ref name="set" scoped="" ref="0x7f07815b1660"/>
        <function-ref name="clr" scoped="" ref="0x7f07815b17f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7f07815aeda0" loc="48:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7f07815aeda0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f07815ad180"/>
        <function-ref name="isInput" scoped="" ref="0x7f07815ad310"/>
        <function-ref name="toggle" scoped="" ref="0x7f07815ad4a0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f07815ad630"/>
        <function-ref name="get" scoped="" ref="0x7f07815ad7c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f07815ad950"/>
        <function-ref name="set" scoped="" ref="0x7f07815adae0"/>
        <function-ref name="clr" scoped="" ref="0x7f07815adc70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7f07815aa440" loc="51:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7f07815aa440"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f07815aa7c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f07815aa950"/>
        <function-ref name="toggle" scoped="" ref="0x7f07815aaae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f07815aac70"/>
        <function-ref name="get" scoped="" ref="0x7f07815aae00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f07815a9020"/>
        <function-ref name="set" scoped="" ref="0x7f07815a91b0"/>
        <function-ref name="clr" scoped="" ref="0x7f07815a9340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f0780b93da0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortA.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f0780b93da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0780b92180"/>
        <function-ref name="isInput" scoped="" ref="0x7f0780b92310"/>
        <function-ref name="toggle" scoped="" ref="0x7f0780b924a0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0780b92630"/>
        <function-ref name="get" scoped="" ref="0x7f0780b927c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0780b92950"/>
        <function-ref name="set" scoped="" ref="0x7f0780b92ae0"/>
        <function-ref name="clr" scoped="" ref="0x7f0780b92c70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f0780b8f0a0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortA.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f0780b8f0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0780b8f420"/>
        <function-ref name="isInput" scoped="" ref="0x7f0780b8f5b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f0780b8f740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0780b8f8d0"/>
        <function-ref name="get" scoped="" ref="0x7f0780b8fa60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0780b8fbf0"/>
        <function-ref name="set" scoped="" ref="0x7f0780b8fd80"/>
        <function-ref name="clr" scoped="" ref="0x7f0780b8e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f0780b8c3f0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortA.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f0780b8c3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0780b8c770"/>
        <function-ref name="isInput" scoped="" ref="0x7f0780b8c900"/>
        <function-ref name="toggle" scoped="" ref="0x7f0780b8ca90"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0780b8cc20"/>
        <function-ref name="get" scoped="" ref="0x7f0780b8cdb0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0780b8b020"/>
        <function-ref name="set" scoped="" ref="0x7f0780b8b1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f0780b8b340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f0780b896d0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortA.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f0780b896d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0780b89a50"/>
        <function-ref name="isInput" scoped="" ref="0x7f0780b89be0"/>
        <function-ref name="toggle" scoped="" ref="0x7f0780b89d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0780b88020"/>
        <function-ref name="get" scoped="" ref="0x7f0780b881b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0780b88340"/>
        <function-ref name="set" scoped="" ref="0x7f0780b884d0"/>
        <function-ref name="clr" scoped="" ref="0x7f0780b88660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f0780b819b0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortA.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f0780b819b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0780b81d30"/>
        <function-ref name="isInput" scoped="" ref="0x7f0780b80020"/>
        <function-ref name="toggle" scoped="" ref="0x7f0780b801b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0780b80340"/>
        <function-ref name="get" scoped="" ref="0x7f0780b804d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0780b80660"/>
        <function-ref name="set" scoped="" ref="0x7f0780b807f0"/>
        <function-ref name="clr" scoped="" ref="0x7f0780b80980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f0780b7ee20" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortA.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f0780b7ee20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0780b7d1c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f0780b7d350"/>
        <function-ref name="toggle" scoped="" ref="0x7f0780b7d4e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0780b7d670"/>
        <function-ref name="get" scoped="" ref="0x7f0780b7d800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0780b7d990"/>
        <function-ref name="set" scoped="" ref="0x7f0780b7db20"/>
        <function-ref name="clr" scoped="" ref="0x7f0780b7dcb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f0780b7a0a0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortA.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f0780b7a0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0780b7a420"/>
        <function-ref name="isInput" scoped="" ref="0x7f0780b7a5b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f0780b7a740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0780b7a8d0"/>
        <function-ref name="get" scoped="" ref="0x7f0780b7aa60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0780b7abf0"/>
        <function-ref name="set" scoped="" ref="0x7f0780b7ad80"/>
        <function-ref name="clr" scoped="" ref="0x7f0780b79020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f0780b773f0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortA.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f0780b773f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0780b77770"/>
        <function-ref name="isInput" scoped="" ref="0x7f0780b77900"/>
        <function-ref name="toggle" scoped="" ref="0x7f0780b77a90"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0780b77c20"/>
        <function-ref name="get" scoped="" ref="0x7f0780b77db0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0780b76020"/>
        <function-ref name="set" scoped="" ref="0x7f0780b761b0"/>
        <function-ref name="clr" scoped="" ref="0x7f0780b76340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7f07815a1da0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7f07815a1da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f07815a0180"/>
        <function-ref name="isInput" scoped="" ref="0x7f07815a0310"/>
        <function-ref name="toggle" scoped="" ref="0x7f07815a04a0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f07815a0630"/>
        <function-ref name="get" scoped="" ref="0x7f07815a07c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f07815a0950"/>
        <function-ref name="set" scoped="" ref="0x7f07815a0ae0"/>
        <function-ref name="clr" scoped="" ref="0x7f07815a0c70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7f078159d440" loc="49:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7f078159d440"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f078159d7c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f078159d950"/>
        <function-ref name="toggle" scoped="" ref="0x7f078159dae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f078159dc70"/>
        <function-ref name="get" scoped="" ref="0x7f078159de00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f078159c020"/>
        <function-ref name="set" scoped="" ref="0x7f078159c1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f078159c340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7f07815a4a20" loc="44:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7f07815a4a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f07815a4da0"/>
        <function-ref name="isInput" scoped="" ref="0x7f07815a2020"/>
        <function-ref name="toggle" scoped="" ref="0x7f07815a21b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f07815a2340"/>
        <function-ref name="get" scoped="" ref="0x7f07815a24d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f07815a2660"/>
        <function-ref name="set" scoped="" ref="0x7f07815a27f0"/>
        <function-ref name="clr" scoped="" ref="0x7f07815a2980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7f078159f020" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7f078159f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f078159f3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f078159f530"/>
        <function-ref name="toggle" scoped="" ref="0x7f078159f6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f078159f850"/>
        <function-ref name="get" scoped="" ref="0x7f078159f9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f078159fb70"/>
        <function-ref name="set" scoped="" ref="0x7f078159fd00"/>
        <function-ref name="clr" scoped="" ref="0x7f078159e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7f078159c5d0" loc="50:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7f078159c5d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f078159c950"/>
        <function-ref name="isInput" scoped="" ref="0x7f078159cae0"/>
        <function-ref name="toggle" scoped="" ref="0x7f078159cc70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f078159ce00"/>
        <function-ref name="get" scoped="" ref="0x7f078159b020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f078159b1b0"/>
        <function-ref name="set" scoped="" ref="0x7f078159b340"/>
        <function-ref name="clr" scoped="" ref="0x7f078159b4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7f07815a2c10" loc="45:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7f07815a2c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f07815a1020"/>
        <function-ref name="isInput" scoped="" ref="0x7f07815a11b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f07815a1340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f07815a14d0"/>
        <function-ref name="get" scoped="" ref="0x7f07815a1660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f07815a17f0"/>
        <function-ref name="set" scoped="" ref="0x7f07815a1980"/>
        <function-ref name="clr" scoped="" ref="0x7f07815a1b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7f078159e2b0" loc="48:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7f078159e2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f078159e630"/>
        <function-ref name="isInput" scoped="" ref="0x7f078159e7c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f078159e950"/>
        <function-ref name="isOutput" scoped="" ref="0x7f078159eae0"/>
        <function-ref name="get" scoped="" ref="0x7f078159ec70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f078159ee00"/>
        <function-ref name="set" scoped="" ref="0x7f078159d020"/>
        <function-ref name="clr" scoped="" ref="0x7f078159d1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7f078159b760" loc="51:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7f078159b760"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f078159bae0"/>
        <function-ref name="isInput" scoped="" ref="0x7f078159bc70"/>
        <function-ref name="toggle" scoped="" ref="0x7f078159be00"/>
        <function-ref name="isOutput" scoped="" ref="0x7f078159a020"/>
        <function-ref name="get" scoped="" ref="0x7f078159a1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f078159a340"/>
        <function-ref name="set" scoped="" ref="0x7f078159a4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f078159a660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f0780b23060" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortB.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f0780b23060"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0780b233e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f0780b23570"/>
        <function-ref name="toggle" scoped="" ref="0x7f0780b23700"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0780b23890"/>
        <function-ref name="get" scoped="" ref="0x7f0780b23a20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0780b23bb0"/>
        <function-ref name="set" scoped="" ref="0x7f0780b23d40"/>
        <function-ref name="clr" scoped="" ref="0x7f0780b21020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f0780b1f3f0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortB.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f0780b1f3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0780b1f770"/>
        <function-ref name="isInput" scoped="" ref="0x7f0780b1f900"/>
        <function-ref name="toggle" scoped="" ref="0x7f0780b1fa90"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0780b1fc20"/>
        <function-ref name="get" scoped="" ref="0x7f0780b1fdb0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0780b1e020"/>
        <function-ref name="set" scoped="" ref="0x7f0780b1e1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f0780b1e340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f0780b1c6d0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortB.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f0780b1c6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0780b1ca50"/>
        <function-ref name="isInput" scoped="" ref="0x7f0780b1cbe0"/>
        <function-ref name="toggle" scoped="" ref="0x7f0780b1cd70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0780b1b020"/>
        <function-ref name="get" scoped="" ref="0x7f0780b1b1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0780b1b340"/>
        <function-ref name="set" scoped="" ref="0x7f0780b1b4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f0780b1b660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f0780b199b0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortB.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f0780b199b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0780b19d30"/>
        <function-ref name="isInput" scoped="" ref="0x7f0780b18020"/>
        <function-ref name="toggle" scoped="" ref="0x7f0780b181b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0780b18340"/>
        <function-ref name="get" scoped="" ref="0x7f0780b184d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0780b18660"/>
        <function-ref name="set" scoped="" ref="0x7f0780b187f0"/>
        <function-ref name="clr" scoped="" ref="0x7f0780b18980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f0780b16e20" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortB.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f0780b16e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0780b151c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f0780b15350"/>
        <function-ref name="toggle" scoped="" ref="0x7f0780b154e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0780b15670"/>
        <function-ref name="get" scoped="" ref="0x7f0780b15800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0780b15990"/>
        <function-ref name="set" scoped="" ref="0x7f0780b15b20"/>
        <function-ref name="clr" scoped="" ref="0x7f0780b15cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f0780b120a0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortB.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f0780b120a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0780b12420"/>
        <function-ref name="isInput" scoped="" ref="0x7f0780b125b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f0780b12740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0780b128d0"/>
        <function-ref name="get" scoped="" ref="0x7f0780b12a60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0780b12bf0"/>
        <function-ref name="set" scoped="" ref="0x7f0780b12d80"/>
        <function-ref name="clr" scoped="" ref="0x7f0780b11020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f0780b0f3f0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortB.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f0780b0f3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0780b0f770"/>
        <function-ref name="isInput" scoped="" ref="0x7f0780b0f900"/>
        <function-ref name="toggle" scoped="" ref="0x7f0780b0fa90"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0780b0fc20"/>
        <function-ref name="get" scoped="" ref="0x7f0780b0fdb0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0780b0e020"/>
        <function-ref name="set" scoped="" ref="0x7f0780b0e1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f0780b0e340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f0780b0c6d0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortB.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f0780b0c6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0780b0ca50"/>
        <function-ref name="isInput" scoped="" ref="0x7f0780b0cbe0"/>
        <function-ref name="toggle" scoped="" ref="0x7f0780b0cd70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0780b0b020"/>
        <function-ref name="get" scoped="" ref="0x7f0780b0b1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0780b0b340"/>
        <function-ref name="set" scoped="" ref="0x7f0780b0b4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f0780b0b660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7f0781591020" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7f0781591020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f07815913a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f0781591530"/>
        <function-ref name="toggle" scoped="" ref="0x7f07815916c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0781591850"/>
        <function-ref name="get" scoped="" ref="0x7f07815919e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0781591b70"/>
        <function-ref name="set" scoped="" ref="0x7f0781591d00"/>
        <function-ref name="clr" scoped="" ref="0x7f0781590020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7f078158e5d0" loc="49:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7f078158e5d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f078158e950"/>
        <function-ref name="isInput" scoped="" ref="0x7f078158eae0"/>
        <function-ref name="toggle" scoped="" ref="0x7f078158ec70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f078158ee00"/>
        <function-ref name="get" scoped="" ref="0x7f078158d020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f078158d1b0"/>
        <function-ref name="set" scoped="" ref="0x7f078158d340"/>
        <function-ref name="clr" scoped="" ref="0x7f078158d4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7f0781594d30" loc="44:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7f0781594d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f07815930e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f0781593270"/>
        <function-ref name="toggle" scoped="" ref="0x7f0781593400"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0781593590"/>
        <function-ref name="get" scoped="" ref="0x7f0781593720"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f07815938b0"/>
        <function-ref name="set" scoped="" ref="0x7f0781593a40"/>
        <function-ref name="clr" scoped="" ref="0x7f0781593bd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7f07815902b0" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7f07815902b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0781590630"/>
        <function-ref name="isInput" scoped="" ref="0x7f07815907c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f0781590950"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0781590ae0"/>
        <function-ref name="get" scoped="" ref="0x7f0781590c70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0781590e00"/>
        <function-ref name="set" scoped="" ref="0x7f078158f020"/>
        <function-ref name="clr" scoped="" ref="0x7f078158f1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7f078158d760" loc="50:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7f078158d760"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f078158dae0"/>
        <function-ref name="isInput" scoped="" ref="0x7f078158dc70"/>
        <function-ref name="toggle" scoped="" ref="0x7f078158de00"/>
        <function-ref name="isOutput" scoped="" ref="0x7f078158c020"/>
        <function-ref name="get" scoped="" ref="0x7f078158c1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f078158c340"/>
        <function-ref name="set" scoped="" ref="0x7f078158c4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f078158c660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7f0781593e60" loc="45:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7f0781593e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0781592210"/>
        <function-ref name="isInput" scoped="" ref="0x7f07815923a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f0781592530"/>
        <function-ref name="isOutput" scoped="" ref="0x7f07815926c0"/>
        <function-ref name="get" scoped="" ref="0x7f0781592850"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f07815929e0"/>
        <function-ref name="set" scoped="" ref="0x7f0781592b70"/>
        <function-ref name="clr" scoped="" ref="0x7f0781592d00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7f078158f440" loc="48:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7f078158f440"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f078158f7c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f078158f950"/>
        <function-ref name="toggle" scoped="" ref="0x7f078158fae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f078158fc70"/>
        <function-ref name="get" scoped="" ref="0x7f078158fe00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f078158e020"/>
        <function-ref name="set" scoped="" ref="0x7f078158e1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f078158e340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7f078158c8f0" loc="51:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7f078158c8f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f078158cc70"/>
        <function-ref name="isInput" scoped="" ref="0x7f078158ce00"/>
        <function-ref name="toggle" scoped="" ref="0x7f078158b020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f078158b1b0"/>
        <function-ref name="get" scoped="" ref="0x7f078158b340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f078158b4d0"/>
        <function-ref name="set" scoped="" ref="0x7f078158b660"/>
        <function-ref name="clr" scoped="" ref="0x7f078158b7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f0780ab8a60" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortC.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f0780ab8a60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0780ab8de0"/>
        <function-ref name="isInput" scoped="" ref="0x7f0780ab6020"/>
        <function-ref name="toggle" scoped="" ref="0x7f0780ab61b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0780ab6340"/>
        <function-ref name="get" scoped="" ref="0x7f0780ab64d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0780ab6660"/>
        <function-ref name="set" scoped="" ref="0x7f0780ab67f0"/>
        <function-ref name="clr" scoped="" ref="0x7f0780ab6980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f0780ab4e20" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortC.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f0780ab4e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0780ab31c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f0780ab3350"/>
        <function-ref name="toggle" scoped="" ref="0x7f0780ab34e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0780ab3670"/>
        <function-ref name="get" scoped="" ref="0x7f0780ab3800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0780ab3990"/>
        <function-ref name="set" scoped="" ref="0x7f0780ab3b20"/>
        <function-ref name="clr" scoped="" ref="0x7f0780ab3cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f0780ab00a0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortC.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f0780ab00a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0780ab0420"/>
        <function-ref name="isInput" scoped="" ref="0x7f0780ab05b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f0780ab0740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0780ab08d0"/>
        <function-ref name="get" scoped="" ref="0x7f0780ab0a60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0780ab0bf0"/>
        <function-ref name="set" scoped="" ref="0x7f0780ab0d80"/>
        <function-ref name="clr" scoped="" ref="0x7f0780aaf020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f0780aad3f0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortC.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f0780aad3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0780aad770"/>
        <function-ref name="isInput" scoped="" ref="0x7f0780aad900"/>
        <function-ref name="toggle" scoped="" ref="0x7f0780aada90"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0780aadc20"/>
        <function-ref name="get" scoped="" ref="0x7f0780aaddb0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0780aac020"/>
        <function-ref name="set" scoped="" ref="0x7f0780aac1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f0780aac340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f0780aaa6d0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortC.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f0780aaa6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0780aaaa50"/>
        <function-ref name="isInput" scoped="" ref="0x7f0780aaabe0"/>
        <function-ref name="toggle" scoped="" ref="0x7f0780aaad70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0780aa9020"/>
        <function-ref name="get" scoped="" ref="0x7f0780aa91b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0780aa9340"/>
        <function-ref name="set" scoped="" ref="0x7f0780aa94d0"/>
        <function-ref name="clr" scoped="" ref="0x7f0780aa9660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f0780aa79b0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortC.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f0780aa79b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0780aa7d30"/>
        <function-ref name="isInput" scoped="" ref="0x7f0780aa6020"/>
        <function-ref name="toggle" scoped="" ref="0x7f0780aa61b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0780aa6340"/>
        <function-ref name="get" scoped="" ref="0x7f0780aa64d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0780aa6660"/>
        <function-ref name="set" scoped="" ref="0x7f0780aa67f0"/>
        <function-ref name="clr" scoped="" ref="0x7f0780aa6980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f0780aa4e20" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortC.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f0780aa4e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0780aa31c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f0780aa3350"/>
        <function-ref name="toggle" scoped="" ref="0x7f0780aa34e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0780aa3670"/>
        <function-ref name="get" scoped="" ref="0x7f0780aa3800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0780aa3990"/>
        <function-ref name="set" scoped="" ref="0x7f0780aa3b20"/>
        <function-ref name="clr" scoped="" ref="0x7f0780aa3cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f0780aa00a0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortC.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f0780aa00a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0780aa0420"/>
        <function-ref name="isInput" scoped="" ref="0x7f0780aa05b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f0780aa0740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0780aa08d0"/>
        <function-ref name="get" scoped="" ref="0x7f0780aa0a60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0780aa0bf0"/>
        <function-ref name="set" scoped="" ref="0x7f0780aa0d80"/>
        <function-ref name="clr" scoped="" ref="0x7f0780a9f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7f0781582440" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7f0781582440"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f07815827c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f0781582950"/>
        <function-ref name="toggle" scoped="" ref="0x7f0781582ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0781582c70"/>
        <function-ref name="get" scoped="" ref="0x7f0781582e00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0781581020"/>
        <function-ref name="set" scoped="" ref="0x7f07815811b0"/>
        <function-ref name="clr" scoped="" ref="0x7f0781581340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7f078157f8f0" loc="49:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7f078157f8f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f078157fc70"/>
        <function-ref name="isInput" scoped="" ref="0x7f078157fe00"/>
        <function-ref name="toggle" scoped="" ref="0x7f078157e020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f078157e1b0"/>
        <function-ref name="get" scoped="" ref="0x7f078157e340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f078157e4d0"/>
        <function-ref name="set" scoped="" ref="0x7f078157e660"/>
        <function-ref name="clr" scoped="" ref="0x7f078157e7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7f0781584020" loc="44:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7f0781584020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f07815843a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f0781584530"/>
        <function-ref name="toggle" scoped="" ref="0x7f07815846c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0781584850"/>
        <function-ref name="get" scoped="" ref="0x7f07815849e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0781584b70"/>
        <function-ref name="set" scoped="" ref="0x7f0781584d00"/>
        <function-ref name="clr" scoped="" ref="0x7f0781583020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7f07815815d0" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7f07815815d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0781581950"/>
        <function-ref name="isInput" scoped="" ref="0x7f0781581ae0"/>
        <function-ref name="toggle" scoped="" ref="0x7f0781581c70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0781581e00"/>
        <function-ref name="get" scoped="" ref="0x7f0781580020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f07815801b0"/>
        <function-ref name="set" scoped="" ref="0x7f0781580340"/>
        <function-ref name="clr" scoped="" ref="0x7f07815804d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7f078157ea80" loc="50:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7f078157ea80"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f078157ee00"/>
        <function-ref name="isInput" scoped="" ref="0x7f078157c020"/>
        <function-ref name="toggle" scoped="" ref="0x7f078157c1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f078157c340"/>
        <function-ref name="get" scoped="" ref="0x7f078157c4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f078157c660"/>
        <function-ref name="set" scoped="" ref="0x7f078157c7f0"/>
        <function-ref name="clr" scoped="" ref="0x7f078157c980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7f07815832b0" loc="45:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7f07815832b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0781583630"/>
        <function-ref name="isInput" scoped="" ref="0x7f07815837c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f0781583950"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0781583ae0"/>
        <function-ref name="get" scoped="" ref="0x7f0781583c70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0781583e00"/>
        <function-ref name="set" scoped="" ref="0x7f0781582020"/>
        <function-ref name="clr" scoped="" ref="0x7f07815821b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7f0781580760" loc="48:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7f0781580760"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0781580ae0"/>
        <function-ref name="isInput" scoped="" ref="0x7f0781580c70"/>
        <function-ref name="toggle" scoped="" ref="0x7f0781580e00"/>
        <function-ref name="isOutput" scoped="" ref="0x7f078157f020"/>
        <function-ref name="get" scoped="" ref="0x7f078157f1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f078157f340"/>
        <function-ref name="set" scoped="" ref="0x7f078157f4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f078157f660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7f078157cc10" loc="51:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7f078157cc10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f078157b020"/>
        <function-ref name="isInput" scoped="" ref="0x7f078157b1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f078157b340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f078157b4d0"/>
        <function-ref name="get" scoped="" ref="0x7f078157b660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f078157b7f0"/>
        <function-ref name="set" scoped="" ref="0x7f078157b980"/>
        <function-ref name="clr" scoped="" ref="0x7f078157bb10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f0780a4dc90" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortD.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f0780a4dc90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0780a4c0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f0780a4c230"/>
        <function-ref name="toggle" scoped="" ref="0x7f0780a4c3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0780a4c550"/>
        <function-ref name="get" scoped="" ref="0x7f0780a4c6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0780a4c870"/>
        <function-ref name="set" scoped="" ref="0x7f0780a4ca00"/>
        <function-ref name="clr" scoped="" ref="0x7f0780a4cb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f0780a4ae20" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortD.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f0780a4ae20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0780a481c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f0780a48350"/>
        <function-ref name="toggle" scoped="" ref="0x7f0780a484e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0780a48670"/>
        <function-ref name="get" scoped="" ref="0x7f0780a48800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0780a48990"/>
        <function-ref name="set" scoped="" ref="0x7f0780a48b20"/>
        <function-ref name="clr" scoped="" ref="0x7f0780a48cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f0780a450a0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortD.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f0780a450a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0780a45420"/>
        <function-ref name="isInput" scoped="" ref="0x7f0780a455b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f0780a45740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0780a458d0"/>
        <function-ref name="get" scoped="" ref="0x7f0780a45a60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0780a45bf0"/>
        <function-ref name="set" scoped="" ref="0x7f0780a45d80"/>
        <function-ref name="clr" scoped="" ref="0x7f0780a44020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f0780a423f0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortD.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f0780a423f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0780a42770"/>
        <function-ref name="isInput" scoped="" ref="0x7f0780a42900"/>
        <function-ref name="toggle" scoped="" ref="0x7f0780a42a90"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0780a42c20"/>
        <function-ref name="get" scoped="" ref="0x7f0780a42db0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0780a41020"/>
        <function-ref name="set" scoped="" ref="0x7f0780a411b0"/>
        <function-ref name="clr" scoped="" ref="0x7f0780a41340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f0780a3f6d0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortD.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f0780a3f6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0780a3fa50"/>
        <function-ref name="isInput" scoped="" ref="0x7f0780a3fbe0"/>
        <function-ref name="toggle" scoped="" ref="0x7f0780a3fd70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0780a3e020"/>
        <function-ref name="get" scoped="" ref="0x7f0780a3e1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0780a3e340"/>
        <function-ref name="set" scoped="" ref="0x7f0780a3e4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f0780a3e660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f0780a3c9b0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortD.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f0780a3c9b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0780a3cd30"/>
        <function-ref name="isInput" scoped="" ref="0x7f0780a3b020"/>
        <function-ref name="toggle" scoped="" ref="0x7f0780a3b1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0780a3b340"/>
        <function-ref name="get" scoped="" ref="0x7f0780a3b4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0780a3b660"/>
        <function-ref name="set" scoped="" ref="0x7f0780a3b7f0"/>
        <function-ref name="clr" scoped="" ref="0x7f0780a3b980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f0780a39e20" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortD.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f0780a39e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0780a381c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f0780a38350"/>
        <function-ref name="toggle" scoped="" ref="0x7f0780a384e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0780a38670"/>
        <function-ref name="get" scoped="" ref="0x7f0780a38800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0780a38990"/>
        <function-ref name="set" scoped="" ref="0x7f0780a38b20"/>
        <function-ref name="clr" scoped="" ref="0x7f0780a38cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f0780a350a0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortD.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f0780a350a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0780a35420"/>
        <function-ref name="isInput" scoped="" ref="0x7f0780a355b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f0780a35740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0780a358d0"/>
        <function-ref name="get" scoped="" ref="0x7f0780a35a60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0780a35bf0"/>
        <function-ref name="set" scoped="" ref="0x7f0780a35d80"/>
        <function-ref name="clr" scoped="" ref="0x7f0780a34020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7f0781573760" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7f0781573760"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0781573ae0"/>
        <function-ref name="isInput" scoped="" ref="0x7f0781573c70"/>
        <function-ref name="toggle" scoped="" ref="0x7f0781573e00"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0781572020"/>
        <function-ref name="get" scoped="" ref="0x7f07815721b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0781572340"/>
        <function-ref name="set" scoped="" ref="0x7f07815724d0"/>
        <function-ref name="clr" scoped="" ref="0x7f0781572660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7f078156fc10" loc="49:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7f078156fc10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f078156e020"/>
        <function-ref name="isInput" scoped="" ref="0x7f078156e1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f078156e340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f078156e4d0"/>
        <function-ref name="get" scoped="" ref="0x7f078156e660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f078156e7f0"/>
        <function-ref name="set" scoped="" ref="0x7f078156e980"/>
        <function-ref name="clr" scoped="" ref="0x7f078156eb10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7f07815753f0" loc="44:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7f07815753f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0781575770"/>
        <function-ref name="isInput" scoped="" ref="0x7f0781575900"/>
        <function-ref name="toggle" scoped="" ref="0x7f0781575a90"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0781575c20"/>
        <function-ref name="get" scoped="" ref="0x7f0781575db0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0781574020"/>
        <function-ref name="set" scoped="" ref="0x7f07815741b0"/>
        <function-ref name="clr" scoped="" ref="0x7f0781574340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7f07815728f0" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7f07815728f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0781572c70"/>
        <function-ref name="isInput" scoped="" ref="0x7f0781572e00"/>
        <function-ref name="toggle" scoped="" ref="0x7f0781570020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f07815701b0"/>
        <function-ref name="get" scoped="" ref="0x7f0781570340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f07815704d0"/>
        <function-ref name="set" scoped="" ref="0x7f0781570660"/>
        <function-ref name="clr" scoped="" ref="0x7f07815707f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7f078156eda0" loc="50:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7f078156eda0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f078156d180"/>
        <function-ref name="isInput" scoped="" ref="0x7f078156d310"/>
        <function-ref name="toggle" scoped="" ref="0x7f078156d4a0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f078156d630"/>
        <function-ref name="get" scoped="" ref="0x7f078156d7c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f078156d950"/>
        <function-ref name="set" scoped="" ref="0x7f078156dae0"/>
        <function-ref name="clr" scoped="" ref="0x7f078156dc70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7f07815745d0" loc="45:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7f07815745d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0781574950"/>
        <function-ref name="isInput" scoped="" ref="0x7f0781574ae0"/>
        <function-ref name="toggle" scoped="" ref="0x7f0781574c70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0781574e00"/>
        <function-ref name="get" scoped="" ref="0x7f0781573020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f07815731b0"/>
        <function-ref name="set" scoped="" ref="0x7f0781573340"/>
        <function-ref name="clr" scoped="" ref="0x7f07815734d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7f0781570a80" loc="48:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7f0781570a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0781570e00"/>
        <function-ref name="isInput" scoped="" ref="0x7f078156f020"/>
        <function-ref name="toggle" scoped="" ref="0x7f078156f1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f078156f340"/>
        <function-ref name="get" scoped="" ref="0x7f078156f4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f078156f660"/>
        <function-ref name="set" scoped="" ref="0x7f078156f7f0"/>
        <function-ref name="clr" scoped="" ref="0x7f078156f980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7f078156c020" loc="51:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7f078156c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f078156c3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f078156c530"/>
        <function-ref name="toggle" scoped="" ref="0x7f078156c6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f078156c850"/>
        <function-ref name="get" scoped="" ref="0x7f078156c9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f078156cb70"/>
        <function-ref name="set" scoped="" ref="0x7f078156cd00"/>
        <function-ref name="clr" scoped="" ref="0x7f078156b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f07809e2c90" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortE.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f07809e2c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f07809e10a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f07809e1230"/>
        <function-ref name="toggle" scoped="" ref="0x7f07809e13c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f07809e1550"/>
        <function-ref name="get" scoped="" ref="0x7f07809e16e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f07809e1870"/>
        <function-ref name="set" scoped="" ref="0x7f07809e1a00"/>
        <function-ref name="clr" scoped="" ref="0x7f07809e1b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f07809dfe20" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortE.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f07809dfe20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f07809dd1c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f07809dd350"/>
        <function-ref name="toggle" scoped="" ref="0x7f07809dd4e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f07809dd670"/>
        <function-ref name="get" scoped="" ref="0x7f07809dd800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f07809dd990"/>
        <function-ref name="set" scoped="" ref="0x7f07809ddb20"/>
        <function-ref name="clr" scoped="" ref="0x7f07809ddcb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f07809da0a0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortE.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f07809da0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f07809da420"/>
        <function-ref name="isInput" scoped="" ref="0x7f07809da5b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f07809da740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f07809da8d0"/>
        <function-ref name="get" scoped="" ref="0x7f07809daa60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f07809dabf0"/>
        <function-ref name="set" scoped="" ref="0x7f07809dad80"/>
        <function-ref name="clr" scoped="" ref="0x7f07809d9020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f07809d73f0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortE.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f07809d73f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f07809d7770"/>
        <function-ref name="isInput" scoped="" ref="0x7f07809d7900"/>
        <function-ref name="toggle" scoped="" ref="0x7f07809d7a90"/>
        <function-ref name="isOutput" scoped="" ref="0x7f07809d7c20"/>
        <function-ref name="get" scoped="" ref="0x7f07809d7db0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f07809d6020"/>
        <function-ref name="set" scoped="" ref="0x7f07809d61b0"/>
        <function-ref name="clr" scoped="" ref="0x7f07809d6340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f07809d46d0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortE.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f07809d46d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f07809d4a50"/>
        <function-ref name="isInput" scoped="" ref="0x7f07809d4be0"/>
        <function-ref name="toggle" scoped="" ref="0x7f07809d4d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f07809d3020"/>
        <function-ref name="get" scoped="" ref="0x7f07809d31b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f07809d3340"/>
        <function-ref name="set" scoped="" ref="0x7f07809d34d0"/>
        <function-ref name="clr" scoped="" ref="0x7f07809d3660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f07809d19b0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortE.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f07809d19b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f07809d1d30"/>
        <function-ref name="isInput" scoped="" ref="0x7f07809d0020"/>
        <function-ref name="toggle" scoped="" ref="0x7f07809d01b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f07809d0340"/>
        <function-ref name="get" scoped="" ref="0x7f07809d04d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f07809d0660"/>
        <function-ref name="set" scoped="" ref="0x7f07809d07f0"/>
        <function-ref name="clr" scoped="" ref="0x7f07809d0980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f07809cee20" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortE.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f07809cee20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f07809cd1c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f07809cd350"/>
        <function-ref name="toggle" scoped="" ref="0x7f07809cd4e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f07809cd670"/>
        <function-ref name="get" scoped="" ref="0x7f07809cd800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f07809cd990"/>
        <function-ref name="set" scoped="" ref="0x7f07809cdb20"/>
        <function-ref name="clr" scoped="" ref="0x7f07809cdcb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f07809ca0a0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortE.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f07809ca0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f07809ca420"/>
        <function-ref name="isInput" scoped="" ref="0x7f07809ca5b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f07809ca740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f07809ca8d0"/>
        <function-ref name="get" scoped="" ref="0x7f07809caa60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f07809cabf0"/>
        <function-ref name="set" scoped="" ref="0x7f07809cad80"/>
        <function-ref name="clr" scoped="" ref="0x7f07809c9020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7f0781563a80" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7f0781563a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0781563e00"/>
        <function-ref name="isInput" scoped="" ref="0x7f0781562020"/>
        <function-ref name="toggle" scoped="" ref="0x7f07815621b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0781562340"/>
        <function-ref name="get" scoped="" ref="0x7f07815624d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0781562660"/>
        <function-ref name="set" scoped="" ref="0x7f07815627f0"/>
        <function-ref name="clr" scoped="" ref="0x7f0781562980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7f078155f020" loc="49:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7f078155f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f078155f3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f078155f530"/>
        <function-ref name="toggle" scoped="" ref="0x7f078155f6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f078155f850"/>
        <function-ref name="get" scoped="" ref="0x7f078155f9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f078155fb70"/>
        <function-ref name="set" scoped="" ref="0x7f078155fd00"/>
        <function-ref name="clr" scoped="" ref="0x7f078155e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7f07815667a0" loc="44:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7f07815667a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0781566b20"/>
        <function-ref name="isInput" scoped="" ref="0x7f0781566cb0"/>
        <function-ref name="toggle" scoped="" ref="0x7f0781566e40"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0781564020"/>
        <function-ref name="get" scoped="" ref="0x7f07815641b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0781564340"/>
        <function-ref name="set" scoped="" ref="0x7f07815644d0"/>
        <function-ref name="clr" scoped="" ref="0x7f0781564660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7f0781562c10" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7f0781562c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0781561020"/>
        <function-ref name="isInput" scoped="" ref="0x7f07815611b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f0781561340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f07815614d0"/>
        <function-ref name="get" scoped="" ref="0x7f0781561660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f07815617f0"/>
        <function-ref name="set" scoped="" ref="0x7f0781561980"/>
        <function-ref name="clr" scoped="" ref="0x7f0781561b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7f078155e2b0" loc="50:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7f078155e2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f078155e630"/>
        <function-ref name="isInput" scoped="" ref="0x7f078155e7c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f078155e950"/>
        <function-ref name="isOutput" scoped="" ref="0x7f078155eae0"/>
        <function-ref name="get" scoped="" ref="0x7f078155ec70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f078155ee00"/>
        <function-ref name="set" scoped="" ref="0x7f078155d020"/>
        <function-ref name="clr" scoped="" ref="0x7f078155d1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7f07815648f0" loc="45:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7f07815648f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0781564c70"/>
        <function-ref name="isInput" scoped="" ref="0x7f0781564e00"/>
        <function-ref name="toggle" scoped="" ref="0x7f0781563020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f07815631b0"/>
        <function-ref name="get" scoped="" ref="0x7f0781563340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f07815634d0"/>
        <function-ref name="set" scoped="" ref="0x7f0781563660"/>
        <function-ref name="clr" scoped="" ref="0x7f07815637f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7f0781561da0" loc="48:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7f0781561da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0781560180"/>
        <function-ref name="isInput" scoped="" ref="0x7f0781560310"/>
        <function-ref name="toggle" scoped="" ref="0x7f07815604a0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0781560630"/>
        <function-ref name="get" scoped="" ref="0x7f07815607c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0781560950"/>
        <function-ref name="set" scoped="" ref="0x7f0781560ae0"/>
        <function-ref name="clr" scoped="" ref="0x7f0781560c70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7f078155d440" loc="51:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7f078155d440"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f078155d7c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f078155d950"/>
        <function-ref name="toggle" scoped="" ref="0x7f078155dae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f078155dc70"/>
        <function-ref name="get" scoped="" ref="0x7f078155de00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f078155c020"/>
        <function-ref name="set" scoped="" ref="0x7f078155c1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f078155c340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f0780977c90" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortF.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f0780977c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f07809760a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f0780976230"/>
        <function-ref name="toggle" scoped="" ref="0x7f07809763c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0780976550"/>
        <function-ref name="get" scoped="" ref="0x7f07809766e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0780976870"/>
        <function-ref name="set" scoped="" ref="0x7f0780976a00"/>
        <function-ref name="clr" scoped="" ref="0x7f0780976b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f0780974e20" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortF.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f0780974e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f07809731c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f0780973350"/>
        <function-ref name="toggle" scoped="" ref="0x7f07809734e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0780973670"/>
        <function-ref name="get" scoped="" ref="0x7f0780973800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0780973990"/>
        <function-ref name="set" scoped="" ref="0x7f0780973b20"/>
        <function-ref name="clr" scoped="" ref="0x7f0780973cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f07809700a0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortF.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f07809700a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0780970420"/>
        <function-ref name="isInput" scoped="" ref="0x7f07809705b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f0780970740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f07809708d0"/>
        <function-ref name="get" scoped="" ref="0x7f0780970a60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0780970bf0"/>
        <function-ref name="set" scoped="" ref="0x7f0780970d80"/>
        <function-ref name="clr" scoped="" ref="0x7f078096e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f078096c3f0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortF.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f078096c3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f078096c770"/>
        <function-ref name="isInput" scoped="" ref="0x7f078096c900"/>
        <function-ref name="toggle" scoped="" ref="0x7f078096ca90"/>
        <function-ref name="isOutput" scoped="" ref="0x7f078096cc20"/>
        <function-ref name="get" scoped="" ref="0x7f078096cdb0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f078096b020"/>
        <function-ref name="set" scoped="" ref="0x7f078096b1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f078096b340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f07809696d0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortF.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f07809696d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0780969a50"/>
        <function-ref name="isInput" scoped="" ref="0x7f0780969be0"/>
        <function-ref name="toggle" scoped="" ref="0x7f0780969d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0780968020"/>
        <function-ref name="get" scoped="" ref="0x7f07809681b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0780968340"/>
        <function-ref name="set" scoped="" ref="0x7f07809684d0"/>
        <function-ref name="clr" scoped="" ref="0x7f0780968660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f07809669b0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortF.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f07809669b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0780966d30"/>
        <function-ref name="isInput" scoped="" ref="0x7f0780965020"/>
        <function-ref name="toggle" scoped="" ref="0x7f07809651b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0780965340"/>
        <function-ref name="get" scoped="" ref="0x7f07809654d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0780965660"/>
        <function-ref name="set" scoped="" ref="0x7f07809657f0"/>
        <function-ref name="clr" scoped="" ref="0x7f0780965980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f0780963e20" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortF.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f0780963e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f07809621c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f0780962350"/>
        <function-ref name="toggle" scoped="" ref="0x7f07809624e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0780962670"/>
        <function-ref name="get" scoped="" ref="0x7f0780962800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0780962990"/>
        <function-ref name="set" scoped="" ref="0x7f0780962b20"/>
        <function-ref name="clr" scoped="" ref="0x7f0780962cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f078095f0a0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortF.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f078095f0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f078095f420"/>
        <function-ref name="isInput" scoped="" ref="0x7f078095f5b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f078095f740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f078095f8d0"/>
        <function-ref name="get" scoped="" ref="0x7f078095fa60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f078095fbf0"/>
        <function-ref name="set" scoped="" ref="0x7f078095fd80"/>
        <function-ref name="clr" scoped="" ref="0x7f078095e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f0781556e20" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.F0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f0781556e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f07815551c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f0781555350"/>
        <function-ref name="toggle" scoped="" ref="0x7f07815554e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0781555670"/>
        <function-ref name="get" scoped="" ref="0x7f0781555800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0781555990"/>
        <function-ref name="set" scoped="" ref="0x7f0781555b20"/>
        <function-ref name="clr" scoped="" ref="0x7f0781555cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f07815519b0" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.F1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f07815519b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0781551d30"/>
        <function-ref name="isInput" scoped="" ref="0x7f0781550020"/>
        <function-ref name="toggle" scoped="" ref="0x7f07815501b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0781550340"/>
        <function-ref name="get" scoped="" ref="0x7f07815504d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0781550660"/>
        <function-ref name="set" scoped="" ref="0x7f07815507f0"/>
        <function-ref name="clr" scoped="" ref="0x7f0781550980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f078154b6d0" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.F2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f078154b6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f078154ba50"/>
        <function-ref name="isInput" scoped="" ref="0x7f078154bbe0"/>
        <function-ref name="toggle" scoped="" ref="0x7f078154bd70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f078154a020"/>
        <function-ref name="get" scoped="" ref="0x7f078154a1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f078154a340"/>
        <function-ref name="set" scoped="" ref="0x7f078154a4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f078154a660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f0781545160" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.F3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f0781545160"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f07815454e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f0781545670"/>
        <function-ref name="toggle" scoped="" ref="0x7f0781545800"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0781545990"/>
        <function-ref name="get" scoped="" ref="0x7f0781545b20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0781545cb0"/>
        <function-ref name="set" scoped="" ref="0x7f0781545e40"/>
        <function-ref name="clr" scoped="" ref="0x7f0781544020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f0781541c90" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.F4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f0781541c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f07815400a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f0781540230"/>
        <function-ref name="toggle" scoped="" ref="0x7f07815403c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0781540550"/>
        <function-ref name="get" scoped="" ref="0x7f07815406e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0781540870"/>
        <function-ref name="set" scoped="" ref="0x7f0781540a00"/>
        <function-ref name="clr" scoped="" ref="0x7f0781540b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f078153b6d0" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.F5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f078153b6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f078153ba50"/>
        <function-ref name="isInput" scoped="" ref="0x7f078153bbe0"/>
        <function-ref name="toggle" scoped="" ref="0x7f078153bd70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f078153a020"/>
        <function-ref name="get" scoped="" ref="0x7f078153a1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f078153a340"/>
        <function-ref name="set" scoped="" ref="0x7f078153a4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f078153a660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f0781535270" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.F6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f0781535270"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f07815355f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f0781535780"/>
        <function-ref name="toggle" scoped="" ref="0x7f0781535910"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0781535aa0"/>
        <function-ref name="get" scoped="" ref="0x7f0781535c30"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0781535dc0"/>
        <function-ref name="set" scoped="" ref="0x7f0781534020"/>
        <function-ref name="clr" scoped="" ref="0x7f07815341b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f0781531d00" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.F7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f0781531d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f07815300a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f0781530230"/>
        <function-ref name="toggle" scoped="" ref="0x7f07815303c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0781530550"/>
        <function-ref name="get" scoped="" ref="0x7f07815306e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0781530870"/>
        <function-ref name="set" scoped="" ref="0x7f0781530a00"/>
        <function-ref name="clr" scoped="" ref="0x7f0781530b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f078152b6d0" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.G0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f078152b6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f078152ba50"/>
        <function-ref name="isInput" scoped="" ref="0x7f078152bbe0"/>
        <function-ref name="toggle" scoped="" ref="0x7f078152bd70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f078152a020"/>
        <function-ref name="get" scoped="" ref="0x7f078152a1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f078152a340"/>
        <function-ref name="set" scoped="" ref="0x7f078152a4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f078152a660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f0781525160" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.G1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f0781525160"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f07815254e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f0781525670"/>
        <function-ref name="toggle" scoped="" ref="0x7f0781525800"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0781525990"/>
        <function-ref name="get" scoped="" ref="0x7f0781525b20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0781525cb0"/>
        <function-ref name="set" scoped="" ref="0x7f0781525e40"/>
        <function-ref name="clr" scoped="" ref="0x7f0781524020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f0781521c90" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.G2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f0781521c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f07815200a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f0781520230"/>
        <function-ref name="toggle" scoped="" ref="0x7f07815203c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0781520550"/>
        <function-ref name="get" scoped="" ref="0x7f07815206e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0781520870"/>
        <function-ref name="set" scoped="" ref="0x7f0781520a00"/>
        <function-ref name="clr" scoped="" ref="0x7f0781520b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f078151b6d0" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.G3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f078151b6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f078151ba50"/>
        <function-ref name="isInput" scoped="" ref="0x7f078151bbe0"/>
        <function-ref name="toggle" scoped="" ref="0x7f078151bd70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f078151a020"/>
        <function-ref name="get" scoped="" ref="0x7f078151a1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f078151a340"/>
        <function-ref name="set" scoped="" ref="0x7f078151a4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f078151a660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f0781515160" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.G4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f0781515160"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f07815154e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f0781515670"/>
        <function-ref name="toggle" scoped="" ref="0x7f0781515800"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0781515990"/>
        <function-ref name="get" scoped="" ref="0x7f0781515b20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0781515cb0"/>
        <function-ref name="set" scoped="" ref="0x7f0781515e40"/>
        <function-ref name="clr" scoped="" ref="0x7f0781514020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f0781511c90" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.G5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f0781511c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f07815100a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f0781510230"/>
        <function-ref name="toggle" scoped="" ref="0x7f07815103c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0781510550"/>
        <function-ref name="get" scoped="" ref="0x7f07815106e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0781510870"/>
        <function-ref name="set" scoped="" ref="0x7f0781510a00"/>
        <function-ref name="clr" scoped="" ref="0x7f0781510b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f07814f4020" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.H0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f07814f4020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f07814f43a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f07814f4530"/>
        <function-ref name="toggle" scoped="" ref="0x7f07814f46c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f07814f4850"/>
        <function-ref name="get" scoped="" ref="0x7f07814f49e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f07814f4b70"/>
        <function-ref name="set" scoped="" ref="0x7f07814f4d00"/>
        <function-ref name="clr" scoped="" ref="0x7f07814f3020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f07814f06d0" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.H1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f07814f06d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f07814f0a50"/>
        <function-ref name="isInput" scoped="" ref="0x7f07814f0be0"/>
        <function-ref name="toggle" scoped="" ref="0x7f07814f0d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f07814ef020"/>
        <function-ref name="get" scoped="" ref="0x7f07814ef1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f07814ef340"/>
        <function-ref name="set" scoped="" ref="0x7f07814ef4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f07814ef660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f07814ebc90" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.H2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f07814ebc90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f07814ea0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f07814ea230"/>
        <function-ref name="toggle" scoped="" ref="0x7f07814ea3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f07814ea550"/>
        <function-ref name="get" scoped="" ref="0x7f07814ea6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f07814ea870"/>
        <function-ref name="set" scoped="" ref="0x7f07814eaa00"/>
        <function-ref name="clr" scoped="" ref="0x7f07814eab90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f07814e6180" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.H3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f07814e6180"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f07814e6500"/>
        <function-ref name="isInput" scoped="" ref="0x7f07814e6690"/>
        <function-ref name="toggle" scoped="" ref="0x7f07814e6820"/>
        <function-ref name="isOutput" scoped="" ref="0x7f07814e69b0"/>
        <function-ref name="get" scoped="" ref="0x7f07814e6b40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f07814e6cd0"/>
        <function-ref name="set" scoped="" ref="0x7f07814e6e60"/>
        <function-ref name="clr" scoped="" ref="0x7f07814e4020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f07814e1830" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.H4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f07814e1830"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f07814e1bb0"/>
        <function-ref name="isInput" scoped="" ref="0x7f07814e1d40"/>
        <function-ref name="toggle" scoped="" ref="0x7f07814e0020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f07814e01b0"/>
        <function-ref name="get" scoped="" ref="0x7f07814e0340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f07814e04d0"/>
        <function-ref name="set" scoped="" ref="0x7f07814e0660"/>
        <function-ref name="clr" scoped="" ref="0x7f07814e07f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f07814dce20" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.H5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f07814dce20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f07814db1c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f07814db350"/>
        <function-ref name="toggle" scoped="" ref="0x7f07814db4e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f07814db670"/>
        <function-ref name="get" scoped="" ref="0x7f07814db800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f07814db990"/>
        <function-ref name="set" scoped="" ref="0x7f07814dbb20"/>
        <function-ref name="clr" scoped="" ref="0x7f07814dbcb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f07814d7460" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.H6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f07814d7460"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f07814d77e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f07814d7970"/>
        <function-ref name="toggle" scoped="" ref="0x7f07814d7b00"/>
        <function-ref name="isOutput" scoped="" ref="0x7f07814d7c90"/>
        <function-ref name="get" scoped="" ref="0x7f07814d7e20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f07814d5020"/>
        <function-ref name="set" scoped="" ref="0x7f07814d51b0"/>
        <function-ref name="clr" scoped="" ref="0x7f07814d5340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f07814d29b0" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.H7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f07814d29b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f07814d2d30"/>
        <function-ref name="isInput" scoped="" ref="0x7f07814d1020"/>
        <function-ref name="toggle" scoped="" ref="0x7f07814d11b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f07814d1340"/>
        <function-ref name="get" scoped="" ref="0x7f07814d14d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f07814d1660"/>
        <function-ref name="set" scoped="" ref="0x7f07814d17f0"/>
        <function-ref name="clr" scoped="" ref="0x7f07814d1980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f07814cc160" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.J0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f07814cc160"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f07814cc4e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f07814cc670"/>
        <function-ref name="toggle" scoped="" ref="0x7f07814cc800"/>
        <function-ref name="isOutput" scoped="" ref="0x7f07814cc990"/>
        <function-ref name="get" scoped="" ref="0x7f07814ccb20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f07814cccb0"/>
        <function-ref name="set" scoped="" ref="0x7f07814cce40"/>
        <function-ref name="clr" scoped="" ref="0x7f07814cb020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f07814c86d0" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.J1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f07814c86d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f07814c8a50"/>
        <function-ref name="isInput" scoped="" ref="0x7f07814c8be0"/>
        <function-ref name="toggle" scoped="" ref="0x7f07814c8d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f07814c7020"/>
        <function-ref name="get" scoped="" ref="0x7f07814c71b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f07814c7340"/>
        <function-ref name="set" scoped="" ref="0x7f07814c74d0"/>
        <function-ref name="clr" scoped="" ref="0x7f07814c7660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f07814c3c90" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.J2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f07814c3c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f07814c20a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f07814c2230"/>
        <function-ref name="toggle" scoped="" ref="0x7f07814c23c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f07814c2550"/>
        <function-ref name="get" scoped="" ref="0x7f07814c26e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f07814c2870"/>
        <function-ref name="set" scoped="" ref="0x7f07814c2a00"/>
        <function-ref name="clr" scoped="" ref="0x7f07814c2b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f07814bd180" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.J3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f07814bd180"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f07814bd500"/>
        <function-ref name="isInput" scoped="" ref="0x7f07814bd690"/>
        <function-ref name="toggle" scoped="" ref="0x7f07814bd820"/>
        <function-ref name="isOutput" scoped="" ref="0x7f07814bd9b0"/>
        <function-ref name="get" scoped="" ref="0x7f07814bdb40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f07814bdcd0"/>
        <function-ref name="set" scoped="" ref="0x7f07814bde60"/>
        <function-ref name="clr" scoped="" ref="0x7f07814bc020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f07814b96d0" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.J4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f07814b96d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f07814b9a50"/>
        <function-ref name="isInput" scoped="" ref="0x7f07814b9be0"/>
        <function-ref name="toggle" scoped="" ref="0x7f07814b9d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f07814b8020"/>
        <function-ref name="get" scoped="" ref="0x7f07814b81b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f07814b8340"/>
        <function-ref name="set" scoped="" ref="0x7f07814b84d0"/>
        <function-ref name="clr" scoped="" ref="0x7f07814b8660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f07814b4c90" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.J5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f07814b4c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f07814b30a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f07814b3230"/>
        <function-ref name="toggle" scoped="" ref="0x7f07814b33c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f07814b3550"/>
        <function-ref name="get" scoped="" ref="0x7f07814b36e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f07814b3870"/>
        <function-ref name="set" scoped="" ref="0x7f07814b3a00"/>
        <function-ref name="clr" scoped="" ref="0x7f07814b3b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f07814ae180" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.J6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f07814ae180"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f07814ae500"/>
        <function-ref name="isInput" scoped="" ref="0x7f07814ae690"/>
        <function-ref name="toggle" scoped="" ref="0x7f07814ae820"/>
        <function-ref name="isOutput" scoped="" ref="0x7f07814ae9b0"/>
        <function-ref name="get" scoped="" ref="0x7f07814aeb40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f07814aecd0"/>
        <function-ref name="set" scoped="" ref="0x7f07814aee60"/>
        <function-ref name="clr" scoped="" ref="0x7f07814ad020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f07814aa6d0" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.J7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f07814aa6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f07814aaa50"/>
        <function-ref name="isInput" scoped="" ref="0x7f07814aabe0"/>
        <function-ref name="toggle" scoped="" ref="0x7f07814aad70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f07814a9020"/>
        <function-ref name="get" scoped="" ref="0x7f07814a91b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f07814a9340"/>
        <function-ref name="set" scoped="" ref="0x7f07814a94d0"/>
        <function-ref name="clr" scoped="" ref="0x7f07814a9660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f07814a5c90" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.K0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f07814a5c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f07814a40a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f07814a4230"/>
        <function-ref name="toggle" scoped="" ref="0x7f07814a43c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f07814a4550"/>
        <function-ref name="get" scoped="" ref="0x7f07814a46e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f07814a4870"/>
        <function-ref name="set" scoped="" ref="0x7f07814a4a00"/>
        <function-ref name="clr" scoped="" ref="0x7f07814a4b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f078149f180" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.K1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f078149f180"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f078149f500"/>
        <function-ref name="isInput" scoped="" ref="0x7f078149f690"/>
        <function-ref name="toggle" scoped="" ref="0x7f078149f820"/>
        <function-ref name="isOutput" scoped="" ref="0x7f078149f9b0"/>
        <function-ref name="get" scoped="" ref="0x7f078149fb40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f078149fcd0"/>
        <function-ref name="set" scoped="" ref="0x7f078149fe60"/>
        <function-ref name="clr" scoped="" ref="0x7f078149e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f078149b6d0" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.K2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f078149b6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f078149ba50"/>
        <function-ref name="isInput" scoped="" ref="0x7f078149bbe0"/>
        <function-ref name="toggle" scoped="" ref="0x7f078149bd70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f078149a020"/>
        <function-ref name="get" scoped="" ref="0x7f078149a1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f078149a340"/>
        <function-ref name="set" scoped="" ref="0x7f078149a4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f078149a660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f0781496c90" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.K3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f0781496c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f07814950a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f0781495230"/>
        <function-ref name="toggle" scoped="" ref="0x7f07814953c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0781495550"/>
        <function-ref name="get" scoped="" ref="0x7f07814956e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0781495870"/>
        <function-ref name="set" scoped="" ref="0x7f0781495a00"/>
        <function-ref name="clr" scoped="" ref="0x7f0781495b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f0781490180" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.K4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f0781490180"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0781490500"/>
        <function-ref name="isInput" scoped="" ref="0x7f0781490690"/>
        <function-ref name="toggle" scoped="" ref="0x7f0781490820"/>
        <function-ref name="isOutput" scoped="" ref="0x7f07814909b0"/>
        <function-ref name="get" scoped="" ref="0x7f0781490b40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0781490cd0"/>
        <function-ref name="set" scoped="" ref="0x7f0781490e60"/>
        <function-ref name="clr" scoped="" ref="0x7f078148f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f078148c6d0" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.K5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f078148c6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f078148ca50"/>
        <function-ref name="isInput" scoped="" ref="0x7f078148cbe0"/>
        <function-ref name="toggle" scoped="" ref="0x7f078148cd70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f078148b020"/>
        <function-ref name="get" scoped="" ref="0x7f078148b1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f078148b340"/>
        <function-ref name="set" scoped="" ref="0x7f078148b4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f078148b660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f0781487c90" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.K6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f0781487c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f07814860a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f0781486230"/>
        <function-ref name="toggle" scoped="" ref="0x7f07814863c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0781486550"/>
        <function-ref name="get" scoped="" ref="0x7f07814866e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0781486870"/>
        <function-ref name="set" scoped="" ref="0x7f0781486a00"/>
        <function-ref name="clr" scoped="" ref="0x7f0781486b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f0781481180" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.K7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f0781481180"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0781481500"/>
        <function-ref name="isInput" scoped="" ref="0x7f0781481690"/>
        <function-ref name="toggle" scoped="" ref="0x7f0781481820"/>
        <function-ref name="isOutput" scoped="" ref="0x7f07814819b0"/>
        <function-ref name="get" scoped="" ref="0x7f0781481b40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0781481cd0"/>
        <function-ref name="set" scoped="" ref="0x7f0781481e60"/>
        <function-ref name="clr" scoped="" ref="0x7f0781480020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f078147d6d0" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.L0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f078147d6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f078147da50"/>
        <function-ref name="isInput" scoped="" ref="0x7f078147dbe0"/>
        <function-ref name="toggle" scoped="" ref="0x7f078147dd70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f078147c020"/>
        <function-ref name="get" scoped="" ref="0x7f078147c1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f078147c340"/>
        <function-ref name="set" scoped="" ref="0x7f078147c4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f078147c660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f0781478c90" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.L1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f0781478c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f07814770a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f0781477230"/>
        <function-ref name="toggle" scoped="" ref="0x7f07814773c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0781477550"/>
        <function-ref name="get" scoped="" ref="0x7f07814776e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0781477870"/>
        <function-ref name="set" scoped="" ref="0x7f0781477a00"/>
        <function-ref name="clr" scoped="" ref="0x7f0781477b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f0781473180" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.L2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f0781473180"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0781473500"/>
        <function-ref name="isInput" scoped="" ref="0x7f0781473690"/>
        <function-ref name="toggle" scoped="" ref="0x7f0781473820"/>
        <function-ref name="isOutput" scoped="" ref="0x7f07814739b0"/>
        <function-ref name="get" scoped="" ref="0x7f0781473b40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0781473cd0"/>
        <function-ref name="set" scoped="" ref="0x7f0781473e60"/>
        <function-ref name="clr" scoped="" ref="0x7f0781471020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f078146e6d0" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.L3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f078146e6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f078146ea50"/>
        <function-ref name="isInput" scoped="" ref="0x7f078146ebe0"/>
        <function-ref name="toggle" scoped="" ref="0x7f078146ed70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f078146d020"/>
        <function-ref name="get" scoped="" ref="0x7f078146d1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f078146d340"/>
        <function-ref name="set" scoped="" ref="0x7f078146d4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f078146d660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f07814680a0" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.L4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f07814680a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0781468420"/>
        <function-ref name="isInput" scoped="" ref="0x7f07814685b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f0781468740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f07814688d0"/>
        <function-ref name="get" scoped="" ref="0x7f0781468a60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0781468bf0"/>
        <function-ref name="set" scoped="" ref="0x7f0781468d80"/>
        <function-ref name="clr" scoped="" ref="0x7f0781467020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f07814646d0" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.L5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f07814646d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0781464a50"/>
        <function-ref name="isInput" scoped="" ref="0x7f0781464be0"/>
        <function-ref name="toggle" scoped="" ref="0x7f0781464d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0781462020"/>
        <function-ref name="get" scoped="" ref="0x7f07814621b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0781462340"/>
        <function-ref name="set" scoped="" ref="0x7f07814624d0"/>
        <function-ref name="clr" scoped="" ref="0x7f0781462660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f078145fc90" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.L6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f078145fc90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f078145e0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f078145e230"/>
        <function-ref name="toggle" scoped="" ref="0x7f078145e3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f078145e550"/>
        <function-ref name="get" scoped="" ref="0x7f078145e6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f078145e870"/>
        <function-ref name="set" scoped="" ref="0x7f078145ea00"/>
        <function-ref name="clr" scoped="" ref="0x7f078145eb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f0781459180" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.L7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f0781459180"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0781459500"/>
        <function-ref name="isInput" scoped="" ref="0x7f0781459690"/>
        <function-ref name="toggle" scoped="" ref="0x7f0781459820"/>
        <function-ref name="isOutput" scoped="" ref="0x7f07814599b0"/>
        <function-ref name="get" scoped="" ref="0x7f0781459b40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0781459cd0"/>
        <function-ref name="set" scoped="" ref="0x7f0781459e60"/>
        <function-ref name="clr" scoped="" ref="0x7f0781458020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PS2" ref="0x7f0781404e60" loc="12:PS2/PS2C.nc">
      <component-ref qname="PS2C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PS2" scoped="" ref="0x7f0781404e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="PS2"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f0781401210"/>
        <function-ref name="receivedChar" scoped="" ref="0x7f07814013a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ClockIRQ" ref="0x7f07813d2d90" loc="22:PS2/PS2P.nc">
      <component-ref qname="PS2P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ClockIRQ" scoped="" ref="0x7f07813d2d90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtmegaPinChange"/>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7f07813d9180"/>
        <function-ref name="fired" scoped="" ref="0x7f07813d9310"/>
        <function-ref name="disable" scoped="" ref="0x7f07813d94a0"/>
        <function-ref name="isEnabled" scoped="" ref="0x7f07813d9630"/>
        <function-ref name="reset" scoped="" ref="0x7f07813d97c0"/>
        <function-ref name="setMask" scoped="" ref="0x7f07813d9950"/>
        <function-ref name="enable" scoped="" ref="0x7f07813d9ae0"/>
        <function-ref name="getPins" scoped="" ref="0x7f07813d9c70"/>
        <function-ref name="getMask" scoped="" ref="0x7f07813d9e00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ClockPin" ref="0x7f07813d71c0" loc="23:PS2/PS2P.nc">
      <component-ref qname="PS2P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ClockPin" scoped="" ref="0x7f07813d71c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f07813d7540"/>
        <function-ref name="isInput" scoped="" ref="0x7f07813d76d0"/>
        <function-ref name="toggle" scoped="" ref="0x7f07813d7860"/>
        <function-ref name="isOutput" scoped="" ref="0x7f07813d79f0"/>
        <function-ref name="get" scoped="" ref="0x7f07813d7b80"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f07813d7d10"/>
        <function-ref name="set" scoped="" ref="0x7f07813d0020"/>
        <function-ref name="clr" scoped="" ref="0x7f07813d01b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DataPin" ref="0x7f07813d04f0" loc="24:PS2/PS2P.nc">
      <component-ref qname="PS2P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DataPin" scoped="" ref="0x7f07813d04f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f07813d0870"/>
        <function-ref name="isInput" scoped="" ref="0x7f07813d0a00"/>
        <function-ref name="toggle" scoped="" ref="0x7f07813d0b90"/>
        <function-ref name="isOutput" scoped="" ref="0x7f07813d0d20"/>
        <function-ref name="get" scoped="" ref="0x7f07813cf020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f07813cf1b0"/>
        <function-ref name="set" scoped="" ref="0x7f07813cf340"/>
        <function-ref name="clr" scoped="" ref="0x7f07813cf4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PS2" ref="0x7f07813db860" loc="19:PS2/PS2P.nc">
      <component-ref qname="PS2P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PS2" scoped="" ref="0x7f07813db860"/></type-interface>
      <instance>
        <interfacedef-ref qname="PS2"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f07813dbbe0"/>
        <function-ref name="receivedChar" scoped="" ref="0x7f07813dbd70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplAtmegaPinChange" ref="0x7f07813ffca0" loc="46:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtmegaPinChange2C.nc">
      <component-ref qname="HplAtmegaPinChange2C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtmegaPinChange" scoped="" ref="0x7f07813ffca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtmegaPinChange"/>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7f07813a80a0"/>
        <function-ref name="fired" scoped="" ref="0x7f07813a8230"/>
        <function-ref name="disable" scoped="" ref="0x7f07813a83c0"/>
        <function-ref name="isEnabled" scoped="" ref="0x7f07813a8550"/>
        <function-ref name="reset" scoped="" ref="0x7f07813a86e0"/>
        <function-ref name="setMask" scoped="" ref="0x7f07813a8870"/>
        <function-ref name="enable" scoped="" ref="0x7f07813a8a00"/>
        <function-ref name="getPins" scoped="" ref="0x7f07813a8b90"/>
        <function-ref name="getMask" scoped="" ref="0x7f07813a8d20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x7f07813913e0" loc="14:VolumeAdc/VolumeAdcC.nc">
      <component-ref qname="VolumeAdcC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x7f07813913e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f0782f56610"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f0781390020"/>
        <function-ref name="readDone" scoped="" ref="0x7f07813904a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceConfigure" ref="0x7f0781388e10" loc="17:VolumeAdc/VolumeAdcP.nc">
      <component-ref qname="VolumeAdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f0781388e10"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f078138b1c0"/>
        <function-ref name="configure" scoped="" ref="0x7f078138b350"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VolumePin" ref="0x7f078138b700" loc="19:VolumeAdc/VolumeAdcP.nc">
      <component-ref qname="VolumeAdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="VolumePin" scoped="" ref="0x7f078138b700"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f078138ba80"/>
        <function-ref name="isInput" scoped="" ref="0x7f078138bc10"/>
        <function-ref name="toggle" scoped="" ref="0x7f078138bda0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f078138a020"/>
        <function-ref name="get" scoped="" ref="0x7f078138a1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f078138a340"/>
        <function-ref name="set" scoped="" ref="0x7f078138a4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f078138a660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm1280AdcConfig" ref="0x7f0781388470" loc="16:VolumeAdc/VolumeAdcP.nc">
      <component-ref qname="VolumeAdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm1280AdcConfig" scoped="" ref="0x7f0781388470"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm1280AdcConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x7f07813887f0"/>
        <function-ref name="getChannel" scoped="" ref="0x7f0781388980"/>
        <function-ref name="getPrescaler" scoped="" ref="0x7f0781388b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f078123bc10" loc="25:../tinyos_ws18/tos/chips_ecs/atm1280/adc/AdcReadClientC.nc">
      <component-ref qname="VolumeAdcC.Adc"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f078123bc10"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f078123a020"/>
        <function-ref name="configure" scoped="" ref="0x7f078123a1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x7f078123dbe0" loc="22:../tinyos_ws18/tos/chips_ecs/atm1280/adc/AdcReadClientC.nc">
      <component-ref qname="VolumeAdcC.Adc"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x7f078123dbe0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f0782f56610"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f078123c860"/>
        <function-ref name="readDone" scoped="" ref="0x7f078123cce0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm1280AdcConfig" ref="0x7f078123b320" loc="24:../tinyos_ws18/tos/chips_ecs/atm1280/adc/AdcReadClientC.nc">
      <component-ref qname="VolumeAdcC.Adc"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm1280AdcConfig" scoped="" ref="0x7f078123b320"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm1280AdcConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x7f078123b6a0"/>
        <function-ref name="getChannel" scoped="" ref="0x7f078123b830"/>
        <function-ref name="getPrescaler" scoped="" ref="0x7f078123b9c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x7f0781379920" loc="19:../tinyos_ws18/tos/chips_ecs/atm1280/adc/WireAdcP.nc">
      <component-ref qname="WireAdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x7f0781379920"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f0782f56610"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f0781378560"/>
        <function-ref name="readDone" scoped="" ref="0x7f07813789e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadNow" ref="0x7f07813728f0" loc="20:../tinyos_ws18/tos/chips_ecs/atm1280/adc/WireAdcP.nc">
      <component-ref qname="WireAdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReadNow" scoped="" ref="0x7f07813728f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadNow"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f0782f56610"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f07813755a0"/>
        <function-ref name="readDone" scoped="" ref="0x7f0781375a60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x7f07813705e0" loc="24:../tinyos_ws18/tos/chips_ecs/atm1280/adc/WireAdcP.nc">
      <component-ref qname="WireAdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f07813705e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f0781370960"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f0781370af0"/>
        <function-ref name="request" scoped="" ref="0x7f0781370c80"/>
        <function-ref name="granted" scoped="" ref="0x7f0781370e10"/>
        <function-ref name="isOwner" scoped="" ref="0x7f078136f020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm1280AdcConfig" ref="0x7f07813716d0" loc="23:../tinyos_ws18/tos/chips_ecs/atm1280/adc/WireAdcP.nc">
      <component-ref qname="WireAdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm1280AdcConfig" scoped="" ref="0x7f07813716d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm1280AdcConfig"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x7f0781371a50"/>
        <function-ref name="getChannel" scoped="" ref="0x7f0781371be0"/>
        <function-ref name="getPrescaler" scoped="" ref="0x7f0781371d70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f0781368210" loc="58:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcC.nc">
      <component-ref qname="Atm1280AdcC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f0781368210"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f0781368590"/>
        <function-ref name="configure" scoped="" ref="0x7f0781368720"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm1280AdcSingle" ref="0x7f0781365780" loc="55:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcC.nc">
      <component-ref qname="Atm1280AdcC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm1280AdcSingle" scoped="" ref="0x7f0781365780"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm1280AdcSingle"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x7f0781365b00"/>
        <function-ref name="cancel" scoped="" ref="0x7f0781365c90"/>
        <function-ref name="dataReady" scoped="" ref="0x7f0781365e20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f078136c280" loc="54:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcC.nc">
      <component-ref qname="Atm1280AdcC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f078136c280"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f078136c600"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f078136c790"/>
        <function-ref name="request" scoped="" ref="0x7f078136c920"/>
        <function-ref name="granted" scoped="" ref="0x7f078136cab0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f078136cc40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm1280AdcMultiple" ref="0x7f078135f420" loc="56:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcC.nc">
      <component-ref qname="Atm1280AdcC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm1280AdcMultiple" scoped="" ref="0x7f078135f420"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm1280AdcMultiple"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x7f078135f7a0"/>
        <function-ref name="dataReady" scoped="" ref="0x7f078135f930"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtm1280Adc" ref="0x7f078134b710" loc="60:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcP.nc">
      <component-ref qname="Atm1280AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm1280Adc" scoped="" ref="0x7f078134b710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm1280Adc"/>
      </instance>
      <interface-functions>
        <function-ref name="setSingle" scoped="" ref="0x7f078134ba90"/>
        <function-ref name="getAdmux" scoped="" ref="0x7f078134bc20"/>
        <function-ref name="setPrescaler" scoped="" ref="0x7f078134bdb0"/>
        <function-ref name="isEnabled" scoped="" ref="0x7f078135a020"/>
        <function-ref name="enableAdc" scoped="" ref="0x7f078135a1b0"/>
        <function-ref name="setAdmux" scoped="" ref="0x7f078135a340"/>
        <function-ref name="enableInterruption" scoped="" ref="0x7f078135a4d0"/>
        <function-ref name="isComplete" scoped="" ref="0x7f078135a660"/>
        <function-ref name="cancel" scoped="" ref="0x7f078135a7f0"/>
        <function-ref name="disableAdc" scoped="" ref="0x7f078135a980"/>
        <function-ref name="resetInterrupt" scoped="" ref="0x7f078135ab10"/>
        <function-ref name="disableInterruption" scoped="" ref="0x7f078135aca0"/>
        <function-ref name="startConversion" scoped="" ref="0x7f078135ae30"/>
        <function-ref name="isStarted" scoped="" ref="0x7f0781359120"/>
        <function-ref name="setAdcsra" scoped="" ref="0x7f07813592b0"/>
        <function-ref name="setContinuous" scoped="" ref="0x7f0781359440"/>
        <function-ref name="getAdcsra" scoped="" ref="0x7f07813595d0"/>
        <function-ref name="getValue" scoped="" ref="0x7f0781359760"/>
        <function-ref name="dataReady" scoped="" ref="0x7f07813598f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm1280AdcSingle" ref="0x7f078135c830" loc="56:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcP.nc">
      <component-ref qname="Atm1280AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm1280AdcSingle" scoped="" ref="0x7f078135c830"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm1280AdcSingle"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x7f078135cbb0"/>
        <function-ref name="cancel" scoped="" ref="0x7f078135cd40"/>
        <function-ref name="dataReady" scoped="" ref="0x7f078135b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f078135d830" loc="54:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcP.nc">
      <component-ref qname="Atm1280AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f078135d830"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f078135dbb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128Calibrate" ref="0x7f0781359be0" loc="61:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcP.nc">
      <component-ref qname="Atm1280AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x7f0781359be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x7f078134a020"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x7f078134a1b0"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x7f078134a340"/>
        <function-ref name="actualMicro" scoped="" ref="0x7f078134a4d0"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x7f078134a660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0x7f078135c020" loc="55:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcP.nc">
      <component-ref qname="Atm1280AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x7f078135c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f078135c3a0"/>
        <function-ref name="stop" scoped="" ref="0x7f078135c530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm1280AdcMultiple" ref="0x7f078135b330" loc="57:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcP.nc">
      <component-ref qname="Atm1280AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm1280AdcMultiple" scoped="" ref="0x7f078135b330"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm1280AdcMultiple"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x7f078135b6b0"/>
        <function-ref name="dataReady" scoped="" ref="0x7f078135b840"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplAtm1280Adc" ref="0x7f0781318460" loc="45:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280AdcC.nc">
      <component-ref qname="HplAtm1280AdcC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm1280Adc" scoped="" ref="0x7f0781318460"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm1280Adc"/>
      </instance>
      <interface-functions>
        <function-ref name="setSingle" scoped="" ref="0x7f07813187e0"/>
        <function-ref name="getAdmux" scoped="" ref="0x7f0781318970"/>
        <function-ref name="setPrescaler" scoped="" ref="0x7f0781318b00"/>
        <function-ref name="isEnabled" scoped="" ref="0x7f0781318c90"/>
        <function-ref name="enableAdc" scoped="" ref="0x7f0781318e20"/>
        <function-ref name="setAdmux" scoped="" ref="0x7f0781317020"/>
        <function-ref name="enableInterruption" scoped="" ref="0x7f07813171b0"/>
        <function-ref name="isComplete" scoped="" ref="0x7f0781317340"/>
        <function-ref name="cancel" scoped="" ref="0x7f07813174d0"/>
        <function-ref name="disableAdc" scoped="" ref="0x7f0781317660"/>
        <function-ref name="resetInterrupt" scoped="" ref="0x7f07813177f0"/>
        <function-ref name="disableInterruption" scoped="" ref="0x7f0781317980"/>
        <function-ref name="startConversion" scoped="" ref="0x7f0781317b10"/>
        <function-ref name="isStarted" scoped="" ref="0x7f0781317da0"/>
        <function-ref name="setAdcsra" scoped="" ref="0x7f0781316020"/>
        <function-ref name="setContinuous" scoped="" ref="0x7f07813161b0"/>
        <function-ref name="getAdcsra" scoped="" ref="0x7f0781316340"/>
        <function-ref name="getValue" scoped="" ref="0x7f07813164d0"/>
        <function-ref name="dataReady" scoped="" ref="0x7f0781316660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerState" ref="0x7f0781311c10" loc="49:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280AdcP.nc">
      <component-ref qname="HplAtm1280AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x7f0781311c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x7f0781310020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplAtm1280Adc" ref="0x7f07813137d0" loc="48:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280AdcP.nc">
      <component-ref qname="HplAtm1280AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm1280Adc" scoped="" ref="0x7f07813137d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm1280Adc"/>
      </instance>
      <interface-functions>
        <function-ref name="setSingle" scoped="" ref="0x7f0781313b50"/>
        <function-ref name="getAdmux" scoped="" ref="0x7f0781313ce0"/>
        <function-ref name="setPrescaler" scoped="" ref="0x7f0781313e70"/>
        <function-ref name="isEnabled" scoped="" ref="0x7f0781312030"/>
        <function-ref name="enableAdc" scoped="" ref="0x7f07813121c0"/>
        <function-ref name="setAdmux" scoped="" ref="0x7f0781312350"/>
        <function-ref name="enableInterruption" scoped="" ref="0x7f07813124e0"/>
        <function-ref name="isComplete" scoped="" ref="0x7f0781312670"/>
        <function-ref name="cancel" scoped="" ref="0x7f0781312800"/>
        <function-ref name="disableAdc" scoped="" ref="0x7f0781312990"/>
        <function-ref name="resetInterrupt" scoped="" ref="0x7f0781312b20"/>
        <function-ref name="disableInterruption" scoped="" ref="0x7f0781312cb0"/>
        <function-ref name="startConversion" scoped="" ref="0x7f0781312e40"/>
        <function-ref name="isStarted" scoped="" ref="0x7f0781311120"/>
        <function-ref name="setAdcsra" scoped="" ref="0x7f07813112b0"/>
        <function-ref name="setContinuous" scoped="" ref="0x7f0781311440"/>
        <function-ref name="getAdcsra" scoped="" ref="0x7f07813115d0"/>
        <function-ref name="getValue" scoped="" ref="0x7f0781311760"/>
        <function-ref name="dataReady" scoped="" ref="0x7f07813118f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f07812a8c00" loc="92:../tinyos_ws18/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="Atm1280AdcC.AdcArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x7f07812a8c00"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f07812a6020"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f07812a61b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f07812a5930" loc="96:../tinyos_ws18/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="Atm1280AdcC.AdcArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f07812a5930"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f07812a5cd0"/>
        <function-ref name="configure" scoped="" ref="0x7f07812a5e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7f07812a6400" loc="93:../tinyos_ws18/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="Atm1280AdcC.AdcArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f07812a6400"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f07812a6780"/>
        <function-ref name="requested" scoped="" ref="0x7f07812a6910"/>
        <function-ref name="granted" scoped="" ref="0x7f07812a6aa0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f07812a6c30"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f07812a6dc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f07812a9e70" loc="91:../tinyos_ws18/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="Atm1280AdcC.AdcArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f07812a9e70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f07812a8240"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f07812a83d0"/>
        <function-ref name="request" scoped="" ref="0x7f07812a8560"/>
        <function-ref name="granted" scoped="" ref="0x7f07812a86f0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f07812a8880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f07812a5060" loc="94:../tinyos_ws18/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="Atm1280AdcC.AdcArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f07812a5060"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f07812a53e0"/>
        <function-ref name="userId" scoped="" ref="0x7f07812a5570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f0780775c00" loc="44:../tinyos_ws18/tos/system/RoundRobinResourceQueueC.nc">
      <component-ref qname="Atm1280AdcC.AdcArbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f0780775c00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f0780774020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RoundRobinQueue" ref="0x7f07807742b0" loc="45:../tinyos_ws18/tos/system/RoundRobinResourceQueueC.nc">
      <component-ref qname="Atm1280AdcC.AdcArbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RoundRobinQueue" scoped="" ref="0x7f07807742b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f0780774630"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f07807747c0"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f0780774950"/>
        <function-ref name="dequeue" scoped="" ref="0x7f0780774ae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f07807703a0" loc="55:../tinyos_ws18/tos/system/ArbiterP.nc">
      <component-ref qname="Atm1280AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x7f07807703a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f0780770740"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f07807708d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f078076e210" loc="60:../tinyos_ws18/tos/system/ArbiterP.nc">
      <component-ref qname="Atm1280AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f078076e210"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f078076e5b0"/>
        <function-ref name="configure" scoped="" ref="0x7f078076e740"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7f078076e9d0" loc="61:../tinyos_ws18/tos/system/ArbiterP.nc">
      <component-ref qname="Atm1280AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x7f078076e9d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f078076ed50"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f078076d020"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f078076d1b0"/>
        <function-ref name="dequeue" scoped="" ref="0x7f078076d340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7f0780770b20" loc="56:../tinyos_ws18/tos/system/ArbiterP.nc">
      <component-ref qname="Atm1280AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f0780770b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f078076f020"/>
        <function-ref name="requested" scoped="" ref="0x7f078076f1b0"/>
        <function-ref name="granted" scoped="" ref="0x7f078076f340"/>
        <function-ref name="isOwner" scoped="" ref="0x7f078076f4d0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f078076f660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f078076d590" loc="62:../tinyos_ws18/tos/system/ArbiterP.nc">
      <component-ref qname="Atm1280AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7f078076d590"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f078076d910"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f078076daa0"/>
        <function-ref name="led1On" scoped="" ref="0x7f078076dc30"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f078076ddc0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f078076c020"/>
        <function-ref name="get" scoped="" ref="0x7f078076c1b0"/>
        <function-ref name="led1Off" scoped="" ref="0x7f078076c340"/>
        <function-ref name="led0On" scoped="" ref="0x7f078076c980"/>
        <function-ref name="set" scoped="" ref="0x7f078076c660"/>
        <function-ref name="led2On" scoped="" ref="0x7f078076c4d0"/>
        <function-ref name="led2Off" scoped="" ref="0x7f078076c7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f07807714d0" loc="54:../tinyos_ws18/tos/system/ArbiterP.nc">
      <component-ref qname="Atm1280AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f07807714d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f0780771870"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f0780771a00"/>
        <function-ref name="request" scoped="" ref="0x7f0780771b90"/>
        <function-ref name="granted" scoped="" ref="0x7f0780771d20"/>
        <function-ref name="isOwner" scoped="" ref="0x7f0780770020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f078076f8b0" loc="57:../tinyos_ws18/tos/system/ArbiterP.nc">
      <component-ref qname="Atm1280AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f078076f8b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f078076fc30"/>
        <function-ref name="userId" scoped="" ref="0x7f078076fdc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x7f078076cc50" loc="75:../tinyos_ws18/tos/system/ArbiterP.nc">
      <component-ref qname="Atm1280AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x7f078076cc50"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f078076b020"/>
        <function-ref name="runTask" scoped="" ref="0x7f078076b1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x7f07812a0780" loc="72:../tinyos_ws18/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Atm1280AdcC.PM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PowerDownCleanup" scoped="" ref="0x7f07812a0780"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x7f07812a0b00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x7f07812a0d50" loc="73:../tinyos_ws18/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Atm1280AdcC.PM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f07812a0d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f0781296100"/>
        <function-ref name="requested" scoped="" ref="0x7f0781296290"/>
        <function-ref name="granted" scoped="" ref="0x7f0781296420"/>
        <function-ref name="isOwner" scoped="" ref="0x7f07812965b0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f0781296740"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AsyncStdControl" ref="0x7f07812a0020" loc="70:../tinyos_ws18/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Atm1280AdcC.PM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x7f07812a0020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f07812a03a0"/>
        <function-ref name="stop" scoped="" ref="0x7f07812a0530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7f0781296990" loc="74:../tinyos_ws18/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Atm1280AdcC.PM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f0781296990"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f0781296d10"/>
        <function-ref name="userId" scoped="" ref="0x7f0781295020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x7f0780739dc0" loc="62:../tinyos_ws18/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm1280AdcC.PM.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PowerDownCleanup" scoped="" ref="0x7f0780739dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x7f0780738180"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x7f07807383d0" loc="63:../tinyos_ws18/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm1280AdcC.PM.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f07807383d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f0780738750"/>
        <function-ref name="requested" scoped="" ref="0x7f07807388e0"/>
        <function-ref name="granted" scoped="" ref="0x7f0780738a70"/>
        <function-ref name="isOwner" scoped="" ref="0x7f0780738c00"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f0780738d90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AsyncStdControl" ref="0x7f0780739660" loc="60:../tinyos_ws18/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm1280AdcC.PM.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x7f0780739660"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f07807399e0"/>
        <function-ref name="stop" scoped="" ref="0x7f0780739b70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7f0780737020" loc="64:../tinyos_ws18/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm1280AdcC.PM.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f0780737020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f07807373a0"/>
        <function-ref name="userId" scoped="" ref="0x7f0780737530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BusyWait" ref="0x7f0781287740" loc="54:../tinyos_ws18/tos/chips_ecs/atm1280/adc/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BusyWait" scoped="" ref="0x7f0781287740"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f07825825c0"/>
            <typename><typedef-ref name="TMicro" ref="0x7f0782582930"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f0782f56610"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x7f07812855b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm1280AdcSingle" ref="0x7f07812899f0" loc="52:../tinyos_ws18/tos/chips_ecs/atm1280/adc/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm1280AdcSingle" scoped="" ref="0x7f07812899f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm1280AdcSingle"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x7f0781289d70"/>
        <function-ref name="cancel" scoped="" ref="0x7f0781288020"/>
        <function-ref name="dataReady" scoped="" ref="0x7f07812881b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x7f078128d410" loc="48:../tinyos_ws18/tos/chips_ecs/atm1280/adc/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x7f078128d410"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f0782f56610"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f078128c020"/>
        <function-ref name="readDone" scoped="" ref="0x7f078128c4a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadNow" ref="0x7f078128a1d0" loc="49:../tinyos_ws18/tos/chips_ecs/atm1280/adc/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReadNow" scoped="" ref="0x7f078128a1d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadNow"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f0782f56610"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f078128ae00"/>
        <function-ref name="readDone" scoped="" ref="0x7f0781289340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm1280AdcConfig" ref="0x7f0781288a10" loc="53:../tinyos_ws18/tos/chips_ecs/atm1280/adc/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm1280AdcConfig" scoped="" ref="0x7f0781288a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm1280AdcConfig"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x7f0781288d90"/>
        <function-ref name="getChannel" scoped="" ref="0x7f0781287020"/>
        <function-ref name="getPrescaler" scoped="" ref="0x7f07812871b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="acquiredData" ref="0x7f0781275820" loc="104:../tinyos_ws18/tos/chips_ecs/atm1280/adc/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="acquiredData" scoped="" ref="0x7f0781275820"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f0781275ba0"/>
        <function-ref name="runTask" scoped="" ref="0x7f0781275d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x7f0781260150" loc="24:../tinyos_ws18/tos/system/ArbitratedReadC.nc">
      <component-ref qname="WireAdcP.ArbitrateRead"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x7f0781260150"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f0782f56610"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f0781260d60"/>
        <function-ref name="readDone" scoped="" ref="0x7f0781247260"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Service" ref="0x7f0781247af0" loc="26:../tinyos_ws18/tos/system/ArbitratedReadC.nc">
      <component-ref qname="WireAdcP.ArbitrateRead"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Service" scoped="" ref="0x7f0781247af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f0782f56610"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f0781246750"/>
        <function-ref name="readDone" scoped="" ref="0x7f0781246bf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x7f0781245300" loc="27:../tinyos_ws18/tos/system/ArbitratedReadC.nc">
      <component-ref qname="WireAdcP.ArbitrateRead"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f0781245300"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f07812456a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f0781245830"/>
        <function-ref name="request" scoped="" ref="0x7f07812459c0"/>
        <function-ref name="granted" scoped="" ref="0x7f0781245b50"/>
        <function-ref name="isOwner" scoped="" ref="0x7f0781245ce0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BufferedLcd" ref="0x7f0781392590" loc="7:../tinyos_ws18/tos/lib_ecs/lcd/BufferedLcdC.nc">
      <component-ref qname="BufferedLcdC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BufferedLcd" scoped="" ref="0x7f0781392590"/></type-interface>
      <instance>
        <interfacedef-ref qname="BufferedLcd"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f0781392910"/>
        <function-ref name="forceRefresh" scoped="" ref="0x7f0781392aa0"/>
        <function-ref name="goTo" scoped="" ref="0x7f0781392c30"/>
        <function-ref name="write" scoped="" ref="0x7f0781392dc0"/>
        <function-ref name="autoRefresh" scoped="" ref="0x7f0781235020"/>
        <function-ref name="write_P" scoped="" ref="0x7f07812351b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f0781234560" loc="45:../tinyos_ws18/tos/system/TimerMilliC.nc">
      <component-ref qname="BufferedLcdC.Timer"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f0781234560"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f07825841a0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f0782584510"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f0781230a20"/>
        <function-ref name="fired" scoped="" ref="0x7f0781231020"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f0781231da0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f0781231920"/>
        <function-ref name="getdt" scoped="" ref="0x7f078122f4a0"/>
        <function-ref name="gett0" scoped="" ref="0x7f078122f020"/>
        <function-ref name="isRunning" scoped="" ref="0x7f07812314a0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f07812331b0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f0781230410"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f0781233680"/>
        <function-ref name="stop" scoped="" ref="0x7f0781233b50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BufferedLcd" ref="0x7f07811fc020" loc="7:../tinyos_ws18/tos/lib_ecs/lcd/BufferedLcdP.nc">
      <component-ref qname="BufferedLcdC.BufferedLcdP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BufferedLcd" scoped="" ref="0x7f07811fc020"/></type-interface>
      <instance>
        <interfacedef-ref qname="BufferedLcd"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f07811fc3a0"/>
        <function-ref name="forceRefresh" scoped="" ref="0x7f07811fc530"/>
        <function-ref name="goTo" scoped="" ref="0x7f07811fc6c0"/>
        <function-ref name="write" scoped="" ref="0x7f07811fc850"/>
        <function-ref name="autoRefresh" scoped="" ref="0x7f07811fc9e0"/>
        <function-ref name="write_P" scoped="" ref="0x7f07811fcb70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f07811f6c30" loc="10:../tinyos_ws18/tos/lib_ecs/lcd/BufferedLcdP.nc">
      <component-ref qname="BufferedLcdC.BufferedLcdP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f07811f6c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f07811f5020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Lcd" ref="0x7f07811f6490" loc="9:../tinyos_ws18/tos/lib_ecs/lcd/BufferedLcdP.nc">
      <component-ref qname="BufferedLcdC.BufferedLcdP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Lcd" scoped="" ref="0x7f07811f6490"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplLcd"/>
      </instance>
      <interface-functions>
        <function-ref name="writeData" scoped="" ref="0x7f07811f6810"/>
        <function-ref name="writeCommand" scoped="" ref="0x7f07811f69a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="refresh" ref="0x7f07811f52f0" loc="34:../tinyos_ws18/tos/lib_ecs/lcd/BufferedLcdP.nc">
      <component-ref qname="BufferedLcdC.BufferedLcdP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="refresh" scoped="" ref="0x7f07811f52f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f07811f5670"/>
        <function-ref name="runTask" scoped="" ref="0x7f07811f5800"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f07811fb020" loc="8:../tinyos_ws18/tos/lib_ecs/lcd/BufferedLcdP.nc">
      <component-ref qname="BufferedLcdC.BufferedLcdP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f07811fb020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f07825841a0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f0782584510"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f07811f7630"/>
        <function-ref name="fired" scoped="" ref="0x7f07811faa60"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f07811f9920"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f07811f94a0"/>
        <function-ref name="getdt" scoped="" ref="0x7f07811f6020"/>
        <function-ref name="gett0" scoped="" ref="0x7f07811f7ab0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f07811f9020"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f07811fbc10"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f07811f7020"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f07811fa110"/>
        <function-ref name="stop" scoped="" ref="0x7f07811fa5e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplLcd" ref="0x7f07811f1100" loc="7:../tinyos_ws18/tos/lib_ecs/lcd/HplLcdC.nc">
      <component-ref qname="HplLcdC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplLcd" scoped="" ref="0x7f07811f1100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplLcd"/>
      </instance>
      <interface-functions>
        <function-ref name="writeData" scoped="" ref="0x7f07811f1480"/>
        <function-ref name="writeCommand" scoped="" ref="0x7f07811f1610"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BusyWait" ref="0x7f07811ebaa0" loc="10:../tinyos_ws18/tos/lib_ecs/lcd/HplLcdP.nc">
      <component-ref qname="HplLcdP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BusyWait" scoped="" ref="0x7f07811ebaa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f07825825c0"/>
            <typename><typedef-ref name="TMicro" ref="0x7f0782582930"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f0782f56610"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x7f07811ea8d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f07811f07c0" loc="7:../tinyos_ws18/tos/lib_ecs/lcd/HplLcdP.nc">
      <component-ref qname="HplLcdP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f07811f07c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f07811f0b40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplLcd" ref="0x7f07811f0e10" loc="8:../tinyos_ws18/tos/lib_ecs/lcd/HplLcdP.nc">
      <component-ref qname="HplLcdP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplLcd" scoped="" ref="0x7f07811f0e10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplLcd"/>
      </instance>
      <interface-functions>
        <function-ref name="writeData" scoped="" ref="0x7f07811ed1c0"/>
        <function-ref name="writeCommand" scoped="" ref="0x7f07811ed350"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Port" ref="0x7f07811ed6e0" loc="9:../tinyos_ws18/tos/lib_ecs/lcd/HplLcdP.nc">
      <component-ref qname="HplLcdP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Port" scoped="" ref="0x7f07811ed6e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIOPort"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f07811eda60"/>
        <function-ref name="clear" scoped="" ref="0x7f07811edbf0"/>
        <function-ref name="toggle" scoped="" ref="0x7f07811edd80"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f07811eb020"/>
        <function-ref name="read" scoped="" ref="0x7f07811eb1b0"/>
        <function-ref name="write" scoped="" ref="0x7f07811eb340"/>
        <function-ref name="set" scoped="" ref="0x7f07811eb4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f07811d6d00" loc="45:../tinyos_ws18/tos/system/TimerMilliC.nc">
      <component-ref qname="RadioScannerAppC.VolumeTimer"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f07811d6d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f07825841a0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f0782584510"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f07811d1220"/>
        <function-ref name="fired" scoped="" ref="0x7f07811d47c0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f07811d2590"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f07811d2110"/>
        <function-ref name="getdt" scoped="" ref="0x7f07811d1b20"/>
        <function-ref name="gett0" scoped="" ref="0x7f07811d16a0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f07811d4c40"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f07811d5940"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f07811d2ba0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f07811d5e10"/>
        <function-ref name="stop" scoped="" ref="0x7f07811d4340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f07811cf750" loc="45:../tinyos_ws18/tos/system/TimerMilliC.nc">
      <component-ref qname="RadioScannerAppC.DisplayTimer"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f07811cf750"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f07825841a0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f0782584510"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f07811cbc40"/>
        <function-ref name="fired" scoped="" ref="0x7f07811cc1e0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f07811cb020"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f07811ccae0"/>
        <function-ref name="getdt" scoped="" ref="0x7f07811ca590"/>
        <function-ref name="gett0" scoped="" ref="0x7f07811ca110"/>
        <function-ref name="isRunning" scoped="" ref="0x7f07811cc660"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f07811ce390"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f07811cb630"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f07811ce860"/>
        <function-ref name="stop" scoped="" ref="0x7f07811ced30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f07811c80b0" loc="45:../tinyos_ws18/tos/system/TimerMilliC.nc">
      <component-ref qname="RadioScannerAppC.ErrorTimer"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f07811c80b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f07825841a0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f0782584510"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f07811c4630"/>
        <function-ref name="fired" scoped="" ref="0x7f07811c6b00"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f07811c5920"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f07811c54a0"/>
        <function-ref name="getdt" scoped="" ref="0x7f07811c3020"/>
        <function-ref name="gett0" scoped="" ref="0x7f07811c4ab0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f07811c5020"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f07811c8ca0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f07811c4020"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f07811c61b0"/>
        <function-ref name="stop" scoped="" ref="0x7f07811c6680"/>
      </interface-functions>
    </interface>
  </interfaces>
  <interfacedefs>
    <interfacedef qname="Init" loc="51:../tinyos_ws18/tos/interfaces/Init.nc">
      <documentation loc="34:../tinyos_ws18/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x7f07824aa740" loc="62:../tinyos_ws18/tos/interfaces/Init.nc">
        <documentation loc="53:../tinyos_ws18/tos/interfaces/Init.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components.  &#10; &#10; @return SUCCESS if initialized properly, FAIL otherwise.&#10; @see TEP 107: Boot Sequence&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Init"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f07826323a0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Boot" loc="50:../tinyos_ws18/tos/interfaces/Boot.nc">
      <documentation loc="42:../tinyos_ws18/tos/interfaces/Boot.nc">
        <short>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.</short>
        <long>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10;</long>
      </documentation>
      <function event="" provided="0" name="booted" ref="0x7f07824ab350" loc="60:../tinyos_ws18/tos/interfaces/Boot.nc">
        <documentation loc="51:../tinyos_ws18/tos/interfaces/Boot.nc">
          <short>&#10; Signaled when the system has booted successfully.</short>
          <long>&#10; Signaled when the system has booted successfully. Components can&#10; assume the system has been initialized properly. Services may&#10; need to be started to work, however.&#10;&#10; @see StdControl&#10; @see SplitConrol&#10; @see TEP 107: Boot Sequence&#10;</long>
        </documentation>
        <interfacedef-ref qname="Boot"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128Calibrate" loc="26:../tinyos_ws18/tos/chips/atm128/timer/Atm128Calibrate.nc">
      <documentation loc="11:../tinyos_ws18/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <short>&#10; This interface provides functions to compute ATmega128 configuration&#10; values that are clock-rate dependent.</short>
        <long>&#10; This interface provides functions to compute ATmega128 configuration&#10; values that are clock-rate dependent. These include:&#60;ul>&#10; &#60;li>the ADC prescaler value necessary for full precision&#10; &#60;li>values for the UBRR registers to achieve a specific baud rate&#10; &#60;li>any adjustment necessary to values passed to some platform-provided&#10;   AlarmMicroXXC components to get more accurate timing&#10; &#60;li>the number of cycles per 1/32768s (a typical implementation of this&#10;   interface will measure this value at boot time and use it to compute&#10;   the values above)&#10; &#60;/ul>&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="baudrateRegister" ref="0x7f07824a2b70" loc="60:../tinyos_ws18/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="55:../tinyos_ws18/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return the value to use for the baudrate register to achieve a&#10; particular baud rate.</short>
          <long>&#10; Return the value to use for the baudrate register to achieve a&#10; particular baud rate. Assumes U2X=1 (the USART is being run at&#10; double speed).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f0782f56610"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f0782f55170"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="baudrate" ref="0x7f07824a28f0" loc="60:../tinyos_ws18/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f0782f55170"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cyclesPerJiffy" ref="0x7f07824a5070" loc="31:../tinyos_ws18/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="27:../tinyos_ws18/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return CPU cycles per 1/32768s.</short>
          <long>&#10; Return CPU cycles per 1/32768s.&#10; @return CPU cycles.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f0782f56610"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="calibrateMicro" ref="0x7f07824a5af0" loc="39:../tinyos_ws18/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="33:../tinyos_ws18/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Convert n microseconds into a value suitable for use with&#10; AlarmMicro32C Alarms.</short>
          <long>&#10; Convert n microseconds into a value suitable for use with&#10; AlarmMicro32C Alarms.&#10; @param n Time in microseconds.&#10; @return AlarmMicro argument that best approximates n microseconds.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f0782f55170"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f0782f55170"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x7f07824a5870" loc="39:../tinyos_ws18/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f0782f55170"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="actualMicro" ref="0x7f07824a3630" loc="46:../tinyos_ws18/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="41:../tinyos_ws18/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Convert values used by AlarmMicro32C Alarms into actual microseconds.</short>
          <long>&#10; Convert values used by AlarmMicro32C Alarms into actual microseconds.&#10; @param n A time expressed in AlarmMicro time units.&#10; @return Time in microseconds that corresponds to AlarmMicro argument n.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f0782f55170"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f0782f55170"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x7f07824a33b0" loc="46:../tinyos_ws18/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f0782f55170"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="adcPrescaler" ref="0x7f07824a2020" loc="53:../tinyos_ws18/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="48:../tinyos_ws18/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return the smallest ADC prescaler value which guaranteers full&#10; ADC precision.</short>
          <long>&#10; Return the smallest ADC prescaler value which guaranteers full&#10; ADC precision.&#10; @return ADC prescaler value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Scheduler" loc="52:../tinyos_ws18/tos/interfaces/Scheduler.nc">
      <documentation loc="42:../tinyos_ws18/tos/interfaces/Scheduler.nc">
        <short> &#10; The interface to a TinyOS task scheduler.</short>
        <long> &#10; The interface to a TinyOS task scheduler.&#10;&#10; @author Philip Levis&#10; @date   January 19 2005&#10; @see TEP 106: Tasks and Schedulers&#10; @see TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x7f07826396c0" loc="57:../tinyos_ws18/tos/interfaces/Scheduler.nc">
        <documentation loc="54:../tinyos_ws18/tos/interfaces/Scheduler.nc">
          <short> &#10; Initialize the scheduler.</short>
          <long> &#10; Initialize the scheduler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="taskLoop" ref="0x7f07826386a0" loc="72:../tinyos_ws18/tos/interfaces/Scheduler.nc">
        <documentation loc="67:../tinyos_ws18/tos/interfaces/Scheduler.nc">
          <short>&#10; Enter an infinite task-running loop.</short>
          <long>&#10; Enter an infinite task-running loop. Put the MCU into a low power&#10; state when the processor is idle (task queue empty, waiting for&#10; interrupts). This call never returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="runNextTask" ref="0x7f0782639e30" loc="65:../tinyos_ws18/tos/interfaces/Scheduler.nc">
        <documentation loc="59:../tinyos_ws18/tos/interfaces/Scheduler.nc">
          <short> &#10; Run the next task if one is waiting, otherwise return immediately.</short>
          <long> &#10; Run the next task if one is waiting, otherwise return immediately. &#10;&#10; @return        whether a task was run -- TRUE indicates a task&#10;                ran, FALSE indicates there was no task to run.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f078263c500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TaskBasic" loc="55:../tinyos_ws18/tos/interfaces/TaskBasic.nc">
      <function command="" provided="0" name="postTask" ref="0x7f0782630a30" loc="67:../tinyos_ws18/tos/interfaces/TaskBasic.nc">
        <documentation loc="57:../tinyos_ws18/tos/interfaces/TaskBasic.nc">
          <short>&#10; Post this task to the TinyOS scheduler.</short>
          <long>&#10; Post this task to the TinyOS scheduler. At some later time,&#10; depending on the scheduling policy, the scheduler will signal the&#10; &#60;tt>run()&#60;/tt> event. &#10;&#10; @return SUCCESS if task was successfuly&#10; posted; the semantics of a non-SUCCESS return value depend on the&#10; implementation of this interface (the class of task).&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f07826323a0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="runTask" ref="0x7f078262e2b0" loc="75:../tinyos_ws18/tos/interfaces/TaskBasic.nc">
        <documentation loc="69:../tinyos_ws18/tos/interfaces/TaskBasic.nc">
          <short>&#10; Event from the scheduler to run this task.</short>
          <long>&#10; Event from the scheduler to run this task. Following the TinyOS&#10; concurrency model, the codes invoked from &#60;tt>run()&#60;/tt> signals&#10; execute atomically with respect to one another, but can be&#10; preempted by async commands/events.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuSleep" loc="74:../tinyos_ws18/tos/interfaces/McuSleep.nc">
      <documentation loc="63:../tinyos_ws18/tos/interfaces/McuSleep.nc">
        <short>&#10; Interface to instruct the MCU to enter a low power state.</short>
        <long>&#10; Interface to instruct the MCU to enter a low power state. TEP112&#10; describes how an MCU computes this state and how the Scheduler uses&#10; this interface to manage system power draw.&#10; &#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @date   Oct 26, 2005&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="sleep" ref="0x7f0782536d40" loc="76:../tinyos_ws18/tos/interfaces/McuSleep.nc">
        <documentation loc="75:../tinyos_ws18/tos/interfaces/McuSleep.nc">
          <short> Called by the scheduler to put the MCU to sleep.</short>
          <long> Called by the scheduler to put the MCU to sleep. *</long>
        </documentation>
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerOverride" loc="50:../tinyos_ws18/tos/interfaces/McuPowerOverride.nc">
      <documentation loc="35:../tinyos_ws18/tos/interfaces/McuPowerOverride.nc">
        <short>&#10; Interface to allow high-level components to set a lower bound for a&#10; microcontroller's low power state.</short>
        <long>&#10; Interface to allow high-level components to set a lower bound for a&#10; microcontroller's low power state. This is sometimes necessary,&#10; e.g., if a very low power state has a long wakeup latency that will&#10; violate application timing requirements. TEP 112 describes how&#10; TinyOS incorporates this information when the Scheduler tells&#10; the MCU to enter a low power state.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microconroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="lowestState" ref="0x7f0782516940" loc="62:../tinyos_ws18/tos/interfaces/McuPowerOverride.nc">
        <documentation loc="52:../tinyos_ws18/tos/interfaces/McuPowerOverride.nc">
          <short>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound.</short>
          <long>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound. Because&#10; this command originates deep within the basic TinyOS scheduling&#10; mechanisms, it should be used very sparingly. Refer to TEP 112 for&#10; details.&#10;&#10; @return    the lowest power state the system can enter to meet the &#10;            requirements of this component&#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerOverride"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="mcu_power_t" ref="0x7f07825b5470"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerState" loc="46:../tinyos_ws18/tos/interfaces/McuPowerState.nc">
      <documentation loc="35:../tinyos_ws18/tos/interfaces/McuPowerState.nc">
        <short>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed.</short>
        <long>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed. TEP 112 describes how an MCU computes this state&#10; and how the Scheduler uses this interface to manage system power&#10; draw.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microcontroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="update" ref="0x7f07825171f0" loc="52:../tinyos_ws18/tos/interfaces/McuPowerState.nc">
        <documentation loc="47:../tinyos_ws18/tos/interfaces/McuPowerState.nc">
          <short> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed.</short>
          <long> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed. Generally, this should be&#10; called whenever a peripheral/timer is started/stopped. &#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Database" loc="23:Database/Database.nc">
      <function command="" provided="0" name="getChannelList" ref="0x7f0782446b50" loc="40:Database/Database.nc">
        <documentation loc="34:Database/Database.nc">
          <short>&#10; Request the channel list from the database server&#10; Received channels will be signaled through receivedChannelEntry&#10; </short>
          <long>&#10; Request the channel list from the database server&#10; Received channels will be signaled through receivedChannelEntry&#10; @param onlyFavorites tells server to send only the channels with a&#10;        registered quickDial number, if not zero&#10;</long>
        </documentation>
        <interfacedef-ref qname="Database"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="onlyFavorites" ref="0x7f07824468d0" loc="40:Database/Database.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="receivedChannelEntry" ref="0x7f0782444c60" loc="59:Database/Database.nc">
        <documentation loc="54:Database/Database.nc">
          <short>&#10; Received highscore entry from the server.</short>
          <long>&#10; Received highscore entry from the server.&#10; @param id The channel index from the database store&#10; @param channel The channel information, see channelInfo typedef&#10;</long>
        </documentation>
        <interfacedef-ref qname="Database"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
            <type-tag size="I:9" alignment="I:1"><struct-ref ref="0x7f0782449ab0"/>
              <typename><typedef-ref name="channelInfo" ref="0x7f0782448180"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x7f0782444650" loc="59:Database/Database.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </variable>
          <variable name="channel" ref="0x7f07824449d0" loc="59:Database/Database.nc">
            <type-tag size="I:9" alignment="I:1"><struct-ref ref="0x7f0782449ab0"/>
              <typename><typedef-ref name="channelInfo" ref="0x7f0782448180"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="saveChannel" ref="0x7f0782446020" loc="31:Database/Database.nc">
        <documentation loc="25:Database/Database.nc">
          <short>&#10; Save a new channel, or change properties of an existing one.</short>
          <long>&#10; Save a new channel, or change properties of an existing one.&#10; @param id The channel index from the database store, 0xFF to autoselect,&#10;           must be between 0 and 15 if passed manually&#10; @param channel The channel information, see channelInfo typedef&#10;</long>
        </documentation>
        <interfacedef-ref qname="Database"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:9" alignment="I:1"><struct-ref ref="0x7f0782449ab0"/>
                <typename><typedef-ref name="channelInfo" ref="0x7f0782448180"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x7f0782448930" loc="31:Database/Database.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </variable>
          <variable name="channel" ref="0x7f0782448cf0" loc="31:Database/Database.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:9" alignment="I:1"><struct-ref ref="0x7f0782449ab0"/>
                <typename><typedef-ref name="channelInfo" ref="0x7f0782448180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="savedChannel" ref="0x7f0782442a50" loc="67:Database/Database.nc">
        <documentation loc="61:Database/Database.nc">
          <short>&#10; Server proceesed our request to save a Channel&#10; </short>
          <long>&#10; Server proceesed our request to save a Channel&#10; @param id The channel index from the database store, the one we passed&#10;           or the which was choosen if 0xFF was passed.&#10; @param result 0 = OK, 1 = No free index (only ID auto choose), 2 = DB error &#10;</long>
        </documentation>
        <interfacedef-ref qname="Database"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x7f0782442470" loc="67:Database/Database.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </variable>
          <variable name="result" ref="0x7f07824427c0" loc="67:Database/Database.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getChannel" ref="0x7f0782445670" loc="46:Database/Database.nc">
        <documentation loc="42:Database/Database.nc">
          <short>&#10; Request the channel list from the database server&#10; Received channels will be signaled through receivedChannelEntry&#10;</short>
        </documentation>
        <interfacedef-ref qname="Database"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x7f07824453f0" loc="46:Database/Database.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="purgeChannelList" ref="0x7f0782445e30" loc="52:Database/Database.nc">
        <documentation loc="48:Database/Database.nc">
          <short>&#10; Request that the Database purges all channels and their state&#10; Received channels will be signaled through receivedChannelEntry&#10;</short>
        </documentation>
        <interfacedef-ref qname="Database"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Read" loc="49:../tinyos_ws18/tos/interfaces/Read.nc">
      <documentation loc="33:../tinyos_ws18/tos/interfaces/Read.nc">
        <short>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values.</short>
        <long>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values. The type of the value is&#10; given as a template argument. Because this interface is&#10; split-phase, these values may be backed by hardware, or a&#10; long-running computation.&#10;&#10; &#60;p>&#10; See TEP114 - SIDs: Source and Sink Independent Drivers for details.&#10; &#10; @param val_t the type of the object that will be returned&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:14 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="val_t" ref="0x7f0782436620" loc="49:../tinyos_ws18/tos/interfaces/Read.nc">
          <interfacedef-ref qname="Read"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7f0782436620"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="read" ref="0x7f0782432020" loc="55:../tinyos_ws18/tos/interfaces/Read.nc">
        <documentation loc="50:../tinyos_ws18/tos/interfaces/Read.nc">
          <short>&#10; Initiates a read of the value.</short>
          <long>&#10; Initiates a read of the value.&#10; &#10; @return SUCCESS if a readDone() event will eventually come back.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f07826323a0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x7f0782432d50" loc="63:../tinyos_ws18/tos/interfaces/Read.nc">
        <documentation loc="57:../tinyos_ws18/tos/interfaces/Read.nc">
          <short>&#10; Signals the completion of the read().</short>
          <long>&#10; Signals the completion of the read().&#10;&#10; @param result SUCCESS if the read() was successful&#10; @param val the value that has been read&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f07826323a0"/></typename>
            </type-int>
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7f0782436620"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x7f07824327a0" loc="63:../tinyos_ws18/tos/interfaces/Read.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f07826323a0"/></typename>
            </type-int>
          </variable>
          <variable name="val" ref="0x7f0782432ac0" loc="63:../tinyos_ws18/tos/interfaces/Read.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7f0782436620"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PS2" loc="1:PS2/PS2.nc">
      <function command="" provided="0" name="init" ref="0x7f0782440890" loc="4:PS2/PS2.nc">
        <interfacedef-ref qname="PS2"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="receivedChar" ref="0x7f07824342a0" loc="7:PS2/PS2.nc">
        <interfacedef-ref qname="PS2"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="chr" ref="0x7f0782434020" loc="7:PS2/PS2.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Timer" loc="53:../tinyos_ws18/tos/lib/timer/Timer.nc">
      <documentation loc="36:../tinyos_ws18/tos/lib/timer/Timer.nc">
        <short>&#10; A Timer is TinyOS's general purpose timing interface.</short>
        <long>&#10; A Timer is TinyOS's general purpose timing interface. For more precise&#10; timing, you may wish to use a (platform-specific) component offering&#10; an Alarm interface.&#10;&#10; &#60;p>A Timer is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f078242e350" loc="53:../tinyos_ws18/tos/lib/timer/Timer.nc">
          <interfacedef-ref qname="Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f078242e350"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x7f07824271f0" loc="136:../tinyos_ws18/tos/lib/timer/Timer.nc">
        <documentation loc="132:../tinyos_ws18/tos/lib/timer/Timer.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f0782f55170"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7f078242ca60" loc="83:../tinyos_ws18/tos/lib/timer/Timer.nc">
        <documentation loc="80:../tinyos_ws18/tos/lib/timer/Timer.nc">
          <short>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).</short>
          <long>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodicAt" ref="0x7f0782429820" loc="114:../tinyos_ws18/tos/lib/timer/Timer.nc">
        <documentation loc="100:../tinyos_ws18/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. The &#60;code>fired&#60;/code> will be signaled every&#10; dt units (first event at t0+dt units). Periodic timers set in the past&#10; will get a bunch of events in succession, until the timer &#34;catches up&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f0782f55170"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f0782f55170"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7f0782429250" loc="114:../tinyos_ws18/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f0782f55170"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x7f0782429590" loc="114:../tinyos_ws18/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f0782f55170"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOneShot" ref="0x7f078242aa60" loc="98:../tinyos_ws18/tos/lib/timer/Timer.nc">
        <documentation loc="94:../tinyos_ws18/tos/lib/timer/Timer.nc">
          <short>&#10; Check if this is a one-shot timer.</short>
          <long>&#10; Check if this is a one-shot timer.&#10; @return TRUE for one-shot timers, FALSE for periodic timers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f078263c500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getdt" ref="0x7f0782425270" loc="151:../tinyos_ws18/tos/lib/timer/Timer.nc">
        <documentation loc="146:../tinyos_ws18/tos/lib/timer/Timer.nc">
          <short>&#10; Return the delay or period for the previously started timer.</short>
          <long>&#10; Return the delay or period for the previously started timer. The next&#10; fired event will occur at gett0() + getdt().&#10; @return Timer's interval.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f0782f55170"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="gett0" ref="0x7f0782427980" loc="144:../tinyos_ws18/tos/lib/timer/Timer.nc">
        <documentation loc="138:../tinyos_ws18/tos/lib/timer/Timer.nc">
          <short>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers.</short>
          <long>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers. The next fired event will occur&#10; at gett0() + getdt().&#10; @return Timer's base time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f0782f55170"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x7f078242a270" loc="92:../tinyos_ws18/tos/lib/timer/Timer.nc">
        <documentation loc="86:../tinyos_ws18/tos/lib/timer/Timer.nc">
          <short>&#10; Check if timer is running.</short>
          <long>&#10; Check if timer is running. Periodic timers run until stopped or&#10; replaced, one-shot timers run until their deadline expires.&#10;&#10; @return TRUE if the timer is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f078263c500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodic" ref="0x7f078242d020" loc="64:../tinyos_ws18/tos/lib/timer/Timer.nc">
        <documentation loc="56:../tinyos_ws18/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. Equivalent to startPeriodicAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled every dt units (first&#10; event in dt units).&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f0782f55170"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7f078242ec40" loc="64:../tinyos_ws18/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f0782f55170"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShotAt" ref="0x7f0782428820" loc="129:../tinyos_ws18/tos/lib/timer/Timer.nc">
        <documentation loc="116:../tinyos_ws18/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to time t0+dt.</short>
          <long>&#10; Set a single-short timer to time t0+dt. Replaces any current timer&#10; settings. The &#60;code>fired&#60;/code> will be signaled when the timer&#10; expires. Timers set in the past will fire &#34;soon&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f0782f55170"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f0782f55170"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7f0782428250" loc="129:../tinyos_ws18/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f0782f55170"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x7f0782428590" loc="129:../tinyos_ws18/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f0782f55170"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShot" ref="0x7f078242dae0" loc="73:../tinyos_ws18/tos/lib/timer/Timer.nc">
        <documentation loc="66:../tinyos_ws18/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to some time units in the future.</short>
          <long>&#10; Set a single-short timer to some time units in the future. Replaces&#10; any current timer settings. Equivalent to startOneShotAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled when the timer expires.&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f0782f55170"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7f078242d860" loc="73:../tinyos_ws18/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f0782f55170"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f078242c350" loc="78:../tinyos_ws18/tos/lib/timer/Timer.nc">
        <documentation loc="75:../tinyos_ws18/tos/lib/timer/Timer.nc">
          <short>&#10; Cancel a timer.</short>
          <long>&#10; Cancel a timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BufferedLcd" loc="8:../tinyos_ws18/tos/lib_ecs/lcd/BufferedLcd.nc">
      <documentation loc="44:/usr/lib/gcc/avr/4.9.1/../../../../avr/include/avr/pgmspace.h">
        <short> \defgroup avr_pgmspace &#60;avr/pgmspace.h>: Program Space Utilities&#10;\code&#10;#include &#60;avr/io.h>&#10;#include &#60;avr/pgmspace.h>&#10;\endcode&#10;The functions in this module provide interfaces for a program to access&#10;data stored in program space (flash memory) of the device.</short>
        <long> \defgroup avr_pgmspace &#60;avr/pgmspace.h>: Program Space Utilities&#10;\code&#10;#include &#60;avr/io.h>&#10;#include &#60;avr/pgmspace.h>&#10;\endcode&#10;The functions in this module provide interfaces for a program to access&#10;data stored in program space (flash memory) of the device.  In order to&#10;use these functions, the target device must support either the \c LPM or&#10;\c ELPM instructions.&#10;\note These functions are an attempt to provide some compatibility with&#10;header files that come with IAR C, to make porting applications between&#10;different compilers easier.  This is not 100% compatibility though (GCC&#10;does not have full support for multiple address spaces yet).&#10;\note If you are working with strings which are completely based in ram,&#10;use the standard string functions described in \ref avr_string.&#10;\note If possible, put your constant tables in the lower 64 KB and use&#10;pgm_read_byte_near() or pgm_read_word_near() instead of&#10;pgm_read_byte_far() or pgm_read_word_far() since it is more efficient that&#10;way, and you can still use the upper 64K for executable code.&#10;All functions that are suffixed with a \c _P \e require their&#10;arguments to be in the lower 64 KB of the flash ROM, as they do&#10;not use ELPM instructions.  This is normally not a big concern as&#10;the linker setup arranges any program space constants declared&#10;using the macros from this header file so they are placed right after&#10;the interrupt vectors, and in front of any executable code.  However,&#10;it can become a problem if there are too many of these constants, or&#10;for bootloaders on devices with more than 64 KB of ROM.&#10;&#60;em>All these functions will not work in that situation.&#60;/em>&#10;\note For &#60;b>Xmega&#60;/b> devices, make sure the NVM controller&#10;command register (\c NVM.CMD or \c NVM_CMD) is set to 0x00 (NOP)&#10;before using any of these functions.&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x7f078244fc00" loc="13:../tinyos_ws18/tos/lib_ecs/lcd/BufferedLcd.nc">
        <interfacedef-ref qname="BufferedLcd"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="forceRefresh" ref="0x7f078244b390" loc="17:../tinyos_ws18/tos/lib_ecs/lcd/BufferedLcd.nc">
        <interfacedef-ref qname="BufferedLcd"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="goTo" ref="0x7f078244cc60" loc="16:../tinyos_ws18/tos/lib_ecs/lcd/BufferedLcd.nc">
        <interfacedef-ref qname="BufferedLcd"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="line" ref="0x7f078244c6a0" loc="16:../tinyos_ws18/tos/lib_ecs/lcd/BufferedLcd.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </variable>
          <variable name="col" ref="0x7f078244c9d0" loc="16:../tinyos_ws18/tos/lib_ecs/lcd/BufferedLcd.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7f078244e5b0" loc="14:../tinyos_ws18/tos/lib_ecs/lcd/BufferedLcd.nc">
        <interfacedef-ref qname="BufferedLcd"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="string" ref="0x7f078244e330" loc="14:../tinyos_ws18/tos/lib_ecs/lcd/BufferedLcd.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="autoRefresh" ref="0x7f078244f4f0" loc="12:../tinyos_ws18/tos/lib_ecs/lcd/BufferedLcd.nc">
        <documentation loc="9:../tinyos_ws18/tos/lib_ecs/lcd/BufferedLcd.nc">
          <short>&#10; </short>
          <long>&#10; @param period&#9;refresh period in ms, set to 0 to disable auto refresh&#10;</long>
        </documentation>
        <interfacedef-ref qname="BufferedLcd"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f0782f55170"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="period" ref="0x7f078244f270" loc="12:../tinyos_ws18/tos/lib_ecs/lcd/BufferedLcd.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f0782f55170"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write_P" ref="0x7f078244c020" loc="15:../tinyos_ws18/tos/lib_ecs/lcd/BufferedLcd.nc">
        <interfacedef-ref qname="BufferedLcd"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-qualified const="">
                <type-int cname="char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="string" ref="0x7f078244ec90" loc="15:../tinyos_ws18/tos/lib_ecs/lcd/BufferedLcd.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-qualified const="">
                <type-int cname="char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="FMClick" loc="19:FMClick/FMClick.nc">
      <function command="" provided="0" name="seek" ref="0x7f078243d4f0" loc="22:FMClick/FMClick.nc">
        <interfacedef-ref qname="FMClick"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f07826323a0"/></typename>
          </type-int>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><enum-ref ref="0x7f078244a990"/>
              <typename><typedef-ref name="seekmode_t" ref="0x7f078243f420"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x7f078243d270" loc="22:FMClick/FMClick.nc">
            <type-tag size="I:1" alignment="I:1"><enum-ref ref="0x7f078244a990"/>
              <typename><typedef-ref name="seekmode_t" ref="0x7f078243f420"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="initDone" ref="0x7f078243a940" loc="30:FMClick/FMClick.nc">
        <interfacedef-ref qname="FMClick"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f07826323a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="res" ref="0x7f078243a6c0" loc="30:FMClick/FMClick.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f07826323a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setVolume" ref="0x7f078243b580" loc="26:FMClick/FMClick.nc">
        <interfacedef-ref qname="FMClick"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f07826323a0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable ref="0x7f078243b300" loc="26:FMClick/FMClick.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="rdsReceived" ref="0x7f0782437a20" loc="36:FMClick/FMClick.nc">
        <interfacedef-ref qname="FMClick"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><enum-ref ref="0x7f078243f6b0"/>
              <typename><typedef-ref name="RDSType" ref="0x7f078243e110"/></typename>
            </type-tag>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="type" ref="0x7f0782437470" loc="36:FMClick/FMClick.nc">
            <type-tag size="I:1" alignment="I:1"><enum-ref ref="0x7f078243f6b0"/>
              <typename><typedef-ref name="RDSType" ref="0x7f078243e110"/></typename>
            </type-tag>
          </variable>
          <variable name="buf" ref="0x7f0782437790" loc="36:FMClick/FMClick.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="receiveRDS" ref="0x7f078243a020" loc="28:FMClick/FMClick.nc">
        <interfacedef-ref qname="FMClick"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f07826323a0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f078263c500"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enable" ref="0x7f078243bc80" loc="28:FMClick/FMClick.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f078263c500"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="tuneComplete" ref="0x7f0782439350" loc="32:FMClick/FMClick.nc">
        <interfacedef-ref qname="FMClick"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f0782f56610"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x7f07824390d0" loc="32:FMClick/FMClick.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f0782f56610"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getChannel" ref="0x7f078243dc30" loc="24:FMClick/FMClick.nc">
        <interfacedef-ref qname="FMClick"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f0782f56610"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="seekComplete" ref="0x7f0782439d10" loc="34:FMClick/FMClick.nc">
        <interfacedef-ref qname="FMClick"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f0782f56610"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x7f0782439a90" loc="34:FMClick/FMClick.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f0782f56610"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="tune" ref="0x7f078243eb40" loc="20:FMClick/FMClick.nc">
        <interfacedef-ref qname="FMClick"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f07826323a0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f0782f56610"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x7f078243e8c0" loc="20:FMClick/FMClick.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f0782f56610"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Glcd" loc="9:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
      <function command="" provided="0" name="drawTextPgm" ref="0x7f0782452980" loc="119:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
        <documentation loc="109:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
          <short>&#10; drawTextPgm&#10;&#10; </short>
          <long>&#10; drawTextPgm&#10;&#10; @param text stored in program memory&#10; @param x-coordinate of lower left edge&#10; @param y-coordinate of lower left edge&#10; &#10; @return SUCCESS&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Glcd"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-qualified const="">
                <type-int cname="char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="text" ref="0x7f0782452020" loc="119:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-qualified const="">
                <type-int cname="char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
          </variable>
          <variable name="x" ref="0x7f0782452380" loc="119:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </variable>
          <variable name="y" ref="0x7f07824526e0" loc="119:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="drawRect" ref="0x7f0782457680" loc="70:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
        <documentation loc="59:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
          <short>&#10; Draw rectangle&#10;&#10; </short>
          <long>&#10; Draw rectangle&#10;&#10; @param upper left x&#10; @param upper left y&#10; @param lower right x&#10; @param lower right y&#10; &#10; @return SUCCESS&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Glcd"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f07826323a0"/></typename>
          </type-int>
          <function-parameters>
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="x1" ref="0x7f0782459920" loc="70:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </variable>
          <variable name="y1" ref="0x7f0782459c90" loc="70:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </variable>
          <variable name="x2" ref="0x7f0782457060" loc="71:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </variable>
          <variable name="y2" ref="0x7f07824573d0" loc="71:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="drawLine" ref="0x7f0782459140" loc="56:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
        <documentation loc="45:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
          <short>&#10; Draw line&#10;&#10; </short>
          <long>&#10; Draw line&#10;&#10; @param first point x&#10; @param first point y&#10; @param second point x&#10; @param second point y&#10; &#10; @return SUCCESS&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Glcd"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f07826323a0"/></typename>
          </type-int>
          <function-parameters>
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="x1" ref="0x7f078245a3c0" loc="56:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </variable>
          <variable name="y1" ref="0x7f078245a730" loc="56:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </variable>
          <variable name="x2" ref="0x7f078245aac0" loc="57:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </variable>
          <variable name="y2" ref="0x7f078245ae30" loc="57:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setPixel" ref="0x7f078245c020" loc="21:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
        <documentation loc="12:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
          <short>&#10; Set pixel&#10;&#10; </short>
          <long>&#10; Set pixel&#10;&#10; @param x-coordinate&#10; @param y-coordinate&#10; &#10; @return SUCCESS&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Glcd"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f07826323a0"/></typename>
          </type-int>
          <function-parameters>
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="x" ref="0x7f078245e970" loc="21:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </variable>
          <variable name="y" ref="0x7f078245ecd0" loc="21:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="invertPixel" ref="0x7f078245bbd0" loc="43:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
        <documentation loc="34:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
          <short>&#10; Invert pixel&#10;&#10; </short>
          <long>&#10; Invert pixel&#10;&#10; @param x-coordinate&#10; @param y-coordinate&#10; &#10; @return SUCCESS&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Glcd"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f07826323a0"/></typename>
          </type-int>
          <function-parameters>
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="x" ref="0x7f078245b5e0" loc="43:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </variable>
          <variable name="y" ref="0x7f078245b940" loc="43:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clearPixel" ref="0x7f078245cdc0" loc="32:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
        <documentation loc="23:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
          <short>&#10; Clear pixel&#10;&#10; </short>
          <long>&#10; Clear pixel&#10;&#10; @param x-coordinate&#10; @param y-coordinate&#10; &#10; @return SUCCESS&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Glcd"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f07826323a0"/></typename>
          </type-int>
          <function-parameters>
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="x" ref="0x7f078245c7d0" loc="32:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </variable>
          <variable name="y" ref="0x7f078245cb30" loc="32:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="drawEllipse" ref="0x7f0782456c30" loc="84:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
        <documentation loc="73:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
          <short>&#10; Draw ellipse&#10;&#10; </short>
          <long>&#10; Draw ellipse&#10;&#10; @param center x&#10; @param center y&#10; @param radius horizontal&#10; @param radius vertical&#10; &#10; @return SUCCESS&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Glcd"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f07826323a0"/></typename>
          </type-int>
          <function-parameters>
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="x" ref="0x7f0782457e70" loc="84:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </variable>
          <variable name="y" ref="0x7f0782456200" loc="84:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </variable>
          <variable name="radius_h" ref="0x7f07824565d0" loc="85:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </variable>
          <variable name="radius_v" ref="0x7f0782456980" loc="85:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="drawText" ref="0x7f07824547b0" loc="107:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
        <documentation loc="97:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
          <short>&#10; drawText&#10;&#10; </short>
          <long>&#10; drawText&#10;&#10; @param text&#10; @param x-coordinate of lower left edge&#10; @param y-coordinate of lower left edge&#10; &#10; @return SUCCESS&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Glcd"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-qualified const="">
                <type-int cname="char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="text" ref="0x7f0782455e10" loc="107:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-qualified const="">
                <type-int cname="char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
          </variable>
          <variable name="x" ref="0x7f07824541b0" loc="107:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </variable>
          <variable name="y" ref="0x7f0782454510" loc="107:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="fill" ref="0x7f07824556a0" loc="95:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
        <documentation loc="87:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
          <short>&#10; Fill Display with pattern&#10;&#10; </short>
          <long>&#10; Fill Display with pattern&#10;&#10; @param pattern&#10; &#10; @return SUCCESS&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Glcd"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f07826323a0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="pattern" ref="0x7f0782455420" loc="95:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="IpControl" loc="8:../tinyos_ws18/tos/lib_ecs/ip/IpControl.nc">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/ip/IpControl.nc">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;12.12.2011&#10;&#10; based on an implementation of Harald Glanzer, 0727156 TU Wien&#10;</long>
      </documentation>
      <function command="" provided="0" name="setGateway" ref="0x7f078230e840" loc="10:../tinyos_ws18/tos/lib_ecs/ip/IpControl.nc">
        <interfacedef-ref qname="IpControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:4" alignment="I:1"><union-ref ref="0x7f0782331880"/>
                <typename><typedef-ref name="in_addr_t" ref="0x7f0782331ca0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="gateway" ref="0x7f078230e5c0" loc="10:../tinyos_ws18/tos/lib_ecs/ip/IpControl.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:4" alignment="I:1"><union-ref ref="0x7f0782331880"/>
                <typename><typedef-ref name="in_addr_t" ref="0x7f0782331ca0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getGateway" ref="0x7f078230c190" loc="14:../tinyos_ws18/tos/lib_ecs/ip/IpControl.nc">
        <interfacedef-ref qname="IpControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:4" alignment="I:1"><union-ref ref="0x7f0782331880"/>
              <typename><typedef-ref name="in_addr_t" ref="0x7f0782331ca0"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setNetmask" ref="0x7f078230d2a0" loc="11:../tinyos_ws18/tos/lib_ecs/ip/IpControl.nc">
        <interfacedef-ref qname="IpControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:4" alignment="I:1"><union-ref ref="0x7f0782331880"/>
                <typename><typedef-ref name="in_addr_t" ref="0x7f0782331ca0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="netmask" ref="0x7f078230d020" loc="11:../tinyos_ws18/tos/lib_ecs/ip/IpControl.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:4" alignment="I:1"><union-ref ref="0x7f0782331880"/>
                <typename><typedef-ref name="in_addr_t" ref="0x7f0782331ca0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getIp" ref="0x7f078230d9f0" loc="13:../tinyos_ws18/tos/lib_ecs/ip/IpControl.nc">
        <interfacedef-ref qname="IpControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:4" alignment="I:1"><union-ref ref="0x7f0782331880"/>
              <typename><typedef-ref name="in_addr_t" ref="0x7f0782331ca0"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getNetmask" ref="0x7f078230c910" loc="15:../tinyos_ws18/tos/lib_ecs/ip/IpControl.nc">
        <interfacedef-ref qname="IpControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:4" alignment="I:1"><union-ref ref="0x7f0782331880"/>
              <typename><typedef-ref name="in_addr_t" ref="0x7f0782331ca0"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setIp" ref="0x7f078231ae50" loc="9:../tinyos_ws18/tos/lib_ecs/ip/IpControl.nc">
        <interfacedef-ref qname="IpControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:4" alignment="I:1"><union-ref ref="0x7f0782331880"/>
                <typename><typedef-ref name="in_addr_t" ref="0x7f0782331ca0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="ip" ref="0x7f078231abd0" loc="9:../tinyos_ws18/tos/lib_ecs/ip/IpControl.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:4" alignment="I:1"><union-ref ref="0x7f0782331880"/>
                <typename><typedef-ref name="in_addr_t" ref="0x7f0782331ca0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UdpSend" loc="10:../tinyos_ws18/tos/lib_ecs/udp/UdpSend.nc">
      <function command="" provided="0" name="send" ref="0x7f0782315df0" loc="11:../tinyos_ws18/tos/lib_ecs/udp/UdpSend.nc">
        <interfacedef-ref qname="UdpSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f07826323a0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:4" alignment="I:1"><union-ref ref="0x7f0782331880"/>
                <typename><typedef-ref name="in_addr_t" ref="0x7f0782331ca0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f0782f56610"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f0782f56610"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dstIp" ref="0x7f0782315110" loc="11:../tinyos_ws18/tos/lib_ecs/udp/UdpSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:4" alignment="I:1"><union-ref ref="0x7f0782331880"/>
                <typename><typedef-ref name="in_addr_t" ref="0x7f0782331ca0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="dstPort" ref="0x7f0782315480" loc="11:../tinyos_ws18/tos/lib_ecs/udp/UdpSend.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f0782f56610"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x7f0782315800" loc="11:../tinyos_ws18/tos/lib_ecs/udp/UdpSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f0782315b40" loc="11:../tinyos_ws18/tos/lib_ecs/udp/UdpSend.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f0782f56610"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7f0782313770" loc="12:../tinyos_ws18/tos/lib_ecs/udp/UdpSend.nc">
        <interfacedef-ref qname="UdpSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f07826323a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7f07823134f0" loc="12:../tinyos_ws18/tos/lib_ecs/udp/UdpSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f07826323a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SplitControl" loc="87:../tinyos_ws18/tos/interfaces/SplitControl.nc">
      <documentation loc="72:../tinyos_ws18/tos/interfaces/SplitControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  For each &#60;code>start()&#60;/code> or&#10; &#60;code>stop()&#60;/code> command, if the command returns SUCCESS, then a&#10; corresponding  &#60;code>startDone()&#60;/code> or &#60;code>stopDone()&#60;/code> event&#10; must be signalled.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function event="" provided="0" name="startDone" ref="0x7f0782308460" loc="113:../tinyos_ws18/tos/interfaces/SplitControl.nc">
        <documentation loc="106:../tinyos_ws18/tos/interfaces/SplitControl.nc">
          <short> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.</short>
          <long> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned on, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f07826323a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7f07823081e0" loc="113:../tinyos_ws18/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f07826323a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="stopDone" ref="0x7f0782307ab0" loc="138:../tinyos_ws18/tos/interfaces/SplitControl.nc">
        <documentation loc="132:../tinyos_ws18/tos/interfaces/SplitControl.nc">
          <short>&#10; Notify caller that the component has been stopped.</short>
          <long>&#10; Notify caller that the component has been stopped.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned off, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f07826323a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7f0782307830" loc="138:../tinyos_ws18/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f07826323a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7f07823097b0" loc="104:../tinyos_ws18/tos/interfaces/SplitControl.nc">
        <documentation loc="89:../tinyos_ws18/tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         starting or the device was off and the device is now ready to turn &#10;         on.  After receiving this return value, you should expect a &#10;         &#60;code>startDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering down&#10;               i.e. a &#60;code>stop()&#60;/code> command has been called,&#10;               and a &#60;code>stopDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already on &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f07826323a0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f0782308cb0" loc="130:../tinyos_ws18/tos/interfaces/SplitControl.nc">
        <documentation loc="115:../tinyos_ws18/tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         stopping or the device was on and the device is now ready to turn &#10;         off.  After receiving this return value, you should expect a &#10;         &#60;code>stopDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering up&#10;               i.e. a &#60;code>start()&#60;/code> command has been called,&#10;               and a &#60;code>startDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already off &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f07826323a0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UdpReceive" loc="10:../tinyos_ws18/tos/lib_ecs/udp/UdpReceive.nc">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/ip/ip.h">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;12.12.2011&#10;&#10; based on an implementation of Harald Glanzer, 0727156 TU Wien&#10;</long>
      </documentation>
      <function event="" provided="0" name="received" ref="0x7f0782311990" loc="11:../tinyos_ws18/tos/lib_ecs/udp/UdpReceive.nc">
        <interfacedef-ref qname="UdpReceive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:4" alignment="I:1"><union-ref ref="0x7f0782331880"/>
                <typename><typedef-ref name="in_addr_t" ref="0x7f0782331ca0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f0782f56610"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f0782f56610"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="srcIp" ref="0x7f078231bc50" loc="11:../tinyos_ws18/tos/lib_ecs/udp/UdpReceive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:4" alignment="I:1"><union-ref ref="0x7f0782331880"/>
                <typename><typedef-ref name="in_addr_t" ref="0x7f0782331ca0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="srcPort" ref="0x7f0782311020" loc="11:../tinyos_ws18/tos/lib_ecs/udp/UdpReceive.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f0782f56610"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x7f07823113a0" loc="11:../tinyos_ws18/tos/lib_ecs/udp/UdpReceive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f07823116e0" loc="11:../tinyos_ws18/tos/lib_ecs/udp/UdpReceive.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f0782f56610"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketSender" loc="8:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketSender.nc">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketSender.nc">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;12.12.2011&#10;&#10; based on an implementation of Harald Glanzer, 0727156 TU Wien&#10;</long>
      </documentation>
      <parameters>
        <typedef name="item_type_t" ref="0x7f078225dc30" loc="8:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketSender.nc">
          <interfacedef-ref qname="PacketSender"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="item_type_t" scoped="" ref="0x7f078225dc30"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="send" ref="0x7f07822587e0" loc="9:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketSender.nc">
        <interfacedef-ref qname="PacketSender"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f07826323a0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-var size="U:" alignment="U:"><typedef-ref name="item_type_t" scoped="" ref="0x7f078225dc30"/></type-var>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="item" ref="0x7f0782258560" loc="9:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketSender.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-var size="U:" alignment="U:"><typedef-ref name="item_type_t" scoped="" ref="0x7f078225dc30"/></type-var>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7f07822572a0" loc="10:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketSender.nc">
        <interfacedef-ref qname="PacketSender"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f07826323a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7f0782257020" loc="10:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketSender.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f07826323a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="IpPacket" loc="8:../tinyos_ws18/tos/lib_ecs/ip/IpPacket.nc">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/ip/IpPacket.nc">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;12.12.2011&#10;&#10; based on an implementation of Harald Glanzer, 0727156 TU Wien&#10;</long>
      </documentation>
      <function command="" provided="0" name="getPacket" ref="0x7f0782254cc0" loc="9:../tinyos_ws18/tos/lib_ecs/ip/IpPacket.nc">
        <interfacedef-ref qname="IpPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:540" alignment="I:1"><struct-ref ref="0x7f078232d810"/>
              <typename><typedef-ref name="ip_packet_t" ref="0x7f078232dc30"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="IpReceive" loc="8:../tinyos_ws18/tos/lib_ecs/ip/IpReceive.nc">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/ip/IpReceive.nc">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;12.12.2011&#10;&#10; based on an implementation of Harald Glanzer, 0727156 TU Wien&#10;</long>
      </documentation>
      <function event="" provided="0" name="received" ref="0x7f0782253480" loc="9:../tinyos_ws18/tos/lib_ecs/ip/IpReceive.nc">
        <interfacedef-ref qname="IpReceive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:4" alignment="I:1"><union-ref ref="0x7f0782331880"/>
                <typename><typedef-ref name="in_addr_t" ref="0x7f0782331ca0"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f0782f56610"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="srcIp" ref="0x7f0782256b00" loc="9:../tinyos_ws18/tos/lib_ecs/ip/IpReceive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:4" alignment="I:1"><union-ref ref="0x7f0782331880"/>
                <typename><typedef-ref name="in_addr_t" ref="0x7f0782331ca0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="data" ref="0x7f0782256e80" loc="9:../tinyos_ws18/tos/lib_ecs/ip/IpReceive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f07822531e0" loc="9:../tinyos_ws18/tos/lib_ecs/ip/IpReceive.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f0782f56610"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LlcReceive" loc="8:../tinyos_ws18/tos/lib_ecs/llc/LlcReceive.nc">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/llc/LlcReceive.nc">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;12.12.2011&#10;&#10; based on an implementation of Harald Glanzer, 0727156 TU Wien&#10;</long>
      </documentation>
      <function event="" provided="0" name="received" ref="0x7f078223f050" loc="9:../tinyos_ws18/tos/lib_ecs/llc/LlcReceive.nc">
        <interfacedef-ref qname="LlcReceive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:6" alignment="I:1"><union-ref ref="0x7f078224d080"/>
                <typename><typedef-ref name="mac_addr_t" ref="0x7f078224d3f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="srcMac" ref="0x7f0782245a20" loc="9:../tinyos_ws18/tos/lib_ecs/llc/LlcReceive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:6" alignment="I:1"><union-ref ref="0x7f078224d080"/>
                <typename><typedef-ref name="mac_addr_t" ref="0x7f078224d3f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="data" ref="0x7f0782245da0" loc="9:../tinyos_ws18/tos/lib_ecs/llc/LlcReceive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LlcSend" loc="10:../tinyos_ws18/tos/lib_ecs/llc/LlcSend.nc">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/llc/mac.h">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;12.12.2011&#10;&#10; based on an implementation of Harald Glanzer, 0727156 TU Wien&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7f0782243c60" loc="11:../tinyos_ws18/tos/lib_ecs/llc/LlcSend.nc">
        <interfacedef-ref qname="LlcSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f07826323a0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:6" alignment="I:1"><union-ref ref="0x7f078224d080"/>
                <typename><typedef-ref name="mac_addr_t" ref="0x7f078224d3f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f0782f56610"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dstMac" ref="0x7f0782243300" loc="11:../tinyos_ws18/tos/lib_ecs/llc/LlcSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:6" alignment="I:1"><union-ref ref="0x7f078224d080"/>
                <typename><typedef-ref name="mac_addr_t" ref="0x7f078224d3f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="data" ref="0x7f0782243680" loc="11:../tinyos_ws18/tos/lib_ecs/llc/LlcSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f07822439c0" loc="11:../tinyos_ws18/tos/lib_ecs/llc/LlcSend.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f0782f56610"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7f07822415c0" loc="12:../tinyos_ws18/tos/lib_ecs/llc/LlcSend.nc">
        <interfacedef-ref qname="LlcSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f07826323a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7f0782241340" loc="12:../tinyos_ws18/tos/lib_ecs/llc/LlcSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f07826323a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Arp" loc="10:../tinyos_ws18/tos/lib_ecs/arp/Arp.nc">
      <function command="" provided="0" name="resolve" ref="0x7f0782237020" loc="11:../tinyos_ws18/tos/lib_ecs/arp/Arp.nc">
        <interfacedef-ref qname="Arp"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f07826323a0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:4" alignment="I:1"><union-ref ref="0x7f0782331880"/>
                <typename><typedef-ref name="in_addr_t" ref="0x7f0782331ca0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="ip" ref="0x7f0782238c50" loc="11:../tinyos_ws18/tos/lib_ecs/arp/Arp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:4" alignment="I:1"><union-ref ref="0x7f0782331880"/>
                <typename><typedef-ref name="in_addr_t" ref="0x7f0782331ca0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="resolved" ref="0x7f07822379c0" loc="12:../tinyos_ws18/tos/lib_ecs/arp/Arp.nc">
        <interfacedef-ref qname="Arp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:6" alignment="I:1"><union-ref ref="0x7f078224d080"/>
                <typename><typedef-ref name="mac_addr_t" ref="0x7f078224d3f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="macPtr" ref="0x7f0782237740" loc="12:../tinyos_ws18/tos/lib_ecs/arp/Arp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:6" alignment="I:1"><union-ref ref="0x7f078224d080"/>
                <typename><typedef-ref name="mac_addr_t" ref="0x7f078224d3f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="MacControl" loc="10:../tinyos_ws18/tos/lib_ecs/llc/MacControl.nc">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/llc/mac.h">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;12.12.2011&#10;&#10; based on an implementation of Harald Glanzer, 0727156 TU Wien&#10;</long>
      </documentation>
      <function command="" provided="0" name="getMac" ref="0x7f07821ed2b0" loc="11:../tinyos_ws18/tos/lib_ecs/llc/MacControl.nc">
        <interfacedef-ref qname="MacControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:6" alignment="I:1"><union-ref ref="0x7f078224d080"/>
              <typename><typedef-ref name="mac_addr_t" ref="0x7f078224d3f0"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Mac" loc="10:../tinyos_ws18/tos/lib_ecs/llc/Mac.nc">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/llc/mac.h">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;12.12.2011&#10;&#10; based on an implementation of Harald Glanzer, 0727156 TU Wien&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7f07821f4e60" loc="11:../tinyos_ws18/tos/lib_ecs/llc/Mac.nc">
        <interfacedef-ref qname="Mac"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f07826323a0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:554" alignment="I:1"><struct-ref ref="0x7f078224caf0"/>
                <typename><typedef-ref name="mac_packet_t" ref="0x7f078224b020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f0782f56610"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f07821f4890" loc="11:../tinyos_ws18/tos/lib_ecs/llc/Mac.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:554" alignment="I:1"><struct-ref ref="0x7f078224caf0"/>
                <typename><typedef-ref name="mac_packet_t" ref="0x7f078224b020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f07821f4bd0" loc="11:../tinyos_ws18/tos/lib_ecs/llc/Mac.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f0782f56610"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="received" ref="0x7f07821f02a0" loc="13:../tinyos_ws18/tos/lib_ecs/llc/Mac.nc">
        <interfacedef-ref qname="Mac"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:554" alignment="I:1"><struct-ref ref="0x7f078224caf0"/>
                <typename><typedef-ref name="mac_packet_t" ref="0x7f078224b020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f07821f0020" loc="13:../tinyos_ws18/tos/lib_ecs/llc/Mac.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:554" alignment="I:1"><struct-ref ref="0x7f078224caf0"/>
                <typename><typedef-ref name="mac_packet_t" ref="0x7f078224b020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7f07821f17d0" loc="12:../tinyos_ws18/tos/lib_ecs/llc/Mac.nc">
        <interfacedef-ref qname="Mac"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f07826323a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7f07821f1550" loc="12:../tinyos_ws18/tos/lib_ecs/llc/Mac.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f07826323a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getMac" ref="0x7f07821f0a00" loc="14:../tinyos_ws18/tos/lib_ecs/llc/Mac.nc">
        <interfacedef-ref qname="Mac"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:6" alignment="I:1"><union-ref ref="0x7f078224d080"/>
              <typename><typedef-ref name="mac_addr_t" ref="0x7f078224d3f0"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LlcQueue" loc="8:../tinyos_ws18/tos/lib_ecs/llc/LlcQueue.nc">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/llc/LlcQueue.nc">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;12.12.2011&#10;&#10; based on an implementation of Harald Glanzer, 0727156 TU Wien&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7f07821d0020" loc="9:../tinyos_ws18/tos/lib_ecs/llc/LlcQueue.nc">
        <interfacedef-ref qname="LlcQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f07826323a0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:6" alignment="I:1"><union-ref ref="0x7f078224d080"/>
                <typename><typedef-ref name="mac_addr_t" ref="0x7f078224d3f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f0782f56610"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f0782f56610"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dstMac" ref="0x7f07821d1240" loc="9:../tinyos_ws18/tos/lib_ecs/llc/LlcQueue.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:6" alignment="I:1"><union-ref ref="0x7f078224d080"/>
                <typename><typedef-ref name="mac_addr_t" ref="0x7f078224d3f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="etherType" ref="0x7f07821d15c0" loc="9:../tinyos_ws18/tos/lib_ecs/llc/LlcQueue.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f0782f56610"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x7f07821d1940" loc="9:../tinyos_ws18/tos/lib_ecs/llc/LlcQueue.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f07821d1c80" loc="9:../tinyos_ws18/tos/lib_ecs/llc/LlcQueue.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f0782f56610"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7f07821d0960" loc="10:../tinyos_ws18/tos/lib_ecs/llc/LlcQueue.nc">
        <interfacedef-ref qname="LlcQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f07826323a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7f07821d06e0" loc="10:../tinyos_ws18/tos/lib_ecs/llc/LlcQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f07826323a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketQueue" loc="8:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueue.nc">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueue.nc">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;12.12.2011&#10;&#10; based on an implementation of Harald Glanzer, 0727156 TU Wien&#10;</long>
      </documentation>
      <parameters>
        <typedef name="item_type" ref="0x7f07821c4e70" loc="8:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueue.nc">
          <interfacedef-ref qname="PacketQueue"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="item_type" scoped="" ref="0x7f07821c4e70"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="send" ref="0x7f07821bf390" loc="10:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueue.nc">
        <interfacedef-ref qname="PacketQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="index" ref="0x7f07821bf110" loc="10:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getBuffer" ref="0x7f07821c1a30" loc="9:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueue.nc">
        <interfacedef-ref qname="PacketQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-var size="U:" alignment="U:"><typedef-ref name="item_type" scoped="" ref="0x7f07821c4e70"/></type-var>
          </type-pointer>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="index" ref="0x7f07821c1770" loc="9:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7f07821be050" loc="11:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueue.nc">
        <interfacedef-ref qname="PacketQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f07826323a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="index" ref="0x7f07821bfa50" loc="11:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7f07821bfda0" loc="11:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f07826323a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalTime" loc="53:../tinyos_ws18/tos/lib/timer/LocalTime.nc">
      <documentation loc="36:../tinyos_ws18/tos/lib/timer/LocalTime.nc">
        <short>&#10; A LocalTime interface counts time in some units.</short>
        <long>&#10; A LocalTime interface counts time in some units. If you need to detect&#10; time overflow, you should use a component offering the Counter&#10; interface.&#10;&#10; &#60;p>The LocalTime interface is parameterised by its &#34;precision&#34;&#10; (milliseconds, microseconds, etc), identified by a type. This prevents,&#10; e.g., unintentionally mixing components expecting milliseconds with&#10; those expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f0782118100" loc="53:../tinyos_ws18/tos/lib/timer/LocalTime.nc">
          <interfacedef-ref qname="LocalTime"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f0782118100"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x7f0782118a20" loc="61:../tinyos_ws18/tos/lib/timer/LocalTime.nc">
        <documentation loc="55:../tinyos_ws18/tos/lib/timer/LocalTime.nc">
          <short> &#10; Return current time.</short>
          <long> &#10; Return current time. Time starts counting at boot - some time sources&#10; may stop counting while the processor is in low-power mode.&#10;&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalTime"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f0782f55170"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Counter" loc="57:../tinyos_ws18/tos/lib/timer/Counter.nc">
      <documentation loc="36:../tinyos_ws18/tos/lib/timer/Counter.nc">
        <short>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.</short>
        <long>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.&#10;&#10; &#60;p>A Counter is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>A Counter's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as a Counter parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10; @param size_type An integer type representing time values for this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f0782106020" loc="57:../tinyos_ws18/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f0782106020"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7f0782106260" loc="57:../tinyos_ws18/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f0782106260"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x7f0782106b80" loc="64:../tinyos_ws18/tos/lib/timer/Counter.nc">
        <documentation loc="59:../tinyos_ws18/tos/lib/timer/Counter.nc">
          <short> &#10; Return counter value.</short>
          <long> &#10; Return counter value. Counters start at boot - some time sources may&#10; stop counting while the processor is in low-power mode.&#10; @return Current counter value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f0782106260"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x7f0782105c80" loc="76:../tinyos_ws18/tos/lib/timer/Counter.nc">
        <documentation loc="73:../tinyos_ws18/tos/lib/timer/Counter.nc">
          <short>&#10; Cancel a pending overflow interrupt.</short>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x7f0782105420" loc="71:../tinyos_ws18/tos/lib/timer/Counter.nc">
        <documentation loc="66:../tinyos_ws18/tos/lib/timer/Counter.nc">
          <short> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.</short>
          <long> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.  FALSE otherwise.&#10; @return Counter pending overflow status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f078263c500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x7f0782104420" loc="82:../tinyos_ws18/tos/lib/timer/Counter.nc">
        <documentation loc="78:../tinyos_ws18/tos/lib/timer/Counter.nc">
          <short>&#10; Signals that the current time has overflowed.</short>
          <long>&#10; Signals that the current time has overflowed.  That is, the current&#10; time has wrapped around from its maximum value to zero.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Alarm" loc="56:../tinyos_ws18/tos/lib/timer/Alarm.nc">
      <documentation loc="36:../tinyos_ws18/tos/lib/timer/Alarm.nc">
        <short>&#10; An Alarm is a low-level interface intended for precise timing.</short>
        <long>&#10; An Alarm is a low-level interface intended for precise timing.&#10;&#10; &#60;p>An Alarm is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>An Alarm's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as an Alarm parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10; @param size_type An integer type representing time values for this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f0782114690" loc="56:../tinyos_ws18/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f0782114690"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7f07821148d0" loc="56:../tinyos_ws18/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f07821148d0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x7f078210d4a0" loc="109:../tinyos_ws18/tos/lib/timer/Alarm.nc">
        <documentation loc="105:../tinyos_ws18/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f07821148d0"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7f078210f4e0" loc="78:../tinyos_ws18/tos/lib/timer/Alarm.nc">
        <documentation loc="75:../tinyos_ws18/tos/lib/timer/Alarm.nc">
          <short>&#10; Signaled when the alarm expires.</short>
          <long>&#10; Signaled when the alarm expires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startAt" ref="0x7f078210eae0" loc="103:../tinyos_ws18/tos/lib/timer/Alarm.nc">
        <documentation loc="90:../tinyos_ws18/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to time t0+dt.</short>
          <long>&#10; Set a single-short alarm to time t0+dt. Replaces any current alarm&#10; time. The &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10; Alarms set in the past will fire &#34;soon&#34;.&#10; &#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for alarm.&#10; @param dt Alarm time as offset from t0.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f07821148d0"/></type-var>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f07821148d0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7f078210e510" loc="103:../tinyos_ws18/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f07821148d0"/></type-var>
          </variable>
          <variable name="dt" ref="0x7f078210e850" loc="103:../tinyos_ws18/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f07821148d0"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x7f078210fcc0" loc="88:../tinyos_ws18/tos/lib/timer/Alarm.nc">
        <documentation loc="81:../tinyos_ws18/tos/lib/timer/Alarm.nc">
          <short>&#10; Check if alarm is running.</short>
          <long>&#10; Check if alarm is running. Note that a FALSE return does not indicate&#10; that the &#60;code>fired&#60;/code> event will not be signaled (it may have&#10; already started executing, but not reached your code yet).&#10;&#10; @return TRUE if the alarm is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f078263c500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAlarm" ref="0x7f078210dc90" loc="116:../tinyos_ws18/tos/lib/timer/Alarm.nc">
        <documentation loc="111:../tinyos_ws18/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.</short>
          <long>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.&#10; @return Alarm time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f07821148d0"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7f07821114d0" loc="66:../tinyos_ws18/tos/lib/timer/Alarm.nc">
        <documentation loc="59:../tinyos_ws18/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to some time units in the future.</short>
          <long>&#10; Set a single-short alarm to some time units in the future. Replaces&#10; any current alarm time. Equivalent to start(getNow(), dt). The&#10; &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10;&#10; @param dt Time until the alarm fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f07821148d0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7f0782111250" loc="66:../tinyos_ws18/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f07821148d0"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f0782111d00" loc="73:../tinyos_ws18/tos/lib/timer/Alarm.nc">
        <documentation loc="68:../tinyos_ws18/tos/lib/timer/Alarm.nc">
          <short>&#10; Cancel an alarm.</short>
          <long>&#10; Cancel an alarm. Note that the &#60;code>fired&#60;/code> event may have&#10; already been signaled (even if your code has not yet started&#10; executing).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerCtrl8" loc="76:../tinyos_ws18/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
      <documentation loc="67:../tinyos_ws18/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <short>&#10; HPL Interface to Atmega1281 8-bit timer control registers&#10;&#10; </short>
        <long>&#10; HPL Interface to Atmega1281 8-bit timer control registers&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getInterruptFlag" ref="0x7f07820d6b20" loc="89:../tinyos_ws18/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="88:../tinyos_ws18/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
          <short>Interrupt flag register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptMask" ref="0x7f07820d78e0" loc="85:../tinyos_ws18/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="84:../tinyos_ws18/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
          <short>Interrupt mask register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getControlA" ref="0x7f07820da5a0" loc="79:../tinyos_ws18/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="78:../tinyos_ws18/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
          <short>Timer control register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptMask" ref="0x7f07820d6350" loc="86:../tinyos_ws18/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0x7f07820d60d0" loc="86:../tinyos_ws18/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlB" ref="0x7f07820d7110" loc="82:../tinyos_ws18/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7f07820d8e30" loc="82:../tinyos_ws18/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptFlag" ref="0x7f07820d55c0" loc="90:../tinyos_ws18/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0x7f07820d5340" loc="90:../tinyos_ws18/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getControlB" ref="0x7f07820dad40" loc="80:../tinyos_ws18/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlA" ref="0x7f07820d8710" loc="81:../tinyos_ws18/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7f07820d8490" loc="81:../tinyos_ws18/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm1280TimerSync" loc="54:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280TimerSync.nc">
      <documentation loc="45:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280TimerSync.nc">
        <short>&#10; HPL Interface to Atmega1281 8-bit asynchronous timer control registers&#10;&#10; </short>
        <long>&#10; HPL Interface to Atmega1281 8-bit asynchronous timer control registers&#10;&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;&#10; Changedto Sync for Atm1280&#10; @author Markus Hartmann&#10;</long>
      </documentation>
      <function command="" provided="0" name="setTimer2Synchronous" ref="0x7f07820c78e0" loc="71:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280TimerSync.nc">
        <documentation loc="68:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280TimerSync.nc">
          <short>&#10; Turn on timer 2 synchronous mode&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm1280TimerSync"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="compareBBusy" ref="0x7f07820c59c0" loc="95:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280TimerSync.nc">
        <documentation loc="91:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280TimerSync.nc">
          <short>&#10; Check if compare register OCR2B is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if compare register OCR2B is busy (should not be updated if true)&#10; @return TRUE if OCR2B is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm1280TimerSync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="controlBBusy" ref="0x7f07820c6910" loc="83:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280TimerSync.nc">
        <documentation loc="79:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280TimerSync.nc">
          <short>&#10; Check if control register TCCR2B is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if control register TCCR2B is busy (should not be updated if true)&#10; @return TRUE if TCCR2B is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm1280TimerSync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="controlABusy" ref="0x7f07820c60e0" loc="77:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280TimerSync.nc">
        <documentation loc="73:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280TimerSync.nc">
          <short>&#10; Check if control register TCCR2A is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if control register TCCR2A is busy (should not be updated if true)&#10; @return TRUE if TCCR2A is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm1280TimerSync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="countBusy" ref="0x7f07820c3270" loc="101:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280TimerSync.nc">
        <documentation loc="97:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280TimerSync.nc">
          <short>&#10; Check if current timer value (TCNT2) is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if current timer value (TCNT2) is busy (should not be updated if true)&#10; @return TRUE if TCNT2 is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm1280TimerSync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="compareABusy" ref="0x7f07820c5190" loc="89:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280TimerSync.nc">
        <documentation loc="85:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280TimerSync.nc">
          <short>&#10; Check if compare register OCR2A is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if compare register OCR2A is busy (should not be updated if true)&#10; @return TRUE if OCR2A is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm1280TimerSync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAssr" ref="0x7f07820c8620" loc="60:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280TimerSync.nc">
        <documentation loc="56:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280TimerSync.nc">
          <short>&#10; Read timer2 asynchronous status register (ASSR)&#10; </short>
          <long>&#10; Read timer2 asynchronous status register (ASSR)&#10; @return Current value of ASSR&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm1280TimerSync"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f07825674d0"/>
            <typename><typedef-ref name="Atm128_ASSR_t" ref="0x7f07825678f0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAssr" ref="0x7f07820c70b0" loc="66:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280TimerSync.nc">
        <documentation loc="62:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280TimerSync.nc">
          <short>&#10; Set timer2 asynchronous status register (ASSR)&#10; </short>
          <long>&#10; Set timer2 asynchronous status register (ASSR)&#10; @param x New value for ASSR&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm1280TimerSync"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f07825674d0"/>
              <typename><typedef-ref name="Atm128_ASSR_t" ref="0x7f07825678f0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="x" ref="0x7f07820c8de0" loc="66:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280TimerSync.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f07825674d0"/>
              <typename><typedef-ref name="Atm128_ASSR_t" ref="0x7f07825678f0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Compare" loc="41:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Compare.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <short>&#10; HPL Interface to Atmega128 compare registers.</short>
        <long>&#10; HPL Interface to Atmega128 compare registers.&#10; @param size_type Integer type of compare register&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="size_type" ref="0x7f07820d20d0" loc="41:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <interfacedef-ref qname="HplAtm128Compare"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f07820d20d0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="test" ref="0x7f07820cf9f0" loc="74:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="70:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Did compare interrupt occur? &#10; </short>
          <long> &#10; Did compare interrupt occur? &#10; @return TRUE if compare triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f078263c500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7f07820d1bf0" loc="58:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="57:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Signalled on  interrupt.</short>
          <long> Signalled on  interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7f07820d2a10" loc="48:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="44:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Get the compare time to fire on.</short>
          <long> &#10; Get the compare time to fire on.&#10; @return  the compare time value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f07820d20d0"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x7f07820d0390" loc="62:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="61:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Clear the compare interrupt flag.</short>
          <long> Clear the compare interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x7f07820cd1f0" loc="80:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="76:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Is compare interrupt on?&#10; </short>
          <long> &#10; Is compare interrupt on?&#10; @return TRUE if compare enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f078263c500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f07820d1440" loc="54:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="50:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Set the compare time to fire on.</short>
          <long> &#10; Set the compare time to fire on.&#10; @param t     the compare time to set&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f07820d20d0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x7f07820d11c0" loc="54:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Compare.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f07820d20d0"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7f07820d0b00" loc="65:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="64:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Enable the compare interrupt.</short>
          <long> Enable the compare interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f07820cf270" loc="68:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="67:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Turn off comparee interrupts.</short>
          <long> Turn off comparee interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Timer" loc="55:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Timer.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <short>&#10; Basic interface to the hardware timers on an ATmega128.</short>
        <long>&#10; Basic interface to the hardware timers on an ATmega128.  &#10; &#60;p>&#10; This interface is designed to be independent of whether the underlying &#10; hardware is an 8-bit or 16-bit wide counter.  As such, timer_size is &#10; specified via a generics parameter.  Because this is exposing a common &#10; subset of functionality that all ATmega128 hardware timers share, all &#10; that is exposed is access to the overflow capability.  Compare and capture&#10; functionality are exposed on separate interfaces to allow easy &#10; configurability via wiring.&#10; &#60;p>&#10; This interface provides four major groups of functionality:&#60;ol>&#10;      &#60;li>Timer Value: get/set current time&#10;      &#60;li>Overflow Interrupt event&#10;      &#60;li>Control of Overflow Interrupt: start/stop/clear...&#10;      &#60;li>Timer Initialization: turn on/off clock source&#10; &#60;/ol>&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="timer_size" ref="0x7f07820ea7b0" loc="55:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <interfacedef-ref qname="HplAtm128Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x7f07820ea7b0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="off" ref="0x7f07820e1070" loc="98:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="97:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Turn off the clock.</short>
          <long> Turn off the clock. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="test" ref="0x7f07820e20e0" loc="87:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="83:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Did an overflow interrupt occur?&#10; </short>
          <long> &#10; Did an overflow interrupt occur?&#10; @return TRUE if overflow triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f078263c500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7f07820e6120" loc="61:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="57:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Get the current time.</short>
          <long> &#10; Get the current time.&#10; @return  the current time&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x7f07820ea7b0"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setScale" ref="0x7f07820e1a50" loc="104:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="100:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Turn on the clock.</short>
          <long> &#10; Turn on the clock.&#10; @param scale   Prescaler setting of clock -- see Atm128Timer.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="scale" ref="0x7f07820e17d0" loc="104:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Timer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getScale" ref="0x7f07820e0270" loc="110:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="106:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Get prescaler setting.</short>
          <long> &#10; Get prescaler setting.&#10; @return  Prescaler setting of clock -- see Atm128Timer.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x7f07820e5a40" loc="75:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="74:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Clear the overflow interrupt flag.</short>
          <long> Clear the overflow interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x7f07820e52b0" loc="70:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="69:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Signalled on timer overflow interrupt.</short>
          <long> Signalled on timer overflow interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x7f07820e28a0" loc="93:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="89:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Is overflow interrupt on? &#10; </short>
          <long> &#10; Is overflow interrupt on? &#10; @return TRUE if overflow enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f078263c500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f07820e6ad0" loc="67:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="63:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Set the current time.</short>
          <long> &#10; Set the current time.&#10; @param t     the time to set&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x7f07820ea7b0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x7f07820e6850" loc="67:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Timer.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x7f07820ea7b0"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7f07820e41f0" loc="78:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="77:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Enable the overflow interrupt.</short>
          <long> Enable the overflow interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f07820e4940" loc="81:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="80:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Turn off overflow interrupts.</short>
          <long> Turn off overflow interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="IcmpReceive" loc="8:../tinyos_ws18/tos/lib_ecs/icmp/IcmpReceive.nc">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/icmp/IcmpReceive.nc">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;12.12.2011&#10;&#10; based on an implementation of Harald Glanzer, 0727156 TU Wien&#10;</long>
      </documentation>
      <function event="" provided="0" name="received" ref="0x7f0781f48140" loc="9:../tinyos_ws18/tos/lib_ecs/icmp/IcmpReceive.nc">
        <interfacedef-ref qname="IcmpReceive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:4" alignment="I:1"><union-ref ref="0x7f0782331880"/>
                <typename><typedef-ref name="in_addr_t" ref="0x7f0782331ca0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f0782f56610"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="srcIp" ref="0x7f0781f49460" loc="9:../tinyos_ws18/tos/lib_ecs/icmp/IcmpReceive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:4" alignment="I:1"><union-ref ref="0x7f0782331880"/>
                <typename><typedef-ref name="in_addr_t" ref="0x7f0782331ca0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="code" ref="0x7f0781f497a0" loc="9:../tinyos_ws18/tos/lib_ecs/icmp/IcmpReceive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x7f0781f49b20" loc="9:../tinyos_ws18/tos/lib_ecs/icmp/IcmpReceive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f0781f49e60" loc="9:../tinyos_ws18/tos/lib_ecs/icmp/IcmpReceive.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f0782f56610"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="IcmpSend" loc="8:../tinyos_ws18/tos/lib_ecs/icmp/IcmpSend.nc">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/icmp/IcmpSend.nc">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;12.12.2011&#10;&#10; based on an implementation of Harald Glanzer, 0727156 TU Wien&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7f0781f4b620" loc="9:../tinyos_ws18/tos/lib_ecs/icmp/IcmpSend.nc">
        <interfacedef-ref qname="IcmpSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f07826323a0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:4" alignment="I:1"><union-ref ref="0x7f0782331880"/>
                <typename><typedef-ref name="in_addr_t" ref="0x7f0782331ca0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f0782f56610"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dstIp" ref="0x7f0781f4c490" loc="9:../tinyos_ws18/tos/lib_ecs/icmp/IcmpSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:4" alignment="I:1"><union-ref ref="0x7f0782331880"/>
                <typename><typedef-ref name="in_addr_t" ref="0x7f0782331ca0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="type" ref="0x7f0781f4c7d0" loc="9:../tinyos_ws18/tos/lib_ecs/icmp/IcmpSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </variable>
          <variable name="code" ref="0x7f0781f4cb10" loc="9:../tinyos_ws18/tos/lib_ecs/icmp/IcmpSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x7f0781f4b020" loc="9:../tinyos_ws18/tos/lib_ecs/icmp/IcmpSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f0781f4b360" loc="9:../tinyos_ws18/tos/lib_ecs/icmp/IcmpSend.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f0782f56610"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7f0781f4a020" loc="10:../tinyos_ws18/tos/lib_ecs/icmp/IcmpSend.nc">
        <interfacedef-ref qname="IcmpSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f07826323a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7f0781f4bce0" loc="10:../tinyos_ws18/tos/lib_ecs/icmp/IcmpSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f07826323a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="IpSend" loc="8:../tinyos_ws18/tos/lib_ecs/ip/IpSend.nc">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/ip/IpSend.nc">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;12.12.2011&#10;&#10; based on an implementation of Harald Glanzer, 0727156 TU Wien&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7f0781f3edf0" loc="9:../tinyos_ws18/tos/lib_ecs/ip/IpSend.nc">
        <interfacedef-ref qname="IpSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f07826323a0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:4" alignment="I:1"><union-ref ref="0x7f0782331880"/>
                <typename><typedef-ref name="in_addr_t" ref="0x7f0782331ca0"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f0782f56610"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dstIp" ref="0x7f0781f3e490" loc="9:../tinyos_ws18/tos/lib_ecs/ip/IpSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:4" alignment="I:1"><union-ref ref="0x7f0782331880"/>
                <typename><typedef-ref name="in_addr_t" ref="0x7f0782331ca0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="data" ref="0x7f0781f3e810" loc="9:../tinyos_ws18/tos/lib_ecs/ip/IpSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f0781f3eb50" loc="9:../tinyos_ws18/tos/lib_ecs/ip/IpSend.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f0782f56610"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7f0781f3c770" loc="10:../tinyos_ws18/tos/lib_ecs/ip/IpSend.nc">
        <interfacedef-ref qname="IpSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f07826323a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7f0781f3c4f0" loc="10:../tinyos_ws18/tos/lib_ecs/ip/IpSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f07826323a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="IpQueue" loc="8:../tinyos_ws18/tos/lib_ecs/ip/IpQueue.nc">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/ip/IpQueue.nc">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;12.12.2011&#10;&#10; based on an implementation of Harald Glanzer, 0727156 TU Wien&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7f0781f36990" loc="9:../tinyos_ws18/tos/lib_ecs/ip/IpQueue.nc">
        <interfacedef-ref qname="IpQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f07826323a0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:4" alignment="I:1"><union-ref ref="0x7f0782331880"/>
                <typename><typedef-ref name="in_addr_t" ref="0x7f0782331ca0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f0782f56610"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dstIp" ref="0x7f0781f39c50" loc="9:../tinyos_ws18/tos/lib_ecs/ip/IpQueue.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:4" alignment="I:1"><union-ref ref="0x7f0782331880"/>
                <typename><typedef-ref name="in_addr_t" ref="0x7f0782331ca0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="protocol" ref="0x7f0781f36020" loc="9:../tinyos_ws18/tos/lib_ecs/ip/IpQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x7f0781f363a0" loc="9:../tinyos_ws18/tos/lib_ecs/ip/IpQueue.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f0781f366e0" loc="9:../tinyos_ws18/tos/lib_ecs/ip/IpQueue.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f0782f56610"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7f0781f35350" loc="10:../tinyos_ws18/tos/lib_ecs/ip/IpQueue.nc">
        <interfacedef-ref qname="IpQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f07826323a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7f0781f350d0" loc="10:../tinyos_ws18/tos/lib_ecs/ip/IpQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f07826323a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="IcmpQueue" loc="8:../tinyos_ws18/tos/lib_ecs/icmp/IcmpQueue.nc">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/icmp/IcmpQueue.nc">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;12.12.2011&#10;&#10; based on an implementation of Harald Glanzer, 0727156 TU Wien&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7f0781eed6d0" loc="9:../tinyos_ws18/tos/lib_ecs/icmp/IcmpQueue.nc">
        <interfacedef-ref qname="IcmpQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f07826323a0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:4" alignment="I:1"><union-ref ref="0x7f0782331880"/>
                <typename><typedef-ref name="in_addr_t" ref="0x7f0782331ca0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f0782f56610"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dstIp" ref="0x7f0781eef660" loc="9:../tinyos_ws18/tos/lib_ecs/icmp/IcmpQueue.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:4" alignment="I:1"><union-ref ref="0x7f0782331880"/>
                <typename><typedef-ref name="in_addr_t" ref="0x7f0782331ca0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="type" ref="0x7f0781eef9a0" loc="9:../tinyos_ws18/tos/lib_ecs/icmp/IcmpQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </variable>
          <variable name="code" ref="0x7f0781eefce0" loc="9:../tinyos_ws18/tos/lib_ecs/icmp/IcmpQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x7f0781eed0d0" loc="9:../tinyos_ws18/tos/lib_ecs/icmp/IcmpQueue.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f0781eed410" loc="9:../tinyos_ws18/tos/lib_ecs/icmp/IcmpQueue.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f0782f56610"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7f0781eec040" loc="10:../tinyos_ws18/tos/lib_ecs/icmp/IcmpQueue.nc">
        <interfacedef-ref qname="IcmpQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f07826323a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7f0781eedd90" loc="10:../tinyos_ws18/tos/lib_ecs/icmp/IcmpQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f07826323a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplKS0108" loc="7:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108.nc">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108.nc">
        <short>&#10; Hpl interface for KS0108 GLCD Display&#10; </short>
        <long>&#10; Hpl interface for KS0108 GLCD Display&#10; @author:    Markus Hartmann e988811@student.tuwien.ac.at&#10; @date:      01.02.2012&#10;</long>
      </documentation>
      <function command="" provided="0" name="dataWrite" ref="0x7f0781e842b0" loc="57:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108.nc">
        <documentation loc="48:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108.nc">
          <short>&#10; Write data&#10;&#10; </short>
          <long>&#10; Write data&#10;&#10; @param The controller to write to&#10; @param data&#10; &#10; @return SUCCESS&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplKS0108"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f07826323a0"/></typename>
          </type-int>
          <function-parameters>
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="controller" ref="0x7f0781e85c40" loc="57:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108.nc">
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </variable>
          <variable name="data" ref="0x7f0781e84020" loc="57:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108.nc">
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="init" ref="0x7f0781e88030" loc="15:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108.nc">
        <documentation loc="10:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108.nc">
          <short>&#10; Initialize GLCD&#10; &#10; </short>
          <long>&#10; Initialize GLCD&#10; &#10; @return SUCCESS&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplKS0108"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f07826323a0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="dataRead" ref="0x7f0781e85440" loc="46:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108.nc">
        <documentation loc="38:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108.nc">
          <short>&#10; Read data&#10;&#10; </short>
          <long>&#10; Read data&#10;&#10; @param The controller to be read from&#10; &#10; @return data&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplKS0108"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
          </type-int>
          <function-parameters>
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="controller" ref="0x7f0781e851c0" loc="46:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108.nc">
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="controlWrite" ref="0x7f0781e86940" loc="36:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108.nc">
        <documentation loc="27:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108.nc">
          <short>&#10; Write to controller&#10;&#10; </short>
          <long>&#10; Write to controller&#10;&#10; @param The controller to write to&#10; @param controller data&#10; &#10; @return SUCCESS&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplKS0108"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f07826323a0"/></typename>
          </type-int>
          <function-parameters>
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="controller" ref="0x7f0781e86330" loc="36:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108.nc">
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </variable>
          <variable name="data" ref="0x7f0781e866b0" loc="36:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108.nc">
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="controlRead" ref="0x7f0781e88ab0" loc="25:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108.nc">
        <documentation loc="17:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108.nc">
          <short>&#10; Read controller state&#10;&#10; </short>
          <long>&#10; Read controller state&#10;&#10; @param The controller to be checked&#10; &#10; @return state of the controller&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplKS0108"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
          </type-int>
          <function-parameters>
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="controller" ref="0x7f0781e88830" loc="25:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108.nc">
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GeneralIO" loc="38:../tinyos_ws18/tos/interfaces/GeneralIO.nc">
      <documentation loc="34:../tinyos_ws18/tos/interfaces/GeneralIO.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x7f0781e0de80" loc="44:../tinyos_ws18/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x7f0781e0c5d0" loc="45:../tinyos_ws18/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f078263c500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x7f0781e0d070" loc="42:../tinyos_ws18/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x7f0781e0b480" loc="47:../tinyos_ws18/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f078263c500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7f0781e0d770" loc="43:../tinyos_ws18/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f078263c500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x7f0781e0ccf0" loc="46:../tinyos_ws18/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f0781e0f270" loc="40:../tinyos_ws18/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x7f0781e0f940" loc="41:../tinyos_ws18/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BusyWait" loc="59:../tinyos_ws18/tos/lib/timer/BusyWait.nc">
      <documentation loc="36:../tinyos_ws18/tos/lib/timer/BusyWait.nc">
        <short>&#10; BusyWait is a low-level interface intended for busy waiting for short&#10; durations.</short>
        <long>&#10; BusyWait is a low-level interface intended for busy waiting for short&#10; durations.&#10;&#10; &#60;p>BusyWait is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>BusyWait's second parameter is its &#34;width&#34;, i.e., the number of bits&#10; used to represent time values. Width is indicated by including the&#10; appropriate size integer type as a BusyWait parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this BusyWait&#10;   interface.&#10; @param size_type An integer type representing time values for this &#10;   BusyWait interface.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f0781dfb430" loc="59:../tinyos_ws18/tos/lib/timer/BusyWait.nc">
          <interfacedef-ref qname="BusyWait"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f0781dfb430"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7f0781dfb670" loc="59:../tinyos_ws18/tos/lib/timer/BusyWait.nc">
          <interfacedef-ref qname="BusyWait"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f0781dfb670"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="wait" ref="0x7f0781dfa2a0" loc="66:../tinyos_ws18/tos/lib/timer/BusyWait.nc">
        <documentation loc="61:../tinyos_ws18/tos/lib/timer/BusyWait.nc">
          <short>&#10; Busy wait for (at least) dt time units.</short>
          <long>&#10; Busy wait for (at least) dt time units. Use sparingly, when the&#10; cost of using an Alarm or Timer would be too high.&#10; @param dt Time to busy wait for.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BusyWait"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f0781dfb670"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7f0781dfa020" loc="66:../tinyos_ws18/tos/lib/timer/BusyWait.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f0781dfb670"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GeneralIOPort" loc="6:../tinyos_ws18/tos/chips_ecs/atm128/GeneralIOPort.nc">
      <documentation loc="1:../tinyos_ws18/tos/chips_ecs/atm128/GeneralIOPort.nc">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;22.01.2012&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x7f0781e01020" loc="8:../tinyos_ws18/tos/chips_ecs/atm128/GeneralIOPort.nc">
        <interfacedef-ref qname="GeneralIOPort"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0x7f0781e02ca0" loc="8:../tinyos_ws18/tos/chips_ecs/atm128/GeneralIOPort.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clear" ref="0x7f0781e002e0" loc="10:../tinyos_ws18/tos/chips_ecs/atm128/GeneralIOPort.nc">
        <interfacedef-ref qname="GeneralIOPort"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0x7f0781e00060" loc="10:../tinyos_ws18/tos/chips_ecs/atm128/GeneralIOPort.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x7f0781e00c30" loc="11:../tinyos_ws18/tos/chips_ecs/atm128/GeneralIOPort.nc">
        <interfacedef-ref qname="GeneralIOPort"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0x7f0781e009b0" loc="11:../tinyos_ws18/tos/chips_ecs/atm128/GeneralIOPort.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x7f0781e025b0" loc="7:../tinyos_ws18/tos/chips_ecs/atm128/GeneralIOPort.nc">
        <interfacedef-ref qname="GeneralIOPort"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0x7f0781e02330" loc="7:../tinyos_ws18/tos/chips_ecs/atm128/GeneralIOPort.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="read" ref="0x7f0781dfece0" loc="13:../tinyos_ws18/tos/chips_ecs/atm128/GeneralIOPort.nc">
        <interfacedef-ref qname="GeneralIOPort"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7f0781dfe5b0" loc="12:../tinyos_ws18/tos/chips_ecs/atm128/GeneralIOPort.nc">
        <interfacedef-ref qname="GeneralIOPort"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f0781dfe330" loc="12:../tinyos_ws18/tos/chips_ecs/atm128/GeneralIOPort.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f0781e01950" loc="9:../tinyos_ws18/tos/chips_ecs/atm128/GeneralIOPort.nc">
        <interfacedef-ref qname="GeneralIOPort"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0x7f0781e016d0" loc="9:../tinyos_ws18/tos/chips_ecs/atm128/GeneralIOPort.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Enc28j60Control" loc="11:../tinyos_ws18/tos/chips_ecs/enc28j60/Enc28j60Control.nc">
      <function event="" provided="0" name="linkChange" ref="0x7f0781bb1900" loc="12:../tinyos_ws18/tos/chips_ecs/enc28j60/Enc28j60Control.nc">
        <interfacedef-ref qname="Enc28j60Control"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><enum-ref ref="0x7f0781be1700"/>
              <typename><typedef-ref name="link_status_t" ref="0x7f0781be0020"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="status" ref="0x7f0781bb1680" loc="12:../tinyos_ws18/tos/chips_ecs/enc28j60/Enc28j60Control.nc">
            <type-tag size="I:1" alignment="I:1"><enum-ref ref="0x7f0781be1700"/>
              <typename><typedef-ref name="link_status_t" ref="0x7f0781be0020"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiByte" loc="38:../tinyos_ws18/tos/interfaces/SpiByte.nc">
      <documentation loc="34:../tinyos_ws18/tos/interfaces/SpiByte.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="write" ref="0x7f0781ba30b0" loc="45:../tinyos_ws18/tos/interfaces/SpiByte.nc">
        <documentation loc="40:../tinyos_ws18/tos/interfaces/SpiByte.nc">
          <short>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; </short>
          <long>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; @param tx Byte to transmit&#10; @param rx Received byte is stored here.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="tx" ref="0x7f0781baade0" loc="45:../tinyos_ws18/tos/interfaces/SpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Interrupt" loc="41:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <short>&#10; Interface to an Atmega128 external interrupt pin&#10;&#10; </short>
        <long>&#10; Interface to an Atmega128 external interrupt pin&#10;&#10; @author Joe Polastre&#10; @author Martin Turon&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x7f0781ba7830" loc="56:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="53:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short> &#10; Clears the ATmega128 Interrupt Pending Flag for a particular port&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7f0781ba52b0" loc="75:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="72:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short>&#10; Signalled when an interrupt occurs on a port&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x7f0781ba70e0" loc="51:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="48:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short> &#10; Disables ATmega128 hardware interrupt on a particular port&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="edge" ref="0x7f0781ba6a60" loc="70:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="65:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short> &#10; Sets whether the edge should be high to low or low to high.</short>
          <long> &#10; Sets whether the edge should be high to low or low to high.&#10; @param TRUE if the interrupt should be triggered on a low to high&#10;        edge transition, false for interrupts on a high to low transition&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f078263c500"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="low_to_high" ref="0x7f0781ba67e0" loc="70:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f078263c500"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enable" ref="0x7f0781bab960" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="43:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short> &#10; Enables ATmega128 hardware interrupt on a particular port&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getValue" ref="0x7f0781ba6020" loc="63:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="58:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short> &#10; Gets the current value of the input voltage of a port&#10;&#10; </short>
          <long> &#10; Gets the current value of the input voltage of a port&#10;&#10; @return TRUE if the pin is set high, FALSE if it is set low&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f078263c500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Resource" loc="77:../tinyos_ws18/tos/interfaces/Resource.nc">
      <documentation loc="63:../tinyos_ws18/tos/interfaces/Resource.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.  It is always offered as a parameterized&#10; interface, and its users gain access to the resource through some&#10; predefined arbitration policy.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.6 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x7f0781b9f120" loc="120:../tinyos_ws18/tos/interfaces/Resource.nc">
        <documentation loc="104:../tinyos_ws18/tos/interfaces/Resource.nc">
          <short>&#10; Release a shared resource you previously acquired.</short>
          <long>&#10; Release a shared resource you previously acquired.  &#10;&#10; @return SUCCESS The resource has been released &#60;br>&#10;         FAIL You tried to release but you are not the&#10;              owner of the resource &#10;&#10; @note This command should never be called between putting in a request &#9;  &#10;       and waiting for a granted event.  Doing so will result in a&#10;       potential race condition.  There are ways to guarantee that no&#10;       race will occur, but they are clumsy and overly complicated.&#10;       Since it doesn't logically make since to be calling&#10;       &#60;code>release&#60;/code> before receiving a &#60;code>granted&#60;/code> event, &#10;       we have opted to keep thing simple and warn you about the potential &#10;       race.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f07826323a0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="immediateRequest" ref="0x7f0781ba0120" loc="97:../tinyos_ws18/tos/interfaces/Resource.nc">
        <documentation loc="90:../tinyos_ws18/tos/interfaces/Resource.nc">
          <short>&#10; Request immediate access to a shared resource.</short>
          <long>&#10; Request immediate access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. &#60;br>&#10;            FAIL The request cannot be fulfilled&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f07826323a0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="request" ref="0x7f0781ba2770" loc="88:../tinyos_ws18/tos/interfaces/Resource.nc">
        <documentation loc="78:../tinyos_ws18/tos/interfaces/Resource.nc">
          <short>&#10; Request access to a shared resource.</short>
          <long>&#10; Request access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. The granted()&#10;                 event will be signaled once you have control of the&#10;                 resource.&#60;br>&#10;         EBUSY You have already requested this resource and a&#10;               granted event is pending&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f07826323a0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x7f0781ba0910" loc="102:../tinyos_ws18/tos/interfaces/Resource.nc">
        <documentation loc="99:../tinyos_ws18/tos/interfaces/Resource.nc">
          <short>&#10; You are now in control of the resource.</short>
          <long>&#10; You are now in control of the resource.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x7f0781b9fb80" loc="128:../tinyos_ws18/tos/interfaces/Resource.nc">
        <documentation loc="122:../tinyos_ws18/tos/interfaces/Resource.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  @return TRUE  It is the owner &#60;br>&#10;             FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f078263c500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiPacket" loc="54:../tinyos_ws18/tos/interfaces/SpiPacket.nc">
      <documentation loc="35:../tinyos_ws18/tos/interfaces/SpiPacket.nc">
        <short>&#10; SPI Packet/buffer interface for sending data over an SPI bus.</short>
        <long>&#10; SPI Packet/buffer interface for sending data over an SPI bus.  This&#10; interface provides a split-phase send command which can be used for&#10; sending, receiving or both. It is a &#34;send&#34; command because reading&#10; from the SPI requires writing bytes. The send call allows NULL&#10; parameters for receive or send only operations. This interface is&#10; for buffer based transfers where the microcontroller is the master&#10; (clocking) device.&#10;&#10; Often, an SPI bus must first be acquired using a Resource interface&#10; before sending commands with SPIPacket. In the case of multiple&#10; devices attached to a single SPI bus, chip select pins are often also&#10; used.&#10;&#10; @author Philip Levis&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; Revision:  $Revision: 1.8 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7f0781b31600" loc="70:../tinyos_ws18/tos/interfaces/SpiPacket.nc">
        <documentation loc="56:../tinyos_ws18/tos/interfaces/SpiPacket.nc">
          <short>&#10; Send a message over the SPI bus.</short>
          <long>&#10; Send a message over the SPI bus.&#10;&#10; @param 'uint8_t* COUNT_NOK(len) txBuf' A pointer to the buffer to send over the bus. If this&#10;              parameter is NULL, then the SPI will send zeroes.&#10; @param 'uint8_t* COUNT_NOK(len) rxBuf' A pointer to the buffer where received data should&#10;              be stored. If this parameter is NULL, then the SPI will&#10;              discard incoming bytes.&#10; @param len   Length of the message.  Note that non-NULL rxBuf and txBuf&#10;              parameters must be AT LEAST as large as len, or the SPI&#10;              will overflow a buffer.&#10;&#10; @return SUCCESS if the request was accepted for transfer&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f07826323a0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f0782f56610"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0x7f0781b37bb0" loc="70:../tinyos_ws18/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0x7f0781b31020" loc="70:../tinyos_ws18/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f0781b31360" loc="70:../tinyos_ws18/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f0782f56610"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7f0781b30b80" loc="82:../tinyos_ws18/tos/interfaces/SpiPacket.nc">
        <documentation loc="72:../tinyos_ws18/tos/interfaces/SpiPacket.nc">
          <short>&#10; Notification that the send command has completed.</short>
          <long>&#10; Notification that the send command has completed.&#10;&#10; @param 'uint8_t* COUNT_NOK(len) txBuf' The buffer used for transmission&#10; @param 'uint8_t* COUNT_NOK(len) rxBuf' The buffer used for reception&#10; @param len    The request length of the transfer, but not necessarily&#10;               the number of bytes that were actually transferred&#10; @param error  SUCCESS if the operation completed successfully, FAIL&#10;               otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f0782f56610"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f07826323a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0x7f0781b2fe50" loc="82:../tinyos_ws18/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0x7f0781b30220" loc="82:../tinyos_ws18/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f0781b30560" loc="82:../tinyos_ws18/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f0782f56610"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7f0781b308d0" loc="83:../tinyos_ws18/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f07826323a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="FastSpiByte" loc="55:../tinyos_ws18/tos/interfaces/FastSpiByte.nc">
      <documentation loc="35:../tinyos_ws18/tos/interfaces/FastSpiByte.nc">
        <short>&#10; This is a natural extension of the SpiByte interface which allows fast &#10; data transfers comparable to the SpiStream interface.</short>
        <long>&#10; This is a natural extension of the SpiByte interface which allows fast &#10; data transfers comparable to the SpiStream interface. You may want to&#10; use the following code sequence to write a buffer as fast as possible&#10;&#10;&#9;uint8_t *data;&#10;&#9;uint8_t *response;&#10;&#10;&#9;// start the first byte&#10;&#9;call FastSpiByte.splitWrite(data[0]);&#10;&#9;for(i = 1; i &#60; length; ++i) {&#10;&#9;   // finish the previous one and write the next one&#10;&#9;  response[i-1] = call FastSpiByte.splitReadWrite(data[i]);&#10;&#9;}&#10;&#9;// finish the last byte&#10;&#9;response[length-1] = call FastSpiByte.splitRead();&#10;&#10; You can also do some useful computation (like calculate a CRC) while the&#10; hardware is sending the byte.&#10;</long>
      </documentation>
      <function command="" provided="0" name="splitWrite" ref="0x7f0781b360b0" loc="62:../tinyos_ws18/tos/interfaces/FastSpiByte.nc">
        <documentation loc="57:../tinyos_ws18/tos/interfaces/FastSpiByte.nc">
          <short>&#10; Starts a split-phase SPI data transfer with the given data.</short>
          <long>&#10; Starts a split-phase SPI data transfer with the given data.&#10; A splitRead/splitReadWrite command must follow this command even &#10; if the result is unimportant.&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f0781b3ddc0" loc="62:../tinyos_ws18/tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="splitReadWrite" ref="0x7f0781b354d0" loc="74:../tinyos_ws18/tos/interfaces/FastSpiByte.nc">
        <documentation loc="70:../tinyos_ws18/tos/interfaces/FastSpiByte.nc">
          <short>&#10; This command first reads the SPI register and then writes&#10; there the new data, then returns.</short>
          <long>&#10; This command first reads the SPI register and then writes&#10; there the new data, then returns. &#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f0781b35250" loc="74:../tinyos_ws18/tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="splitRead" ref="0x7f0781b36920" loc="68:../tinyos_ws18/tos/interfaces/FastSpiByte.nc">
        <documentation loc="64:../tinyos_ws18/tos/interfaces/FastSpiByte.nc">
          <short>&#10; Finishes the split-phase SPI data transfer by waiting till &#10; the write command comletes and returning the received data.</short>
          <long>&#10; Finishes the split-phase SPI data transfer by waiting till &#10; the write command comletes and returning the received data.&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7f0781b34020" loc="81:../tinyos_ws18/tos/interfaces/FastSpiByte.nc">
        <documentation loc="76:../tinyos_ws18/tos/interfaces/FastSpiByte.nc">
          <short>&#10; This is the standard SpiByte.write command but a little&#10; faster as we should not need to adjust the power state there.</short>
          <long>&#10; This is the standard SpiByte.write command but a little&#10; faster as we should not need to adjust the power state there.&#10; (To be consistent, this command could have be named splitWriteRead).&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f0781b35ce0" loc="81:../tinyos_ws18/tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiControl" loc="8:../tinyos_ws18/tos/chips_ecs/atm1280/spi/SpiControl.nc">
      <function command="" provided="0" name="setClock" ref="0x7f0781b38020" loc="26:../tinyos_ws18/tos/chips_ecs/atm1280/spi/SpiControl.nc">
        <documentation loc="10:../tinyos_ws18/tos/chips_ecs/atm1280/spi/SpiControl.nc">
          <short>&#10; Control Spi speed&#10; &#10; IMPORTANT NOTE: Speed is reset to default after each resource release.</short>
          <long>&#10; Control Spi speed&#10; &#10; IMPORTANT NOTE: Speed is reset to default after each resource release.&#10; &#10;&#10; @param speed Spi speed in Fosc/speed&#10;&#10;    SPI_SPEED_4   - Set to Fosc/4&#10;    SPI_SPEED_16  - Set to Fosc/16&#10;    SPI_SPEED_64  - Set to Fosc/64&#10;    SPI_SPEED_128 - Set to Fosc/128&#10;    SPI_SPEED_2   - Set to Fosc/2&#10;    SPI_SPEED_8   - Set to Fosc/8&#10;    SPI_SPEED_32  - Set to Fosc/32&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><enum-ref ref="0x7f0781b3ed10"/>
              <typename><typedef-ref name="spi_speed_t" ref="0x7f0781b3a540"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="speed" ref="0x7f0781b3ad60" loc="26:../tinyos_ws18/tos/chips_ecs/atm1280/spi/SpiControl.nc">
            <type-tag size="I:1" alignment="I:1"><enum-ref ref="0x7f0781b3ed10"/>
              <typename><typedef-ref name="spi_speed_t" ref="0x7f0781b3a540"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128Spi" loc="78:../tinyos_ws18/tos/chips/atm128/spi/Atm128Spi.nc">
      <function command="" provided="0" name="initSlave" ref="0x7f0781b1bcc0" loc="86:../tinyos_ws18/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="85:../tinyos_ws18/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> Initialize the ATmega128 SPI bus into slave mode.</short>
          <long> Initialize the ATmega128 SPI bus into slave mode. *</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClockPolarity" ref="0x7f0781b11a70" loc="126:../tinyos_ws18/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f078263c500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isSpiEnabled" ref="0x7f0781b144a0" loc="117:../tinyos_ws18/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f078263c500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockPhase" ref="0x7f0781b0f530" loc="128:../tinyos_ws18/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f078263c500"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="sampleOnTrailing" ref="0x7f0781b0f2b0" loc="128:../tinyos_ws18/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f078263c500"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="initMaster" ref="0x7f0781b1b510" loc="83:../tinyos_ws18/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="82:../tinyos_ws18/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> Initialize the ATmega128 SPI bus into master mode.</short>
          <long> Initialize the ATmega128 SPI bus into master mode. *</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMasterBit" ref="0x7f0781b12020" loc="122:../tinyos_ws18/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f078263c500"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="isMaster" ref="0x7f0781b13d50" loc="122:../tinyos_ws18/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f078263c500"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableInterrupt" ref="0x7f0781b17b50" loc="113:../tinyos_ws18/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f078263c500"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enabled" ref="0x7f0781b178d0" loc="113:../tinyos_ws18/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f078263c500"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="read" ref="0x7f0781b19c70" loc="97:../tinyos_ws18/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="93:../tinyos_ws18/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> &#10; Read the SPI data register &#10; </short>
          <long> &#10; Read the SPI data register &#10; @return last data byte&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMasterDoubleSpeed" ref="0x7f0781b0a020" loc="141:../tinyos_ws18/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f078263c500"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="on" ref="0x7f0781b0bd00" loc="141:../tinyos_ws18/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f078263c500"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptEnabled" ref="0x7f0781b16350" loc="114:../tinyos_ws18/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f078263c500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClock" ref="0x7f0781b0e690" loc="131:../tinyos_ws18/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="speed" ref="0x7f0781b0e410" loc="131:../tinyos_ws18/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptPending" ref="0x7f0781b0d610" loc="136:../tinyos_ws18/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f078263c500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockPolarity" ref="0x7f0781b112e0" loc="125:../tinyos_ws18/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f078263c500"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="highWhenIdle" ref="0x7f0781b11060" loc="125:../tinyos_ws18/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f078263c500"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isMasterDoubleSpeed" ref="0x7f0781b0b5d0" loc="140:../tinyos_ws18/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f078263c500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setDataOrder" ref="0x7f0781b14e60" loc="119:../tinyos_ws18/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f078263c500"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="lsbFirst" ref="0x7f0781b14be0" loc="119:../tinyos_ws18/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f078263c500"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7f0781b18680" loc="103:../tinyos_ws18/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="99:../tinyos_ws18/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> &#10; Write the SPI data register &#10; </short>
          <long> &#10; Write the SPI data register &#10; @param data   next data byte&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f0781b18400" loc="103:../tinyos_ws18/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableSpi" ref="0x7f0781b16cd0" loc="116:../tinyos_ws18/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f078263c500"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="busOn" ref="0x7f0781b16a50" loc="116:../tinyos_ws18/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f078263c500"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isMasterBitSet" ref="0x7f0781b12890" loc="123:../tinyos_ws18/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f078263c500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClockPhase" ref="0x7f0781b0fca0" loc="129:../tinyos_ws18/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f078263c500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClock" ref="0x7f0781b0edf0" loc="132:../tinyos_ws18/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="hasWriteCollided" ref="0x7f0781b0ddc0" loc="138:../tinyos_ws18/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f078263c500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOrderLsbFirst" ref="0x7f0781b13610" loc="120:../tinyos_ws18/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f078263c500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sleep" ref="0x7f0781b194a0" loc="89:../tinyos_ws18/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="88:../tinyos_ws18/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> Disable and sleep the ATmega128 SPI bus.</short>
          <long> Disable and sleep the ATmega128 SPI bus. *</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReady" ref="0x7f0781b170b0" loc="109:../tinyos_ws18/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="105:../tinyos_ws18/tos/chips/atm128/spi/Atm128Spi.nc">
          <short>&#10; Interrupt signalling SPI data cycle is complete.</short>
          <long>&#10; Interrupt signalling SPI data cycle is complete. &#10; @param data   data byte from data register&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f0781b18e00" loc="109:../tinyos_ws18/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ArbiterInfo" loc="82:../tinyos_ws18/tos/interfaces/ArbiterInfo.nc">
      <documentation loc="69:../tinyos_ws18/tos/interfaces/ArbiterInfo.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.  It must be provided by ALL arbiter implementations,&#10; and can be used for a variety of different purposes.  Normally it will be&#10; used in conjunction with the Resource interface for performing run time&#10; checks on access rights to a particular shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="inUse" ref="0x7f0781b050e0" loc="90:../tinyos_ws18/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="83:../tinyos_ws18/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Check whether a resource is currently allocated.</short>
          <long>&#10; Check whether a resource is currently allocated.&#10;&#10; @return TRUE If the resource being arbitrated is currently allocated&#10;              to any of its users&#60;br>&#10;         FALSE Otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f078263c500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="userId" ref="0x7f0781b05940" loc="98:../tinyos_ws18/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="92:../tinyos_ws18/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Get the id of the client currently using a resource.</short>
          <long>&#10; Get the id of the client currently using a resource.&#10; &#10; @return Id of the current owner of the resource&#60;br>&#10;         0xFF if no one currently owns the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AsyncStdControl" loc="86:../tinyos_ws18/tos/interfaces/AsyncStdControl.nc">
      <documentation loc="72:../tinyos_ws18/tos/interfaces/AsyncStdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  This interface differs from the&#10; StdControl interface only in the fact that any of its commands can&#10; be called from asynchronous context.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x7f0781aacab0" loc="95:../tinyos_ws18/tos/interfaces/AsyncStdControl.nc">
        <documentation loc="88:../tinyos_ws18/tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f07826323a0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f0781aa9350" loc="105:../tinyos_ws18/tos/interfaces/AsyncStdControl.nc">
        <documentation loc="97:../tinyos_ws18/tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f07826323a0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceRequested" loc="46:../tinyos_ws18/tos/interfaces/ResourceRequested.nc">
      <documentation loc="33:../tinyos_ws18/tos/interfaces/ResourceRequested.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.5 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="requested" ref="0x7f0781a54270" loc="53:../tinyos_ws18/tos/interfaces/ResourceRequested.nc">
        <documentation loc="47:../tinyos_ws18/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x7f0781a54ba0" loc="61:../tinyos_ws18/tos/interfaces/ResourceRequested.nc">
        <documentation loc="55:../tinyos_ws18/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceConfigure" loc="54:../tinyos_ws18/tos/interfaces/ResourceConfigure.nc">
      <documentation loc="41:../tinyos_ws18/tos/interfaces/ResourceConfigure.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.  It will always be parameterized along side &#10; a parameterized Resource interface, with the ids from one mapping directly&#10; onto the ids of the other.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="unconfigure" ref="0x7f0781a51b70" loc="65:../tinyos_ws18/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="61:../tinyos_ws18/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to unconfigure a resource just before releasing it.</short>
          <long>&#10; Used to unconfigure a resource just before releasing it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="configure" ref="0x7f0781a51350" loc="59:../tinyos_ws18/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="55:../tinyos_ws18/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to configure a resource just before being granted access to it.</short>
          <long>&#10; Used to configure a resource just before being granted access to it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceQueue" loc="45:../tinyos_ws18/tos/interfaces/ResourceQueue.nc">
      <documentation loc="33:../tinyos_ws18/tos/interfaces/ResourceQueue.nc">
        <short>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration.</short>
        <long>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration. A single slot in the queue is guaranteed to each resource&#10;  client, with the actual queing policy determined by the implementation&#10;  of the interface.&#10;&#10;  @author Kevin Klues &#60;klueska@cs.wustl.edu>&#10;  @date   $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="enqueue" ref="0x7f0781a47c10" loc="79:../tinyos_ws18/tos/interfaces/ResourceQueue.nc">
        <documentation loc="72:../tinyos_ws18/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Enqueue a client id&#10;&#10; </short>
          <long>&#10; Enqueue a client id&#10;&#10; @param clientId - the client id to enqueue&#10; @return SUCCESS if the client id was enqueued successfully &#60;br>&#10;         EBUSY   if it has already been enqueued.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f07826323a0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7f0781a50cb0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x7f0781a47990" loc="79:../tinyos_ws18/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7f0781a50cb0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isEmpty" ref="0x7f0781a4bc50" loc="53:../tinyos_ws18/tos/interfaces/ResourceQueue.nc">
        <documentation loc="47:../tinyos_ws18/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if the queue is empty.</short>
          <long>&#10; Check to see if the queue is empty.&#10;&#10; @return TRUE  if the queue is empty. &#60;br>&#10;         FALSE if there is at least one entry in the queue&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f078263c500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isEnqueued" ref="0x7f0781a487a0" loc="62:../tinyos_ws18/tos/interfaces/ResourceQueue.nc">
        <documentation loc="55:../tinyos_ws18/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.</short>
          <long>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.&#10;&#10; @return TRUE  if the client id is in the queue. &#60;br>&#10;         FALSE if it does not&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f078263c500"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7f0781a50cb0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x7f0781a48520" loc="62:../tinyos_ws18/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7f0781a50cb0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="dequeue" ref="0x7f0781a470e0" loc="70:../tinyos_ws18/tos/interfaces/ResourceQueue.nc">
        <documentation loc="64:../tinyos_ws18/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Retreive the client id of the next resource in the queue.</short>
          <long>&#10; Retreive the client id of the next resource in the queue. &#10; If the queue is empty, the return value is undefined.&#10;&#10; @return The client id at the head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="resource_client_id_t" ref="0x7f0781a50cb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128InterruptSig" loc="43:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptSig.nc">
      <documentation loc="35:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptSig.nc">
        <short>&#10; Interface to an Atmega128 external interrupt pin that exposes just the&#10; interrupt vector routine for easy linking to generic components (see&#10; HplAtm128Interrupt for the full interface).</short>
        <long>&#10; Interface to an Atmega128 external interrupt pin that exposes just the&#10; interrupt vector routine for easy linking to generic components (see&#10; HplAtm128Interrupt for the full interface).&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @see HplAtm128Interrupt&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x7f07819e3680" loc="48:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptSig.nc">
        <documentation loc="45:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptSig.nc">
          <short>&#10; Signalled when an interrupt occurs on a pin&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UdpQueue" loc="8:../tinyos_ws18/tos/lib_ecs/udp/UdpQueue.nc">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/udp/UdpQueue.nc">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;12.12.2011&#10;&#10; based on an implementation of Harald Glanzer, 0727156 TU Wien&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7f0781952620" loc="9:../tinyos_ws18/tos/lib_ecs/udp/UdpQueue.nc">
        <interfacedef-ref qname="UdpQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f07826323a0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:4" alignment="I:1"><union-ref ref="0x7f0782331880"/>
                <typename><typedef-ref name="in_addr_t" ref="0x7f0782331ca0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f0782f56610"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f0782f56610"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f0782f56610"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dstIp" ref="0x7f07819534d0" loc="9:../tinyos_ws18/tos/lib_ecs/udp/UdpQueue.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:4" alignment="I:1"><union-ref ref="0x7f0782331880"/>
                <typename><typedef-ref name="in_addr_t" ref="0x7f0782331ca0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="srcPort" ref="0x7f0781953840" loc="9:../tinyos_ws18/tos/lib_ecs/udp/UdpQueue.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f0782f56610"/></typename>
            </type-int>
          </variable>
          <variable name="dstPort" ref="0x7f0781953bb0" loc="9:../tinyos_ws18/tos/lib_ecs/udp/UdpQueue.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f0782f56610"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x7f0781952020" loc="9:../tinyos_ws18/tos/lib_ecs/udp/UdpQueue.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f0781952360" loc="9:../tinyos_ws18/tos/lib_ecs/udp/UdpQueue.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f0782f56610"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7f0781951020" loc="10:../tinyos_ws18/tos/lib_ecs/udp/UdpQueue.nc">
        <interfacedef-ref qname="UdpQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f07826323a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7f0781952ce0" loc="10:../tinyos_ws18/tos/lib_ecs/udp/UdpQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f07826323a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="I2CPacket" loc="59:../tinyos_ws18/tos/interfaces/I2CPacket.nc">
      <parameters>
        <typedef name="addr_size" ref="0x7f078191de30" loc="59:../tinyos_ws18/tos/interfaces/I2CPacket.nc">
          <interfacedef-ref qname="I2CPacket"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="addr_size" scoped="" ref="0x7f078191de30"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="read" ref="0x7f078191b470" loc="76:../tinyos_ws18/tos/interfaces/I2CPacket.nc">
        <documentation loc="60:../tinyos_ws18/tos/interfaces/I2CPacket.nc">
          <short>&#10; Perform an I2C read operation&#10;&#10; </short>
          <long>&#10; Perform an I2C read operation&#10;&#10; @param flags Flags that may be logical ORed and defined by:&#10;    I2C_START   - The START condition is transmitted at the beginning &#10;                   of the packet if set.&#10;    I2C_STOP    - The STOP condition is transmitted at the end of the &#10;                   packet if set.&#10;    I2C_ACK_END - ACK the last byte if set. Otherwise NACK last byte. This&#10;                   flag cannot be used with the I2C_STOP flag.&#10; @param addr The slave device address. Only used if I2C_START is set.&#10; @param length Length, in bytes, to be read&#10; @param 'uint8_t* COUNT(length) data' A point to a data buffer to read into&#10;&#10; @return SUCCESS if bus available and request accepted. &#10;</long>
        </documentation>
        <interfacedef-ref qname="I2CPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f07826323a0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="i2c_flags_t" ref="0x7f078191fe10"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f0782f56610"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0x7f078191c770" loc="76:../tinyos_ws18/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="i2c_flags_t" ref="0x7f078191fe10"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x7f078191cac0" loc="76:../tinyos_ws18/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f0782f56610"/></typename>
            </type-int>
          </variable>
          <variable name="length" ref="0x7f078191ce10" loc="76:../tinyos_ws18/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x7f078191b1c0" loc="76:../tinyos_ws18/tos/interfaces/I2CPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="writeDone" ref="0x7f0781915d30" loc="112:../tinyos_ws18/tos/interfaces/I2CPacket.nc">
        <documentation loc="104:../tinyos_ws18/tos/interfaces/I2CPacket.nc">
          <short>&#10; Notification that the write operation has completed&#10;&#10; </short>
          <long>&#10; Notification that the write operation has completed&#10;&#10; @param addr The slave device address&#10; @param length Length, in bytes, written&#10; @param 'uint8_t* COUNT(length) data' Pointer to the data buffer written&#10; @param success SUCCESS if transfer completed without error.&#10;</long>
        </documentation>
        <interfacedef-ref qname="I2CPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f07826323a0"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f0782f56610"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7f0781915060" loc="112:../tinyos_ws18/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f07826323a0"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x7f07819153b0" loc="112:../tinyos_ws18/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f0782f56610"/></typename>
            </type-int>
          </variable>
          <variable name="length" ref="0x7f0781915700" loc="112:../tinyos_ws18/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x7f0781915a80" loc="112:../tinyos_ws18/tos/interfaces/I2CPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7f0781918310" loc="92:../tinyos_ws18/tos/interfaces/I2CPacket.nc">
        <documentation loc="78:../tinyos_ws18/tos/interfaces/I2CPacket.nc">
          <short>&#10; Perform an I2C write operation&#10;&#10; </short>
          <long>&#10; Perform an I2C write operation&#10;&#10; @param flags Flags that may be logical ORed and defined by:&#10;    I2C_START   - The START condition is transmitted at the beginning &#10;                   of the packet if set.&#10;    I2C_STOP    - The STOP condition is transmitted at the end of the &#10;                   packet if set.&#10; @param addr The slave device address. Only used if I2C_START is set.&#10; @param length Length, in bytes, to be read&#10; @param 'uint8_t* COUNT(length) data' A point to a data buffer to read into&#10;&#10; @return SUCCESS if bus available and request accepted. &#10;</long>
        </documentation>
        <interfacedef-ref qname="I2CPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f07826323a0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="i2c_flags_t" ref="0x7f078191fe10"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f0782f56610"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0x7f078191a600" loc="92:../tinyos_ws18/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="i2c_flags_t" ref="0x7f078191fe10"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x7f078191a950" loc="92:../tinyos_ws18/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f0782f56610"/></typename>
            </type-int>
          </variable>
          <variable name="length" ref="0x7f078191aca0" loc="92:../tinyos_ws18/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x7f0781918060" loc="92:../tinyos_ws18/tos/interfaces/I2CPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x7f07819160e0" loc="102:../tinyos_ws18/tos/interfaces/I2CPacket.nc">
        <documentation loc="94:../tinyos_ws18/tos/interfaces/I2CPacket.nc">
          <short>&#10; Notification that the read operation has completed&#10;&#10; </short>
          <long>&#10; Notification that the read operation has completed&#10;&#10; @param addr The slave device address&#10; @param length Length, in bytes, read&#10; @param 'uint8_t* COUNT(length) data' Pointer to the received data buffer&#10; @param success SUCCESS if transfer completed without error.&#10;</long>
        </documentation>
        <interfacedef-ref qname="I2CPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f07826323a0"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f0782f56610"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7f07819173a0" loc="102:../tinyos_ws18/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f07826323a0"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x7f07819176f0" loc="102:../tinyos_ws18/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f0782f56610"/></typename>
            </type-int>
          </variable>
          <variable name="length" ref="0x7f0781917a40" loc="102:../tinyos_ws18/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x7f0781917dc0" loc="102:../tinyos_ws18/tos/interfaces/I2CPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceDefaultOwner" loc="40:../tinyos_ws18/tos/interfaces/ResourceDefaultOwner.nc">
      <documentation loc="31:../tinyos_ws18/tos/interfaces/ResourceDefaultOwner.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; </short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.edu)&#10; @version $ $&#10; @date $Date: 2007-02-04 20:06:42 $ &#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x7f07817f36c0" loc="56:../tinyos_ws18/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="48:../tinyos_ws18/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; Release control of the resource&#10;&#10; </short>
          <long>&#10; Release control of the resource&#10;&#10; @return SUCCESS The resource has been released and pending requests&#10;                 can resume. &#60;br>&#10;             FAIL You tried to release but you are not the&#10;                  owner of the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f07826323a0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="requested" ref="0x7f07817f2850" loc="73:../tinyos_ws18/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="67:../tinyos_ws18/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x7f07817f7dd0" loc="46:../tinyos_ws18/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="41:../tinyos_ws18/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; Event sent to the resource controller giving it control whenever a resource&#10; goes idle.</short>
          <long>&#10; Event sent to the resource controller giving it control whenever a resource&#10; goes idle. That is to say, whenever no one currently owns the resource,&#10; and there are no more pending requests&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x7f07817f2020" loc="65:../tinyos_ws18/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="58:../tinyos_ws18/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10; &#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10; &#10;  @return TRUE  It is the owner &#60;br>&#10;          FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f078263c500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x7f07817f11f0" loc="81:../tinyos_ws18/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="75:../tinyos_ws18/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Leds" loc="51:../tinyos_ws18/tos/interfaces/Leds.nc">
      <documentation loc="33:../tinyos_ws18/tos/types/Leds.h">
        <short>&#10; Constants for manipulating LEDs.</short>
        <long>&#10; Constants for manipulating LEDs.&#10;&#10; @author Philip Levis&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="led0Off" ref="0x7f07817dd390" loc="61:../tinyos_ws18/tos/interfaces/Leds.nc">
        <documentation loc="58:../tinyos_ws18/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 0.</short>
          <long>&#10; Turn off LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led0Toggle" ref="0x7f07817ddb40" loc="67:../tinyos_ws18/tos/interfaces/Leds.nc">
        <documentation loc="63:../tinyos_ws18/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1On" ref="0x7f07817dc350" loc="72:../tinyos_ws18/tos/interfaces/Leds.nc">
        <documentation loc="69:../tinyos_ws18/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 1.</short>
          <long>&#10; Turn on LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Toggle" ref="0x7f07817db2b0" loc="83:../tinyos_ws18/tos/interfaces/Leds.nc">
        <documentation loc="79:../tinyos_ws18/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Toggle" ref="0x7f07817daa20" loc="100:../tinyos_ws18/tos/interfaces/Leds.nc">
        <documentation loc="96:../tinyos_ws18/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7f07817d8270" loc="117:../tinyos_ws18/tos/interfaces/Leds.nc">
        <documentation loc="103:../tinyos_ws18/tos/interfaces/Leds.nc">
          <short>&#10; Get the current LED settings as a bitmask.</short>
          <long>&#10; Get the current LED settings as a bitmask. Each bit corresponds to&#10; whether an LED is on; bit 0 is LED 0, bit 1 is LED 1, etc. You can&#10; also use the enums LEDS_LED0, LEDS_LED1. For example, this expression&#10; will determine whether LED 2 is on:&#10;&#10; &#60;pre> (call Leds.get() &#38; LEDS_LED2) &#60;/pre>&#10;&#10; This command supports up to 8 LEDs; if a platform has fewer, then&#10; those LEDs should always be off (their bit is zero). Also see&#10; &#60;tt>set()&#60;/tt>.&#10;&#10; @return a bitmask describing which LEDs are on and which are off&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Off" ref="0x7f07817dcae0" loc="77:../tinyos_ws18/tos/interfaces/Leds.nc">
        <documentation loc="74:../tinyos_ws18/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 1.</short>
          <long>&#10; Turn off LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f07817d8de0" loc="134:../tinyos_ws18/tos/interfaces/Leds.nc">
        <documentation loc="120:../tinyos_ws18/tos/interfaces/Leds.nc">
          <short>&#10; Set the current LED configuration using a bitmask.</short>
          <long>&#10; Set the current LED configuration using a bitmask.  Each bit&#10; corresponds to whether an LED is on; bit 0 is LED 0, bit 1 is LED&#10; 1, etc. You can also use the enums LEDS_LED0, LEDS_LED1. For example,&#10; this statement will configure the LEDs so LED 0 and LED 2 are on:&#10;&#10; &#60;pre> call Leds.set(LEDS_LED0 | LEDS_LED2); &#60;/pre>&#10;&#10; This statement will turn LED 1 on if it was not already:&#10;&#10; &#60;pre>call Leds.set(call Leds.get() | LEDS_LED1);&#60;/pre>&#10;&#10; @param  val   a bitmask describing the on/off settings of the LEDs&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x7f07817d8b60" loc="134:../tinyos_ws18/tos/interfaces/Leds.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="led0On" ref="0x7f07817debd0" loc="56:../tinyos_ws18/tos/interfaces/Leds.nc">
        <documentation loc="53:../tinyos_ws18/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 0.</short>
          <long>&#10; Turn on LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2On" ref="0x7f07817dba90" loc="89:../tinyos_ws18/tos/interfaces/Leds.nc">
        <documentation loc="86:../tinyos_ws18/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 2.</short>
          <long>&#10; Turn on LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Off" ref="0x7f07817da270" loc="94:../tinyos_ws18/tos/interfaces/Leds.nc">
        <documentation loc="91:../tinyos_ws18/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 2.</short>
          <long>&#10; Turn off LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PowerDownCleanup" loc="55:../tinyos_ws18/tos/lib/power/PowerDownCleanup.nc">
      <documentation loc="41:../tinyos_ws18/tos/lib/power/PowerDownCleanup.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface exists to allow a Resource user to cleanup any state&#10; information before a shared Resource is shutdown.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface exists to allow a Resource user to cleanup any state&#10; information before a shared Resource is shutdown.  It should be provided&#10; by the user of a shared Resource, and used by the&#10; power managment component for that Resource.  The &#60;code>cleanup()&#60;/code>&#10; command will be called by the power manager just before powering down&#10; the shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="cleanup" ref="0x7f0781789770" loc="62:../tinyos_ws18/tos/lib/power/PowerDownCleanup.nc">
        <documentation loc="56:../tinyos_ws18/tos/lib/power/PowerDownCleanup.nc">
          <short>&#10; This command will be called by the power management component of&#10; a shared Resource.</short>
          <long>&#10; This command will be called by the power management component of&#10; a shared Resource.  The implementation of this command defines&#10; what must be done just before that shared Resource is shut off.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PowerDownCleanup"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128I2C" loc="44:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2C.nc">
      <documentation loc="35:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2C.nc">
        <short>&#10; An interface for stopping the I2C bus.</short>
        <long>&#10; An interface for stopping the I2C bus. Needed by the resource&#10; reservation system, so that when a client releases you're sure&#10; there's a stop.&#10;&#10; @author Philip Levis&#10;&#10; @version  $Id: Atm128I2C.nc,v 1.4 2006-12-12 18:23:03 vlahan Exp $&#10;</long>
      </documentation>
      <function command="" provided="0" name="stop" ref="0x7f078176d2b0" loc="46:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2C.nc">
        <interfacedef-ref qname="Atm128I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128I2CBus" loc="47:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
      <documentation loc="37:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <short>&#10; This driver implements direct I2C register access and a blocking master&#10; controller for the ATmega128 via a Hardware Platform Layer (HPL) to its  &#10; two-wire-interface (TWI) hardware subsystem.</short>
        <long>&#10; This driver implements direct I2C register access and a blocking master&#10; controller for the ATmega128 via a Hardware Platform Layer (HPL) to its  &#10; two-wire-interface (TWI) hardware subsystem.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Philip Levis&#10;&#10; @version  $Id: HplAtm128I2CBus.nc,v 1.5 2010-06-29 22:07:43 scipio Exp $&#10;</long>
      </documentation>
      <function command="" provided="0" name="readCurrent" ref="0x7f078172cbc0" loc="54:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sendCommand" ref="0x7f078172b350" loc="55:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setStart" ref="0x7f07817294a0" loc="60:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f078263c500"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="on" ref="0x7f0781729220" loc="60:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f078263c500"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="status" ref="0x7f078172c4a0" loc="52:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="hasAcks" ref="0x7f0781727da0" loc="65:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f078263c500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isEnabled" ref="0x7f0781722b30" loc="84:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f078263c500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableInterrupt" ref="0x7f0781725790" loc="67:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f078263c500"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enable" ref="0x7f0781725510" loc="67:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f078263c500"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="read" ref="0x7f078171f420" loc="89:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="init" ref="0x7f078172d660" loc="49:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f078263c500"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="hasExternalPulldown" ref="0x7f078172d3e0" loc="49:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f078263c500"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableAck" ref="0x7f0781727670" loc="64:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f078263c500"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enable" ref="0x7f07817273f0" loc="64:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f078263c500"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptEnabled" ref="0x7f0781724070" loc="68:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f078263c500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="hasStart" ref="0x7f0781729be0" loc="61:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f078263c500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptPending" ref="0x7f0781723070" loc="75:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f078263c500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="commandComplete" ref="0x7f078172baa0" loc="56:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enable" ref="0x7f07817223f0" loc="83:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f078263c500"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="on" ref="0x7f0781722170" loc="83:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f078263c500"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7f0781720cc0" loc="88:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f0781720a40" loc="88:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isRealInterruptPending" ref="0x7f0781724870" loc="72:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f078263c500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="off" ref="0x7f078172dd30" loc="50:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setStop" ref="0x7f0781728580" loc="62:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f078263c500"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="on" ref="0x7f0781728300" loc="62:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f078263c500"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptPending" ref="0x7f0781723a90" loc="81:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f078263c500"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="on" ref="0x7f0781723810" loc="81:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f078263c500"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="hasWriteCollided" ref="0x7f0781720350" loc="85:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f078263c500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="hasStop" ref="0x7f0781728cb0" loc="63:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f078263c500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtmegaPinChange" loc="35:../tinyos_ws18/tos/chips/atm128rfa1/pins/HplAtmegaPinChange.nc">
      <function command="" provided="0" name="test" ref="0x7f07813d5270" loc="43:../tinyos_ws18/tos/chips/atm128rfa1/pins/HplAtmegaPinChange.nc">
        <interfacedef-ref qname="HplAtmegaPinChange"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f078263c500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7f07813daad0" loc="40:../tinyos_ws18/tos/chips/atm128rfa1/pins/HplAtmegaPinChange.nc">
        <interfacedef-ref qname="HplAtmegaPinChange"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x7f07813d4800" loc="54:../tinyos_ws18/tos/chips/atm128rfa1/pins/HplAtmegaPinChange.nc">
        <interfacedef-ref qname="HplAtmegaPinChange"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isEnabled" ref="0x7f07813d3020" loc="57:../tinyos_ws18/tos/chips/atm128rfa1/pins/HplAtmegaPinChange.nc">
        <interfacedef-ref qname="HplAtmegaPinChange"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f078263c500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x7f07813d5980" loc="46:../tinyos_ws18/tos/chips/atm128rfa1/pins/HplAtmegaPinChange.nc">
        <interfacedef-ref qname="HplAtmegaPinChange"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMask" ref="0x7f07813d22a0" loc="65:../tinyos_ws18/tos/chips/atm128rfa1/pins/HplAtmegaPinChange.nc">
        <interfacedef-ref qname="HplAtmegaPinChange"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="value" ref="0x7f07813d2020" loc="65:../tinyos_ws18/tos/chips/atm128rfa1/pins/HplAtmegaPinChange.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enable" ref="0x7f07813d40e0" loc="51:../tinyos_ws18/tos/chips/atm128rfa1/pins/HplAtmegaPinChange.nc">
        <interfacedef-ref qname="HplAtmegaPinChange"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getPins" ref="0x7f07813d2a30" loc="70:../tinyos_ws18/tos/chips/atm128rfa1/pins/HplAtmegaPinChange.nc">
        <interfacedef-ref qname="HplAtmegaPinChange"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getMask" ref="0x7f07813d37b0" loc="62:../tinyos_ws18/tos/chips/atm128rfa1/pins/HplAtmegaPinChange.nc">
        <interfacedef-ref qname="HplAtmegaPinChange"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm1280AdcConfig" loc="19:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcConfig.nc">
      <documentation loc="13:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcConfig.nc">
        <short>&#10; Clients of the higher-level A/D system must implement this interface to&#10; specify which channel to sample, and with what parameters.</short>
        <long>&#10; Clients of the higher-level A/D system must implement this interface to&#10; specify which channel to sample, and with what parameters.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="getRefVoltage" ref="0x7f0781389880" loc="32:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcConfig.nc">
        <documentation loc="27:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcConfig.nc">
          <short>&#10; Obtain reference voltage&#10; </short>
          <long>&#10; Obtain reference voltage&#10; @return The reference voltage to use. Must be one of the &#10;   ATM1280_ADC_VREF_xxx values from Atm1280Adc.h.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm1280AdcConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getChannel" ref="0x7f0781389020" loc="25:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcConfig.nc">
        <documentation loc="20:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcConfig.nc">
          <short>&#10; Obtain channel.</short>
          <long>&#10; Obtain channel.&#10; @return The A/D channel to use. Must be one of the ATM1280_ADC_SNGL_xxx&#10;   or ATM1280_ADC_DIFF_xxx values from Atm128Adc.h.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm1280AdcConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getPrescaler" ref="0x7f0781388120" loc="39:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcConfig.nc">
        <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcConfig.nc">
          <short>&#10; Obtain prescaler value.</short>
          <long>&#10; Obtain prescaler value.&#10; @return The prescaler value to use. Must be one of the &#10;   ATM1280_ADC_PRESCALE_xxx values from Atm1280Adc.h.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm1280AdcConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReadNow" loc="52:../tinyos_ws18/tos/interfaces/ReadNow.nc">
      <documentation loc="33:../tinyos_ws18/tos/interfaces/ReadNow.nc">
        <short>&#10; The ReadNow interface is intended for split-phase low-latency&#10; reading of small values.</short>
        <long>&#10; The ReadNow interface is intended for split-phase low-latency&#10; reading of small values. The type of the value is given as a&#10; template argument. Because this interface is split-phase, these&#10; values may be backed by hardware. Providers of this interface&#10; should also provide a Resource interface, and this interface should&#10; only be used after the resource has been acquired. Otherwise, the&#10; low-latency requirement may be impossible to meet.&#10;&#10; &#60;p>&#10; This interface has the same calling semantics as the Read interface&#10; described in TEP 114, except that it is async.&#10; &#10; @param val_t the type of the object that will be returned&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-16 18:58:51 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="val_t" ref="0x7f07813767c0" loc="52:../tinyos_ws18/tos/interfaces/ReadNow.nc">
          <interfacedef-ref qname="ReadNow"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7f07813767c0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="read" ref="0x7f07813730e0" loc="58:../tinyos_ws18/tos/interfaces/ReadNow.nc">
        <documentation loc="53:../tinyos_ws18/tos/interfaces/ReadNow.nc">
          <short>&#10; Initiates a read of the value.</short>
          <long>&#10; Initiates a read of the value.&#10; &#10; @return SUCCESS if a readDone() event will eventually come back.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReadNow"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f07826323a0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x7f0781373e50" loc="66:../tinyos_ws18/tos/interfaces/ReadNow.nc">
        <documentation loc="60:../tinyos_ws18/tos/interfaces/ReadNow.nc">
          <short>&#10; Signals the completion of the read().</short>
          <long>&#10; Signals the completion of the read().&#10;&#10; @param result SUCCESS if the read() was successful&#10; @param val the value that has been read&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReadNow"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f07826323a0"/></typename>
            </type-int>
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7f07813767c0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x7f07813738a0" loc="66:../tinyos_ws18/tos/interfaces/ReadNow.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f07826323a0"/></typename>
            </type-int>
          </variable>
          <variable name="val" ref="0x7f0781373bc0" loc="66:../tinyos_ws18/tos/interfaces/ReadNow.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7f07813767c0"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm1280AdcSingle" loc="52:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcSingle.nc">
      <documentation loc="42:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcSingle.nc">
        <short>&#10; Hardware Abstraction Layer interface of Atmega1280 for acquiring&#10; a single sample from a channel.</short>
        <long>&#10; Hardware Abstraction Layer interface of Atmega1280 for acquiring&#10; a single sample from a channel.&#10;&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="getData" ref="0x7f07813679c0" loc="70:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcSingle.nc">
        <documentation loc="54:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcSingle.nc">
          <short>&#10; Initiates an ADC conversion on a given channel.</short>
          <long>&#10; Initiates an ADC conversion on a given channel.&#10;&#10; @param channel A/D conversion channel.&#10; @param refVoltage Select reference voltage for A/D conversion. See&#10;   the ATM1280_ADC_VREF_xxx constants in Atm1280ADC.h&#10; @param leftJustify TRUE to place A/D result in high-order bits &#10;   (i.e., shifted left by 6 bits), low to place it in the low-order bits&#10; @param prescaler Prescaler value for the A/D conversion clock. If you &#10;  specify ATM1280_ADC_PRESCALE, a prescaler will be chosen that guarantees&#10;  full precision. Other prescalers can be used to get faster conversions. &#10;  See the ATmega1280 manual for details.&#10; @return TRUE if the conversion will be precise, FALSE if it will be &#10;   imprecise (due to a change in refernce voltage, or switching to a&#10;   differential input channel)&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm1280AdcSingle"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f078263c500"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f078263c500"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x7f078136ab10" loc="70:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcSingle.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </variable>
          <variable name="refVoltage" ref="0x7f0781367020" loc="70:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcSingle.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </variable>
          <variable name="leftJustify" ref="0x7f07813673a0" loc="71:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcSingle.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f078263c500"/></typename>
            </type-int>
          </variable>
          <variable name="prescaler" ref="0x7f0781367710" loc="71:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcSingle.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7f0781365350" loc="91:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcSingle.nc">
        <documentation loc="83:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcSingle.nc">
          <short>&#10; Cancel an outstanding getData operation.</short>
          <long>&#10; Cancel an outstanding getData operation. Use with care, to&#10; avoid problems with races between the dataReady event and cancel.&#10; @return TRUE if a conversion was in-progress or an interrupt&#10;   was pending. dataReady will not be signaled. FALSE if the&#10;   conversion was already complete. dataReady will be (or has&#10;   already been) signaled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm1280AdcSingle"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f078263c500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReady" ref="0x7f0781366a40" loc="81:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcSingle.nc">
        <documentation loc="73:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcSingle.nc">
          <short>&#10; Indicates a sample has been recorded by the ADC as the result&#10; of a &#60;code>getData()&#60;/code> command.</short>
          <long>&#10; Indicates a sample has been recorded by the ADC as the result&#10; of a &#60;code>getData()&#60;/code> command.&#10;&#10; @param data a 2 byte unsigned data value sampled by the ADC.&#10; @param precise if the conversion precise, FALSE if it wasn't. This&#10;   values matches the result from the &#60;code>getData&#60;/code> call.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm1280AdcSingle"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f0782f56610"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f078263c500"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f0781366470" loc="81:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcSingle.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f0782f56610"/></typename>
            </type-int>
          </variable>
          <variable name="precise" ref="0x7f07813667b0" loc="81:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcSingle.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f078263c500"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm1280AdcMultiple" loc="77:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcMultiple.nc">
      <documentation loc="42:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcMultiple.nc">
        <short>&#10; Hardware Abstraction Layer interface of Atmega128 for acquiring data&#10; from multiple channels using the ATmega128's free-running mode.</short>
        <long>&#10; Hardware Abstraction Layer interface of Atmega128 for acquiring data&#10; from multiple channels using the ATmega128's free-running mode.&#10; &#60;p>&#10; Because of the possibility that samples may be imprecise after &#10; switching channels and/or reference voltages, and because there&#10; is a one sample delay on swithcing channels and reference voltages,&#10; Atm1280ADCMultiple is complex. Two straightforward uses are:&#10; &#60;ol type=&#34;A&#34;>&#10; &#60;li>Acquire N samples from channel C:&#10;    &#60;ol>&#10;    &#60;li>call getData to start sampling on channel C at the desired rate&#10;       (note that the choice of prescalers is very limited, so you&#10;       don't have many choices for sampling rate)&#10;    &#60;li>ignore the first dataReady event&#10;    &#60;li>use the results of the next N dataReady() events, return FALSE&#10;       on the last one&#10;    &#60;/ol>&#10; &#60;li>Acquire one sample each from channels C1, ..., Cn (this pseudocode&#10;    assumes that none of these channels are differential)&#10;    &#60;ol>&#10;    &#60;li>call getData to start sampling on channel C1&#10;    &#60;li>on the ith dataReady event switch to channel Ci+1 by changing&#10;       *newChannel&#10;    &#60;li>the data passed to the ith dataReady event is for channel Ci-1&#10;       (the data from the first dataReady event is ignored)&#10;    &#60;/ol>&#10; &#60;/ol>&#10;&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="getData" ref="0x7f0781361020" loc="100:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcMultiple.nc">
        <documentation loc="79:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcMultiple.nc">
          <short>&#10; Initiates free-running ADC conversions, with the ability to switch &#10; channels and reference-voltage with a one sample delay.</short>
          <long>&#10; Initiates free-running ADC conversions, with the ability to switch &#10; channels and reference-voltage with a one sample delay.&#10;&#10; @param channel Initial A/D conversion channel. The channel can &#10;   be changed in the dataReady event, though these changes happen&#10;   with a one-sample delay (this is a hardware restriction).&#10; @param refVoltage Initial A/D reference voltage. See the&#10;   ATM1280_ADC_VREF_xxx constants in Atm1280ADC.h. Like the channel,&#10;   the reference voltage can be changed in the dataReady event with&#10;   a one-sample delay.&#10; @param leftJustify TRUE to place A/D result in high-order bits &#10;   (i.e., shifted left by 6 bits), low to place it in the low-order bits&#10; @param prescaler Prescaler value for the A/D conversion clock. If you &#10;  specify ATM1280_ADC_PRESCALE, a prescaler will be chosen that guarantees&#10;  full precision. Other prescalers can be used to get faster conversions. &#10;  See the ATmega128 manual for details.&#10; @return TRUE if the conversion will be precise, FALSE if it will be &#10;   imprecise (due to a change in reference voltage, or switching to a&#10;   differential input channel)&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm1280AdcMultiple"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f078263c500"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f078263c500"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x7f07813631f0" loc="100:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </variable>
          <variable name="refVoltage" ref="0x7f0781363570" loc="100:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </variable>
          <variable name="leftJustify" ref="0x7f07813638f0" loc="101:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f078263c500"/></typename>
            </type-int>
          </variable>
          <variable name="prescaler" ref="0x7f0781363c60" loc="101:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReady" ref="0x7f0781360e00" loc="119:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcMultiple.nc">
        <documentation loc="103:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcMultiple.nc">
          <short>&#10; Returns the next sample in a free-running conversion.</short>
          <long>&#10; Returns the next sample in a free-running conversion. Allow the user&#10; to switch channels and/or reference voltages with a one sample delay.&#10;&#10; @param data a 2 byte unsigned data value sampled by the ADC.&#10; @param precise if this conversion was precise, FALSE if it wasn't &#10;   (we assume that the second conversion after a change of reference&#10;   voltage or after switching to a differential channel is precise)&#10; @param channel Channel this sample was from.&#10; @param newChannel Change this parameter to switch to a new channel&#10;   for the second next sample.&#10; @param newRefVoltage Change this parameter to change the reference &#10;   voltage for the second next sample.&#10;&#10; @return TRUE to continue sampling, FALSE to stop.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm1280AdcMultiple"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f078263c500"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f0782f56610"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f078263c500"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f0781361c50" loc="119:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcMultiple.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f0782f56610"/></typename>
            </type-int>
          </variable>
          <variable name="precise" ref="0x7f0781360020" loc="119:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f078263c500"/></typename>
            </type-int>
          </variable>
          <variable name="channel" ref="0x7f0781360380" loc="119:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </variable>
          <variable name="newChannel" ref="0x7f0781360760" loc="120:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcMultiple.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="newRefVoltage" ref="0x7f0781360b40" loc="120:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcMultiple.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm1280Adc" loc="48:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280Adc.nc">
      <documentation loc="36:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280Adc.nc">
        <short>&#10; HPL interface to the Atmega1280 A/D conversion subsystem.</short>
        <long>&#10; HPL interface to the Atmega1280 A/D conversion subsystem. Please see the&#10; Atmega1280 manual for full details on the functioning of this subsystem.&#10; &#60;p>&#10; A word of warning: the Atmega1280 SLEEP instruction initiates an A/D&#10; conversion when the ADC and ADC interrupt are enabled.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="setSingle" ref="0x7f0781350c40" loc="114:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280Adc.nc">
        <documentation loc="111:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280Adc.nc">
          <short>&#10; Disable continuous sampling&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm1280Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAdmux" ref="0x7f07813588a0" loc="53:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280Adc.nc">
        <documentation loc="49:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280Adc.nc">
          <short>&#10; Read the ADMUX (ADC selection) register&#10; </short>
          <long>&#10; Read the ADMUX (ADC selection) register&#10; @return Current ADMUX value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm1280Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f0782590eb0"/>
            <typename><typedef-ref name="Atm1280Admux_t" ref="0x7f078258f3a0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPrescaler" ref="0x7f078134c040" loc="140:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280Adc.nc">
        <documentation loc="135:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280Adc.nc">
          <short>&#10; Set ADC prescaler selection bits&#10; </short>
          <long>&#10; Set ADC prescaler selection bits&#10; @param scale New ADC prescaler. Must be one of the ATM1280_ADC_PRESCALE_xxx&#10;   values from Atm1280Adc.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm1280Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="scale" ref="0x7f078134eda0" loc="140:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280Adc.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isEnabled" ref="0x7f078134f530" loc="122:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280Adc.nc">
        <documentation loc="118:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280Adc.nc">
          <short>&#10; Is ADC enabled?&#10; </short>
          <long>&#10; Is ADC enabled?&#10; @return TRUE if the ADC is enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm1280Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f078263c500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableAdc" ref="0x7f0781354650" loc="82:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280Adc.nc">
        <documentation loc="79:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280Adc.nc">
          <short>&#10; Enable ADC sampling&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm1280Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAdmux" ref="0x7f0781356350" loc="58:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280Adc.nc">
        <documentation loc="54:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280Adc.nc">
          <short>&#10; Set the ADMUX (ADC selection) register&#10; </short>
          <long>&#10; Set the ADMUX (ADC selection) register&#10; @param admux New ADMUX value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm1280Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f0782590eb0"/>
              <typename><typedef-ref name="Atm1280Admux_t" ref="0x7f078258f3a0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="admux" ref="0x7f07813560d0" loc="58:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280Adc.nc">
            <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f0782590eb0"/>
              <typename><typedef-ref name="Atm1280Admux_t" ref="0x7f078258f3a0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableInterruption" ref="0x7f07813535a0" loc="91:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280Adc.nc">
        <documentation loc="88:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280Adc.nc">
          <short>&#10; Enable ADC interrupt&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm1280Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isComplete" ref="0x7f078134e540" loc="133:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280Adc.nc">
        <documentation loc="128:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280Adc.nc">
          <short>&#10; Is A/D conversion complete? Note that this flag is automatically&#10; cleared when an A/D interrupt occurs.</short>
          <long>&#10; Is A/D conversion complete? Note that this flag is automatically&#10; cleared when an A/D interrupt occurs.&#10; @return TRUE if the A/D conversion is complete, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm1280Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f078263c500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7f078134c840" loc="150:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280Adc.nc">
        <documentation loc="142:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280Adc.nc">
          <short>&#10; Cancel A/D conversion and any pending A/D interrupt.</short>
          <long>&#10; Cancel A/D conversion and any pending A/D interrupt. Also disables the&#10; ADC interruption (otherwise a sample might start at the next sleep&#10; instruction). This command can assume that the A/D converter is enabled. &#10; @return TRUE if an A/D conversion was in progress or an A/D interrupt&#10;   was pending, FALSE otherwise. In single conversion mode, a return&#10;   of TRUE implies that the dataReady event will not be signaled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm1280Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f078263c500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableAdc" ref="0x7f0781354db0" loc="86:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280Adc.nc">
        <documentation loc="83:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280Adc.nc">
          <short>&#10; Disable ADC sampling&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm1280Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resetInterrupt" ref="0x7f07813514f0" loc="99:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280Adc.nc">
        <documentation loc="96:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280Adc.nc">
          <short>&#10; Clear the ADC interrupt flag&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm1280Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableInterruption" ref="0x7f0781353d50" loc="95:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280Adc.nc">
        <documentation loc="92:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280Adc.nc">
          <short>&#10; Disable ADC interrupt&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm1280Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startConversion" ref="0x7f0781351c80" loc="106:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280Adc.nc">
        <documentation loc="101:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280Adc.nc">
          <short>&#10; Start ADC conversion.</short>
          <long>&#10; Start ADC conversion. If ADC interrupts are enabled, the dataReady event&#10; will be signaled once (in non-continuous mode) or repeatedly (in&#10; continuous mode).&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm1280Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isStarted" ref="0x7f078134fd00" loc="127:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280Adc.nc">
        <documentation loc="123:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280Adc.nc">
          <short>&#10; Is A/D conversion in progress?&#10; </short>
          <long>&#10; Is A/D conversion in progress?&#10; @return TRUE if the A/D conversion is in progress, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm1280Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f078263c500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAdcsra" ref="0x7f0781355650" loc="69:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280Adc.nc">
        <documentation loc="65:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280Adc.nc">
          <short>&#10; Set the ADCSRA (ADC control) register&#10; </short>
          <long>&#10; Set the ADCSRA (ADC control) register&#10; @param adcsra New ADCSRA value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm1280Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f0782589cb0"/>
              <typename><typedef-ref name="Atm1280Adcsra_t" ref="0x7f0782588440"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="adcsra" ref="0x7f07813553d0" loc="69:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280Adc.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f0782589cb0"/>
              <typename><typedef-ref name="Atm1280Adcsra_t" ref="0x7f0782588440"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setContinuous" ref="0x7f07813504f0" loc="110:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280Adc.nc">
        <documentation loc="107:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280Adc.nc">
          <short>&#10; Enable continuous sampling&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm1280Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAdcsra" ref="0x7f0781356ba0" loc="64:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280Adc.nc">
        <documentation loc="60:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280Adc.nc">
          <short>&#10; Read the ADCSRA (ADC control) register&#10; </short>
          <long>&#10; Read the ADCSRA (ADC control) register&#10; @return Current ADCSRA value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm1280Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f0782589cb0"/>
            <typename><typedef-ref name="Atm1280Adcsra_t" ref="0x7f0782588440"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getValue" ref="0x7f0781355e60" loc="75:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280Adc.nc">
        <documentation loc="71:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280Adc.nc">
          <short>&#10; Read the latest A/D conversion result&#10; </short>
          <long>&#10; Read the latest A/D conversion result&#10; @return A/D value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm1280Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f0782f56610"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReady" ref="0x7f078134b400" loc="156:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280Adc.nc">
        <documentation loc="152:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280Adc.nc">
          <short>&#10; A/D interrupt occured&#10; </short>
          <long>&#10; A/D interrupt occured&#10; @param data Latest A/D conversion result&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm1280Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f0782f56610"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f078134b180" loc="156:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280Adc.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f0782f56610"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplLcd" loc="6:../tinyos_ws18/tos/lib_ecs/lcd/HplLcd.nc">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/lcd/HplLcd.nc">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;22.01.2012&#10;</long>
      </documentation>
      <function command="" provided="0" name="writeData" ref="0x7f0781220020" loc="8:../tinyos_ws18/tos/lib_ecs/lcd/HplLcd.nc">
        <interfacedef-ref qname="HplLcd"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f0781221c50" loc="8:../tinyos_ws18/tos/lib_ecs/lcd/HplLcd.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="writeCommand" ref="0x7f07812215a0" loc="7:../tinyos_ws18/tos/lib_ecs/lcd/HplLcd.nc">
        <interfacedef-ref qname="HplLcd"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="com" ref="0x7f0781221320" loc="7:../tinyos_ws18/tos/lib_ecs/lcd/HplLcd.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0782f57ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
  </interfacedefs>
  <tags>
  </tags>
  <variables>
  </variables>
  <constants>
  </constants>
  <functions>
  </functions>
  <typedefs>
  </typedefs>
</nesc>
